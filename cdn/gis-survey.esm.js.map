{"version":3,"file":"gis-survey.esm.js","sources":["../src/core/event-emitter.js","../src/core/CoordinateTransformer.js","../src/core/GeoidModel.js","../src/core/SimpleWGS84Transformer.js","../src/core/TransformerFactory.js","../src/core/Coordinate.js","../src/core/CoordinateUtils.js","../src/core/GeometryEngine.js","../src/core/index.js","../src/features/FeatureBase.js","../src/features/PointFeature.js","../src/features/LineFeature.js","../src/features/PolygonFeature.js","../src/features/FeatureCollection.js","../src/tools/ToolBase.js","../src/tools/MeasurementTool.js","../src/tools/OffsetTool.js","../src/tools/DrawingTool.js","../src/tools/EditingTool.js","../src/tools/SnappingManager.js","../src/tools/SurveyManager.js","../src/features/index.js","../src/map/MapInterface.js","../src/map/Map3DInterface.js","../src/map/ElevationService.js","../src/map/GoogleMapsAdapter.js","../src/map/LeafletAdapter.js","../src/map/GoogleMapsElevationService.js","../src/map/MapFactory.js","../src/map/rendering/RenderingStrategy.js","../src/map/rendering/GoogleMapsRenderingStrategy.js","../src/map/LayerManager.js","../src/map/index.js","../src/tools/SimplifiedDrawingTool.js","../src/index.js"],"sourcesContent":["/**\n * EventEmitter - Simple event system for component communication\n * \n * Independent copy for gis-survey.js module to avoid dependencies on gnss.js module\n */\nexport class EventEmitter {\n  constructor() {\n    this.events = {};\n    this.debugMode = false;\n  }\n\n  /**\n   * Subscribe to an event\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, listener) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    \n    this.events[event].push(listener);\n    \n    // Return unsubscribe function\n    return () => {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    };\n  }\n  \n  /**\n   * Modern DOM-style event subscription (alias for on)\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   */\n  addEventListener(event, listener) {\n    return this.on(event, listener);\n  }\n\n  /**\n   * Subscribe to an event once\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   */\n  once(event, listener) {\n    const remove = this.on(event, (...args) => {\n      remove();\n      listener(...args);\n    });\n  }\n\n  /**\n   * Emit an event with data\n   * @param {string} event - Event name\n   * @param {*} data - Event data\n   */\n  emit(event, data) {\n    if (this.debugMode) {\n      console.log(`[EventEmitter] ${event}:`, data);\n    }\n    \n    if (this.events[event]) {\n      this.events[event].forEach(listener => {\n        try {\n          listener(data);\n        } catch (error) {\n          console.error(`Error in event listener for '${event}':`, error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Remove a specific listener for an event\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function to remove\n   */\n  off(event, listener) {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    }\n  }\n  \n  /**\n   * Modern DOM-style event unsubscription (alias for off)\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function to remove\n   */\n  removeEventListener(event, listener) {\n    return this.off(event, listener);\n  }\n  \n  /**\n   * Remove all listeners for an event\n   * @param {string} event - Event name\n   */\n  removeAllListeners(event) {\n    if (event) {\n      delete this.events[event];\n    } else {\n      this.events = {};\n    }\n  }\n\n  /**\n   * Enable/disable debug mode\n   * @param {boolean} enabled - Whether debug mode is enabled\n   */\n  setDebug(enabled) {\n    this.debugMode = enabled;\n  }\n}\n\n// For backward compatibility\nexport default EventEmitter;","/**\n * CoordinateTransformer.js - Abstract interface for coordinate transformations\n * \n * Defines the interface that all coordinate transformers must implement.\n * This allows for swapping transformer implementations (simple vs. proj4js)\n * while maintaining consistent functionality.\n */\n\nimport { Coordinate } from './Coordinate.js';\n\n/**\n * Abstract base class for coordinate transformations.\n */\nexport class CoordinateTransformer {\n  /**\n   * Creates a new coordinate transformer.\n   * @throws {Error} If instantiated directly (abstract class)\n   */\n  constructor() {\n    if (this.constructor === CoordinateTransformer) {\n      throw new Error('CoordinateTransformer is an abstract class and cannot be instantiated directly');\n    }\n    \n    // Initialize cache for performance\n    this._transformCache = new Map();\n    this._geoidCache = new Map();\n    this._datelineHandled = false;\n  }\n  \n  /**\n   * Transform a coordinate from one projection to another.\n   * @param {Coordinate} coordinate - The coordinate to transform\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection\n   * @returns {Coordinate} A new coordinate in the target projection\n   * @throws {Error} Must be implemented by subclasses\n   */\n  transform(_coordinate, _fromProjection, _toProjection) {\n    throw new Error('Method transform() must be implemented by subclasses');\n  }\n  \n  /**\n   * Get list of supported projections.\n   * @returns {string[]} Array of supported projection identifiers\n   * @throws {Error} Must be implemented by subclasses\n   */\n  getSupportedProjections() {\n    throw new Error('Method getSupportedProjections() must be implemented by subclasses');\n  }\n  \n  /**\n   * Convert ellipsoidal height to orthometric height (from WGS84 ellipsoid to mean sea level).\n   * @param {Coordinate} coordinate - Coordinate with ellipsoidal height\n   * @returns {Coordinate} New coordinate with orthometric height\n   * @throws {Error} Must be implemented by subclasses\n   */\n  convertEllipsoidalToOrthometric(_coordinate) {\n    throw new Error('Method convertEllipsoidalToOrthometric() must be implemented by subclasses');\n  }\n  \n  /**\n   * Convert orthometric height to ellipsoidal height (from mean sea level to WGS84 ellipsoid).\n   * @param {Coordinate} coordinate - Coordinate with orthometric height\n   * @returns {Coordinate} New coordinate with ellipsoidal height\n   * @throws {Error} Must be implemented by subclasses\n   */\n  convertOrthometricToEllipsoidal(_coordinate) {\n    throw new Error('Method convertOrthometricToEllipsoidal() must be implemented by subclasses');\n  }\n  \n  /**\n   * Clear the internal transformation cache.\n   */\n  clearCache() {\n    this._transformCache.clear();\n    this._geoidCache.clear();\n  }\n  \n  /**\n   * Check if a coordinate crosses the international date line during transformation.\n   * @param {Coordinate} coordinate - The coordinate to check\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection\n   * @returns {boolean} True if the transformation crosses the date line\n   * @protected\n   */\n  _crossesDateLine(_coordinate, _fromProjection, _toProjection) {\n    // Simplistic date line crossing detection\n    // For more complex cases, subclasses should override this method\n    if (Math.abs(_coordinate.lng) > 170) {\n      // Near the date line, we might cross during transformation\n      return true;\n    }\n    return false;\n  }\n  \n  /**\n   * Generate a unique cache key for a transformation.\n   * @param {Coordinate} coordinate - The coordinate to transform\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection \n   * @returns {string} Cache key\n   * @protected\n   */\n  _getCacheKey(coordinate, fromProjection, toProjection) {\n    // Use precision that is high enough for our needs but allows caching\n    const lat = coordinate.lat.toFixed(9);\n    const lng = coordinate.lng.toFixed(9);\n    const elev = coordinate.elevation.toFixed(3);\n    \n    return `${lat}:${lng}:${elev}:${fromProjection}:${toProjection}`;\n  }\n  \n  /**\n   * Handle date line crossing in transformations.\n   * @param {Coordinate} coordinate - The coordinate to transform\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection\n   * @returns {Coordinate} Transformed coordinate\n   * @protected\n   */\n  _handleDateLineCrossing(coordinate, fromProjection, toProjection) {\n    // Prevent recursive handling\n    if (this._datelineHandled) {\n      this._datelineHandled = false;\n      return this._doTransform(coordinate, fromProjection, toProjection);\n    }\n    \n    this._datelineHandled = true;\n    \n    // Adjust longitude to avoid the date line\n    let adjustedCoord;\n    if (coordinate.lng > 0) {\n      // Adjust western hemisphere coordinates\n      adjustedCoord = new Coordinate(\n        coordinate.lat,\n        coordinate.lng - 360, // Shift to equivalent position without crossing date line\n        coordinate.elevation,\n        coordinate.heightReference,\n        fromProjection,\n      );\n    } else {\n      // Adjust eastern hemisphere coordinates\n      adjustedCoord = new Coordinate(\n        coordinate.lat,\n        coordinate.lng + 360, // Shift to equivalent position without crossing date line\n        coordinate.elevation,\n        coordinate.heightReference,\n        fromProjection,\n      );\n    }\n    \n    // Transform with adjusted coordinates\n    const transformed = this.transform(adjustedCoord, fromProjection, toProjection);\n    \n    // Restore to proper hemisphere\n    if (transformed.lng < -180) {\n      transformed.lng += 360;\n    } else if (transformed.lng > 180) {\n      transformed.lng -= 360;\n    }\n    \n    this._datelineHandled = false;\n    return transformed;\n  }\n  \n  /**\n   * Log transformation errors with context.\n   * @param {Error} error - The error that occurred\n   * @param {Coordinate} coordinate - The coordinate being transformed\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection\n   * @protected\n   */\n  _logTransformationError(error, coordinate, fromProjection, toProjection) {\n    console.error(`Transformation error: ${error.message}`, {\n      source: {\n        projection: fromProjection,\n        lat: coordinate.lat,\n        lng: coordinate.lng,\n        elev: coordinate.elevation,\n      },\n      target: toProjection,\n      error: error.stack,\n    });\n  }\n}","/**\n * GeoidModel.js - Model for converting between height reference systems\n * \n * Provides geoid height (separation between ellipsoid and orthometric height)\n * calculations for converting between ellipsoidal heights (GPS) and\n * orthometric heights (mean sea level).\n */\n\n/**\n * Static class that provides geoid height information.\n * \n * In a full implementation, this would load and interpolate from a geoid model\n * grid file (like GEOID18 for the USA). For this implementation, we'll use a\n * simplified, approximate model for demonstration purposes.\n */\nexport class GeoidModel {\n  /**\n   * Get the geoid height (separation between ellipsoid and geoid) at a location.\n   * Positive value means the geoid is above the ellipsoid.\n   * \n   * @param {number} lat - Latitude in decimal degrees\n   * @param {number} lng - Longitude in decimal degrees\n   * @returns {number} Geoid height in meters\n   */\n  static getHeight(lat, lng) {\n    // This is a simplified model for demonstration\n    // In a real application, this would load and interpolate from a grid file\n    // like GEOID18, EGM2008, etc.\n    \n    // For North America, a very simplified approximation\n    // Values generally range from -8m to -40m in North America\n    \n    // Check bounds\n    if (lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n      throw new Error(`Invalid coordinates: ${lat}, ${lng}`);\n    }\n    \n    // For areas in the continental US, use a simple bilinear approximation\n    if (lat >= 24 && lat <= 50 && lng >= -125 && lng <= -66) {\n      return this._approximateUSGeoidHeight(lat, lng);\n    }\n    \n    // Basic approximation with latitude as the primary driver\n    let height = 0;\n    \n    // Higher values in the south (more separation)\n    // Lower values in the north (less separation)\n    // Based on EGM2008 very generalized trends\n    if (lat >= 0 && lat <= 90) { // Northern hemisphere\n      height = -30 + (lat / 90) * 15; // Range from ~ -30 to -15 meters\n    } else { // Southern hemisphere\n      height = -30 + (lat / -90) * 15; // Range from ~ -30 to -15 meters\n    }\n    \n    // Add some longitude influence (rough approximation)\n    const lngFactor = Math.sin((lng + 100) * Math.PI / 180) * 5; // ±5m variation\n    height += lngFactor;\n    \n    return height;\n  }\n  \n  /**\n   * More detailed approximation for the continental United States.\n   * @param {number} lat - Latitude in decimal degrees\n   * @param {number} lng - Longitude in decimal degrees\n   * @returns {number} Approximate geoid height in meters\n   * @private\n   */\n  static _approximateUSGeoidHeight(lat, lng) {\n    // These would be replaced with proper grid interpolation in a real implementation\n    // Corners of a simplified geoid model for the continental US\n    const corners = [\n      { lat: 24, lng: -125, height: -32.5 }, // Southwest\n      { lat: 24, lng: -66, height: -29.5 },  // Southeast\n      { lat: 50, lng: -125, height: -22.5 }, // Northwest\n      { lat: 50, lng: -66, height: -34.0 },   // Northeast\n    ];\n    \n    // Normalize coordinates to 0-1 range within the grid\n    const normalizedLat = (lat - 24) / (50 - 24);\n    const normalizedLng = (lng - (-125)) / ((-66) - (-125));\n    \n    // Bilinear interpolation\n    const h1 = corners[0].height * (1 - normalizedLng) + corners[1].height * normalizedLng;\n    const h2 = corners[2].height * (1 - normalizedLng) + corners[3].height * normalizedLng;\n    \n    const geoidHeight = h1 * (1 - normalizedLat) + h2 * normalizedLat;\n    \n    // Add some local variation (simplified)\n    const localVariation = Math.sin(lat * 8) * Math.sin(lng * 6) * 2.5;\n    \n    return geoidHeight + localVariation;\n  }\n  \n  /**\n   * Load a geoid model grid file.\n   * This would be implemented in a full version of the library.\n   * \n   * @param {string} modelName - Name of the geoid model to load\n   * @returns {Promise<boolean>} Promise that resolves when the model is loaded\n   */\n  static async loadModel(modelName) {\n    console.warn(`GeoidModel.loadModel: ${modelName} not implemented. Using approximation.`);\n    return Promise.resolve(false);\n  }\n}","/**\n * SimpleWGS84Transformer.js - Implementation focused on WGS84 and common North American projections\n * \n * This implementation focuses on common North American coordinate systems used by\n * civil contractors, while being lightweight and efficient. It provides a simplified\n * set of transformations without requiring the full proj4js library.\n */\n\nimport { CoordinateTransformer } from './CoordinateTransformer.js';\nimport { Coordinate } from './Coordinate.js';\nimport { GeoidModel } from './GeoidModel.js';\n\n/**\n * Simple WGS84-focused coordinate transformer.\n * Supports common North American datums and projections.\n */\nexport class SimpleWGS84Transformer extends CoordinateTransformer {\n  /**\n   * Create a new SimpleWGS84Transformer.\n   */\n  constructor() {\n    super();\n    \n    // Define supported projections with parameters\n    this.projections = {\n      'WGS84': { // Standard GPS coordinates (EPSG:4326)\n        datum: 'WGS84',\n        type: 'geographic',\n        epsg: '4326',\n        params: {},\n      },\n      'NAD83': { // North American Datum 1983\n        datum: 'NAD83',\n        type: 'geographic',\n        epsg: '4269',\n        params: {},\n      },\n      'NAD27': { // North American Datum 1927\n        datum: 'NAD27',\n        type: 'geographic',\n        epsg: '4267',\n        params: {},\n      },\n      'UTM_NAD83_N': { // UTM North zones with NAD83 datum\n        datum: 'NAD83',\n        type: 'utm',\n        params: { north: true },\n      },\n      'UTM_NAD83_S': { // UTM South zones with NAD83 datum\n        datum: 'NAD83',\n        type: 'utm',\n        params: { north: false },\n      },\n      'StatePlane_NAD83': { // State Plane with NAD83 datum\n        datum: 'NAD83',\n        type: 'stateplane',\n        params: {},\n      },\n    };\n    \n    // Datum shift parameters\n    this.datumShifts = {\n      'WGS84_to_NAD83': { // Very minor shift for most applications\n        dx: 0.99343, // meters\n        dy: -1.90331, // meters\n        dz: -0.52655, // meters\n        rx: 0.025915, // arcseconds\n        ry: 0.009426, // arcseconds\n        rz: 0.011599, // arcseconds\n        ds: -0.00062,  // parts per million\n      },\n      'NAD83_to_NAD27': {\n        // Parameters vary by region - simplification\n        // This is a rough approximation - real transformations use grid files\n        dx: -8.0, // meters\n        dy: 160.0, // meters\n        dz: 176.0, // meters\n      },\n    };\n  }\n  \n  /**\n   * Get list of supported projections.\n   * @returns {string[]} Array of supported projection identifiers\n   */\n  getSupportedProjections() {\n    return Object.keys(this.projections);\n  }\n  \n  /**\n   * Transform a coordinate from one projection to another.\n   * @param {Coordinate} coordinate - The coordinate to transform\n   * @param {string} fromProjection - Source projection\n   * @param {string} toProjection - Target projection\n   * @returns {Coordinate} A new coordinate in the target projection\n   * @throws {Error} If projections are not supported\n   */\n  transform(coordinate, fromProjection, toProjection) {\n    // Validate inputs\n    this._validateProjection(fromProjection);\n    this._validateProjection(toProjection);\n    \n    // If same projection, return a copy\n    if (fromProjection === toProjection) {\n      return coordinate.clone();\n    }\n    \n    // Check for cached result\n    const cacheKey = this._getCacheKey(coordinate, fromProjection, toProjection);\n    const cached = this._transformCache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n    \n    // Handle date line crossing\n    if (this._crossesDateLine(coordinate, fromProjection, toProjection)) {\n      return this._handleDateLineCrossing(coordinate, fromProjection, toProjection);\n    }\n    \n    // Transform the coordinate\n    let result;\n    \n    try {\n      // First convert to geographic coordinates (lat/lon) on source datum if needed\n      let geographicSource;\n      if (this.projections[fromProjection].type === 'geographic') {\n        geographicSource = coordinate.clone();\n      } else if (this.projections[fromProjection].type === 'utm') {\n        geographicSource = this._utmToGeographic(coordinate, this.projections[fromProjection].params);\n      } else if (this.projections[fromProjection].type === 'stateplane') {\n        geographicSource = this._statePlaneToGeographic(coordinate);\n      } else {\n        throw new Error(`Unsupported projection type: ${this.projections[fromProjection].type}`);\n      }\n      \n      // Then transform between datums if needed\n      let geographicTarget;\n      const sourceDatum = this.projections[fromProjection].datum;\n      const targetDatum = this.projections[toProjection].datum;\n      \n      if (sourceDatum === targetDatum) {\n        geographicTarget = geographicSource;\n      } else {\n        geographicTarget = this._transformDatum(geographicSource, sourceDatum, targetDatum);\n      }\n      \n      // Finally convert to target projection system if needed\n      if (this.projections[toProjection].type === 'geographic') {\n        result = geographicTarget.clone();\n        result.projection = toProjection;\n      } else if (this.projections[toProjection].type === 'utm') {\n        result = this._geographicToUtm(geographicTarget, this.projections[toProjection].params);\n        result.projection = toProjection;\n      } else if (this.projections[toProjection].type === 'stateplane') {\n        result = this._geographicToStatePlane(geographicTarget);\n        result.projection = toProjection;\n      } else {\n        throw new Error(`Unsupported projection type: ${this.projections[toProjection].type}`);\n      }\n      \n      // Cache the result\n      this._transformCache.set(cacheKey, result);\n      \n      return result;\n    } catch (error) {\n      this._logTransformationError(error, coordinate, fromProjection, toProjection);\n      throw new Error(`Transformation failed from ${fromProjection} to ${toProjection}: ${error.message}`);\n    }\n  }\n  \n  /**\n   * Convert ellipsoidal height to orthometric height.\n   * @param {Coordinate} coordinate - Coordinate with ellipsoidal height\n   * @returns {Coordinate} New coordinate with orthometric height\n   */\n  convertEllipsoidalToOrthometric(coordinate) {\n    const geoidHeight = this._getGeoidHeight(coordinate.lat, coordinate.lng);\n    \n    return new Coordinate(\n      coordinate.lat,\n      coordinate.lng,\n      coordinate.elevation - geoidHeight,\n      'orthometric',\n      coordinate.projection,\n    );\n  }\n  \n  /**\n   * Convert orthometric height to ellipsoidal height.\n   * @param {Coordinate} coordinate - Coordinate with orthometric height\n   * @returns {Coordinate} New coordinate with ellipsoidal height\n   */\n  convertOrthometricToEllipsoidal(coordinate) {\n    const geoidHeight = this._getGeoidHeight(coordinate.lat, coordinate.lng);\n    \n    return new Coordinate(\n      coordinate.lat,\n      coordinate.lng,\n      coordinate.elevation + geoidHeight,\n      'ellipsoidal',\n      coordinate.projection,\n    );\n  }\n  \n  /**\n   * Get the geoid height (separation between ellipsoid and geoid) at a location.\n   * @param {number} lat - Latitude in decimal degrees\n   * @param {number} lng - Longitude in decimal degrees\n   * @returns {number} Geoid height in meters\n   * @private\n   */\n  _getGeoidHeight(lat, lng) {\n    // Check cache first\n    const cacheKey = `${lat.toFixed(4)}:${lng.toFixed(4)}`;\n    const cached = this._geoidCache.get(cacheKey);\n    if (cached !== undefined) {\n      return cached;\n    }\n    \n    // Use the GeoidModel to get the height\n    const geoidHeight = GeoidModel.getHeight(lat, lng);\n    \n    // Cache the result\n    this._geoidCache.set(cacheKey, geoidHeight);\n    \n    return geoidHeight;\n  }\n  \n  /**\n   * Validate that a projection is supported.\n   * @param {string} projection - Projection identifier\n   * @throws {Error} If projection is not supported\n   * @private\n   */\n  _validateProjection(projection) {\n    if (!this.projections[projection]) {\n      throw new Error(`Unsupported projection: ${projection}. Supported projections are: ${this.getSupportedProjections().join(', ')}`);\n    }\n  }\n  \n  /**\n   * Transform coordinates between datums.\n   * @param {Coordinate} coordinate - Geographic coordinate to transform\n   * @param {string} fromDatum - Source datum\n   * @param {string} toDatum - Target datum\n   * @returns {Coordinate} Transformed coordinate\n   * @private\n   */\n  _transformDatum(coordinate, fromDatum, toDatum) {\n    if (fromDatum === toDatum) {\n      return coordinate.clone();\n    }\n    \n    // We'll use Helmert transformation for datum shifts\n    if (fromDatum === 'WGS84' && toDatum === 'NAD83') {\n      return this._applyHelmertTransformation(coordinate, this.datumShifts.WGS84_to_NAD83);\n    }\n    \n    if (fromDatum === 'NAD83' && toDatum === 'WGS84') {\n      return this._applyHelmertTransformation(coordinate, this._invertHelmertParams(this.datumShifts.WGS84_to_NAD83));\n    }\n    \n    if (fromDatum === 'NAD83' && toDatum === 'NAD27') {\n      return this._applyHelmertTransformation(coordinate, this.datumShifts.NAD83_to_NAD27);\n    }\n    \n    if (fromDatum === 'NAD27' && toDatum === 'NAD83') {\n      return this._applyHelmertTransformation(coordinate, this._invertHelmertParams(this.datumShifts.NAD83_to_NAD27));\n    }\n    \n    if (fromDatum === 'WGS84' && toDatum === 'NAD27') {\n      // Transform in two steps: WGS84 -> NAD83 -> NAD27\n      const nad83 = this._transformDatum(coordinate, 'WGS84', 'NAD83');\n      return this._transformDatum(nad83, 'NAD83', 'NAD27');\n    }\n    \n    if (fromDatum === 'NAD27' && toDatum === 'WGS84') {\n      // Transform in two steps: NAD27 -> NAD83 -> WGS84\n      const nad83 = this._transformDatum(coordinate, 'NAD27', 'NAD83');\n      return this._transformDatum(nad83, 'NAD83', 'WGS84');\n    }\n    \n    throw new Error(`Unsupported datum transformation: ${fromDatum} to ${toDatum}`);\n  }\n  \n  /**\n   * Apply Helmert transformation parameters.\n   * @param {Coordinate} coordinate - Geographic coordinate to transform\n   * @param {Object} params - Helmert transformation parameters\n   * @returns {Coordinate} Transformed coordinate\n   * @private\n   */\n  _applyHelmertTransformation(coordinate, params) {\n    // Convert lat/lon to 3D Cartesian coordinates (ECEF)\n    const ecef = this._geographicToECEF(coordinate);\n    \n    // Apply the 7-parameter Helmert transformation\n    const dx = params.dx || 0;\n    const dy = params.dy || 0;\n    const dz = params.dz || 0;\n    const rx = (params.rx || 0) * Math.PI / (180 * 3600); // arcseconds to radians\n    const ry = (params.ry || 0) * Math.PI / (180 * 3600);\n    const rz = (params.rz || 0) * Math.PI / (180 * 3600);\n    const ds = (params.ds || 0) / 1000000; // ppm to scale factor\n    \n    const x2 = (1 + ds) * (ecef.x + rz * ecef.y - ry * ecef.z) + dx;\n    const y2 = (1 + ds) * (-rz * ecef.x + ecef.y + rx * ecef.z) + dy;\n    const z2 = (1 + ds) * (ry * ecef.x - rx * ecef.y + ecef.z) + dz;\n    \n    // Convert back to geographic coordinates\n    return this._ecefToGeographic({ x: x2, y: y2, z: z2 }, coordinate.heightReference);\n  }\n  \n  /**\n   * Invert Helmert transformation parameters.\n   * @param {Object} params - Helmert transformation parameters\n   * @returns {Object} Inverted parameters\n   * @private\n   */\n  _invertHelmertParams(params) {\n    return {\n      dx: -(params.dx || 0),\n      dy: -(params.dy || 0),\n      dz: -(params.dz || 0),\n      rx: -(params.rx || 0),\n      ry: -(params.ry || 0),\n      rz: -(params.rz || 0),\n      ds: -(params.ds || 0),\n    };\n  }\n  \n  /**\n   * Convert geographic coordinates to ECEF (Earth-Centered, Earth-Fixed) coordinates.\n   * @param {Coordinate} coordinate - Geographic coordinate\n   * @returns {Object} ECEF coordinates { x, y, z }\n   * @private\n   */\n  _geographicToECEF(coordinate) {\n    const a = 6378137.0; // WGS84 semi-major axis in meters\n    const e2 = 0.00669437999014; // WGS84 first eccentricity squared\n    \n    // Handle different coordinate formats\n    const lat = coordinate.lat !== undefined ? coordinate.lat : coordinate.y;\n    const lng = coordinate.lng !== undefined ? coordinate.lng : coordinate.x;\n    const elevation = coordinate.elevation !== undefined ? coordinate.elevation : \n      (coordinate.z !== undefined ? coordinate.z : 0);\n    \n    // Validate coordinate values\n    if (lat === undefined || lng === undefined) {\n      throw new Error('Invalid coordinate: missing latitude or longitude');\n    }\n    \n    const φ = lat * Math.PI / 180; // latitude in radians\n    const λ = lng * Math.PI / 180; // longitude in radians\n    const h = elevation; // height above ellipsoid in meters\n    \n    const sinφ = Math.sin(φ);\n    const cosφ = Math.cos(φ);\n    const sinλ = Math.sin(λ);\n    const cosλ = Math.cos(λ);\n    \n    const N = a / Math.sqrt(1 - e2 * sinφ * sinφ); // radius of curvature in the prime vertical\n    \n    const x = (N + h) * cosφ * cosλ;\n    const y = (N + h) * cosφ * sinλ;\n    const z = (N * (1 - e2) + h) * sinφ;\n    \n    // Return in standard format plus original names for compatibility\n    return {\n      x, y, z,\n      lat, lng, elevation,\n      originalFormat: 'geographic',\n    };\n  }\n  \n  /**\n   * Convert ECEF coordinates to geographic coordinates.\n   * @param {Object} ecef - ECEF coordinates { x, y, z }\n   * @param {string} heightReference - Height reference system\n   * @returns {Coordinate} Geographic coordinate\n   * @private\n   */\n  _ecefToGeographic(ecef, heightReference) {\n    const a = 6378137.0; // WGS84 semi-major axis in meters\n    const e2 = 0.00669437999014; // WGS84 first eccentricity squared\n    const b = a * Math.sqrt(1 - e2); // semi-minor axis\n    \n    // Handle different coordinate formats if ECEF comes from different sources\n    const x = ecef.x;\n    const y = ecef.y;\n    const z = ecef.z;\n    \n    // Validate ECEF values\n    if (x === undefined || y === undefined || z === undefined) {\n      throw new Error('Invalid ECEF coordinate: missing x, y, or z component');\n    }\n    \n    const p = Math.sqrt(x*x + y*y); // distance from Z axis\n    const θ = Math.atan2(z * a, p * b); // parametric latitude\n    \n    const sinθ = Math.sin(θ);\n    const cosθ = Math.cos(θ);\n    \n    const φ = Math.atan2(\n      z + e2 * b * sinθ * sinθ * sinθ,\n      p - e2 * a * cosθ * cosθ * cosθ,\n    ); // latitude\n    \n    const λ = Math.atan2(y, x); // longitude\n    \n    const sinφ = Math.sin(φ);\n    const N = a / Math.sqrt(1 - e2 * sinφ * sinφ); // radius of curvature\n    \n    const h = p / Math.cos(φ) - N; // height above ellipsoid\n    \n    const lat = φ * 180 / Math.PI;\n    const lng = λ * 180 / Math.PI;\n    \n    // Create a new Coordinate using the standard format (lat, lng, elevation)\n    return new Coordinate(lat, lng, h, heightReference);\n  }\n  \n  /**\n   * Convert UTM coordinates to geographic coordinates.\n   * @param {Coordinate} coordinate - UTM coordinate\n   * @param {Object} params - UTM parameters including zone and hemisphere\n   * @returns {Coordinate} Geographic coordinate\n   * @private\n   */\n  _utmToGeographic(_coordinate, _params) {\n    // This would be a full implementation of the UTM to geographic conversion\n    // For simplicity, we'll provide a stub implementation - in production code\n    // this would use the full UTM conversion formulas\n    \n    // For demo purposes, we'll convert a fixed UTM coordinate\n    // In a real implementation, this would be determined from the coordinate's properties\n    // such as the UTM easting, northing, zone, and hemisphere\n    \n    throw new Error('UTM to Geographic conversion not fully implemented in SimpleWGS84Transformer');\n  }\n  \n  /**\n   * Convert geographic coordinates to UTM coordinates.\n   * @param {Coordinate} coordinate - Geographic coordinate\n   * @param {Object} params - UTM parameters including hemisphere\n   * @returns {Coordinate} UTM coordinate\n   * @private\n   */\n  _geographicToUtm(_coordinate, _params) {\n    // This would be a full implementation of the geographic to UTM conversion\n    // For simplicity, we'll provide a stub implementation - in production code\n    // this would use the full UTM conversion formulas\n    \n    throw new Error('Geographic to UTM conversion not fully implemented in SimpleWGS84Transformer');\n  }\n  \n  /**\n   * Convert State Plane coordinates to geographic coordinates.\n   * @param {Coordinate} coordinate - State Plane coordinate\n   * @returns {Coordinate} Geographic coordinate\n   * @private\n   */\n  _statePlaneToGeographic(_coordinate) {\n    // This would be a full implementation of the State Plane to geographic conversion\n    // For simplicity, we'll provide a stub implementation - in production code\n    // this would use the full State Plane conversion formulas for each state zone\n    \n    throw new Error('State Plane to Geographic conversion not fully implemented in SimpleWGS84Transformer');\n  }\n  \n  /**\n   * Convert geographic coordinates to State Plane coordinates.\n   * @param {Coordinate} coordinate - Geographic coordinate\n   * @returns {Coordinate} State Plane coordinate\n   * @private\n   */\n  _geographicToStatePlane(_coordinate) {\n    // This would be a full implementation of the geographic to State Plane conversion\n    // For simplicity, we'll provide a stub implementation - in production code\n    // this would use the full State Plane conversion formulas for each state zone\n    \n    throw new Error('Geographic to State Plane conversion not fully implemented in SimpleWGS84Transformer');\n  }\n}","/**\n * TransformerFactory.js - Factory for coordinate transformation providers\n * \n * Provides a central point for creating and accessing CoordinateTransformer \n * implementations. This factory pattern allows for switching transformer \n * implementations without changing client code.\n */\n\nimport { SimpleWGS84Transformer } from './SimpleWGS84Transformer.js';\n\n/**\n * Factory class for creating and accessing coordinate transformers.\n */\nexport class TransformerFactory {\n  // Static singleton instances for different transformer types\n  static _instances = new Map();\n  \n  // Selected transformer type\n  static _defaultType = 'simple';\n  \n  /**\n   * Set the default transformer type to use.\n   * @param {string} type - The transformer type ('simple' or 'proj4js')\n   */\n  static setDefaultType(type) {\n    if (!['simple', 'proj4js'].includes(type)) {\n      throw new Error(`Invalid transformer type: ${type}. Must be 'simple' or 'proj4js'`);\n    }\n    \n    this._defaultType = type;\n  }\n  \n  /**\n   * Get a transformer instance.\n   * @param {string} [type=null] - The transformer type to get, or null for default\n   * @returns {CoordinateTransformer} A coordinate transformer\n   */\n  static getTransformer(type = null) {\n    const transformerType = type || this._defaultType;\n    \n    // Check if we already have an instance\n    if (this._instances.has(transformerType)) {\n      return this._instances.get(transformerType);\n    }\n    \n    // Create a new instance\n    let transformer;\n    \n    switch (transformerType) {\n    case 'simple':\n      transformer = new SimpleWGS84Transformer();\n      break;\n        \n    case 'proj4js':\n      // Try to load proj4js if available\n      this._checkForProj4js();\n        \n      // We'll implement this when needed\n      throw new Error('Proj4js transformer not yet implemented. Use \"simple\" for now.');\n        \n    default:\n      throw new Error(`Unknown transformer type: ${transformerType}`);\n    }\n    \n    // Cache the instance\n    this._instances.set(transformerType, transformer);\n    \n    return transformer;\n  }\n  \n  /**\n   * Check if proj4js is available and log warning if not.\n   * @private\n   */\n  static _checkForProj4js() {\n    // Check if proj4js is available\n    if (typeof proj4 === 'undefined') {\n      console.warn('Proj4js transformer requested, but proj4js is not loaded. ' + \n                 'Make sure to include proj4.js in your project for full projection support.');\n      return false;\n    }\n    return true;\n  }\n  \n  /**\n   * Clear all cached transformer instances.\n   */\n  static clearCache() {\n    // Clear all transformer instances\n    for (const transformer of this._instances.values()) {\n      transformer.clearCache();\n    }\n    \n    this._instances.clear();\n  }\n  \n  /**\n   * Check if a certain transformer type is available.\n   * @param {string} type - The transformer type to check\n   * @returns {boolean} Whether the transformer is available\n   */\n  static isAvailable(type) {\n    switch (type) {\n    case 'simple':\n      return true;\n        \n    case 'proj4js':\n      return this._checkForProj4js();\n        \n    default:\n      return false;\n    }\n  }\n  \n  /**\n   * Get a list of all supported projection systems across all transformers.\n   * @returns {Object} Object mapping transformer type to array of supported projections\n   */\n  static getAllSupportedProjections() {\n    const result = {};\n    \n    // Always include simple transformer\n    result.simple = new SimpleWGS84Transformer().getSupportedProjections();\n    \n    // Check if proj4js is available\n    if (this._checkForProj4js()) {\n      // This would return a list of all projections supported by proj4js\n      // We'll implement this when needed\n      result.proj4js = ['Many EPSG codes supported when proj4js is loaded'];\n    }\n    \n    return result;\n  }\n}","/**\n * Coordinate.js - 3D Geographic Coordinate class\n * \n * Represents a point in 3D space using latitude, longitude, and elevation.\n * Supports different height references and projections, with transformation\n * functionality through a pluggable transformer system.\n */\n\nimport { TransformerFactory } from './TransformerFactory.js';\n\n/**\n * Class representing a geographic 3D coordinate.\n */\nexport class Coordinate {\n  /**\n   * Create a new coordinate.\n   * @param {number} lat - Latitude in decimal degrees\n   * @param {number} lng - Longitude in decimal degrees\n   * @param {number} [elevation=0] - Elevation in meters\n   * @param {string} [heightReference='ellipsoidal'] - Height reference system ('ellipsoidal' or 'orthometric')\n   * @param {string} [projection='WGS84'] - Coordinate projection system\n   */\n  constructor(lat, lng, elevation = 0, heightReference = 'ellipsoidal', projection = 'WGS84') {\n    try {\n      // Handle different input formats and parsing\n      if (typeof lat === 'string') lat = parseFloat(lat);\n      if (typeof lng === 'string') lng = parseFloat(lng);\n      if (typeof elevation === 'string') elevation = parseFloat(elevation);\n      \n      // Handle null/undefined/NaN latitude/longitude more gracefully with defaults\n      if (lat === null || lat === undefined || isNaN(lat)) {\n        console.warn('Invalid latitude provided, defaulting to 0');\n        lat = 0;\n      }\n      \n      if (lng === null || lng === undefined || isNaN(lng)) {\n        console.warn('Invalid longitude provided, defaulting to 0');\n        lng = 0;\n      }\n      \n      // Validate coordinate values with clamping instead of throwing\n      if (lat < -90 || lat > 90) {\n        console.warn(`Latitude ${lat} out of bounds, clamping to valid range`);\n        lat = Math.max(-90, Math.min(90, lat));\n      }\n      \n      if (lng < -180 || lng > 180) {\n        console.warn(`Longitude ${lng} out of bounds, clamping to valid range`);\n        lng = Math.max(-180, Math.min(180, lng));\n      }\n      \n      // Handle null/undefined elevation more gracefully\n      const safeElevation = elevation !== null && elevation !== undefined && !isNaN(elevation) \n        ? elevation \n        : 0;\n      \n      // Validate height reference system\n      const validHeightReferences = ['ellipsoidal', 'orthometric'];\n      if (!validHeightReferences.includes(heightReference)) {\n        console.warn(`Invalid height reference: ${heightReference}, using default 'ellipsoidal'`);\n        heightReference = 'ellipsoidal';\n      }\n      \n      this.lat = lat;\n      this.lng = lng;\n      this.elevation = safeElevation;\n      this.heightReference = heightReference;\n      this.projection = projection || 'WGS84';\n      \n      // Get transformer from factory using dependency injection\n      // This allows for switching transformer implementations\n      this.transformer = TransformerFactory.getTransformer();\n      \n      // For debugging\n      //console.log(`Created coordinate: ${this.lat}, ${this.lng}, ${this.elevation}`);\n      \n    } catch (error) {\n      console.error('Error in Coordinate constructor:', error);\n      // Create a safe default coordinate\n      this.lat = 0;\n      this.lng = 0;\n      this.elevation = 0;\n      this.heightReference = 'ellipsoidal';\n      this.projection = 'WGS84';\n      this.transformer = TransformerFactory.getTransformer();\n    }\n  }\n  \n  /**\n   * Create a Coordinate from an object with lat/lng/elevation properties.\n   * Supports multiple object formats commonly found in mapping applications.\n   * \n   * @param {Object} obj - Object with coordinate properties\n   * @param {number|string} [obj.lat] - Latitude (WGS84)\n   * @param {number|string} [obj.latitude] - Alternative latitude property\n   * @param {number|string} [obj.lng] - Longitude (WGS84)\n   * @param {number|string} [obj.longitude] - Alternative longitude property\n   * @param {number|string} [obj.elevation] - Elevation in meters\n   * @param {number|string} [obj.altitude] - Alternative elevation property\n   * @param {number|string} [obj.alt] - Alternative elevation property\n   * @param {string} [obj.heightReference] - Height reference system\n   * @param {string} [obj.projection] - Coordinate projection\n   * @returns {Coordinate} A new Coordinate object\n   */\n  static fromObject(obj) {\n    try {\n      if (!obj || typeof obj !== 'object') {\n        console.warn('Invalid object passed to Coordinate.fromObject', obj);\n        return new Coordinate(0, 0, 0);\n      }\n      \n      // Extract latitude (try different common property names)\n      let lat = obj.lat !== undefined ? obj.lat : \n        obj.latitude !== undefined ? obj.latitude :\n          obj.y !== undefined ? obj.y : 0;\n      \n      // Extract longitude (try different common property names)\n      let lng = obj.lng !== undefined ? obj.lng : \n        obj.longitude !== undefined ? obj.longitude :\n          obj.x !== undefined ? obj.x : 0;\n      \n      // Extract elevation (try different common property names)\n      const elevation = obj.elevation !== undefined ? obj.elevation : \n        obj.altitude !== undefined ? obj.altitude :\n          obj.alt !== undefined ? obj.alt :\n            obj.z !== undefined ? obj.z : 0;\n      \n      // Handle Google Maps-specific LatLng objects\n      if (typeof obj.lat === 'function' && typeof obj.lng === 'function') {\n        try {\n          lat = obj.lat();\n          lng = obj.lng();\n        } catch (e) {\n          console.warn('Error extracting lat/lng from Google Maps LatLng object', e);\n        }\n      }\n      \n      // Log the conversion for debugging\n      // console.log(`Coordinate.fromObject: (${lat}, ${lng}, ${elevation})`);\n      \n      return new Coordinate(\n        lat,\n        lng,\n        elevation,\n        obj.heightReference || 'ellipsoidal',\n        obj.projection || 'WGS84',\n      );\n    } catch (error) {\n      console.error('Error in Coordinate.fromObject:', error);\n      return new Coordinate(0, 0, 0);\n    }\n  }\n  \n  /**\n   * Convert this coordinate to a different projection.\n   * @param {string} targetProjection - Target projection system\n   * @returns {Coordinate} A new coordinate in the target projection\n   */\n  toProjection(targetProjection) {\n    if (this.projection === targetProjection) {\n      return this.clone();\n    }\n    \n    return this.transformer.transform(this, this.projection, targetProjection);\n  }\n  \n  /**\n   * Convert to a different height reference system.\n   * @param {string} reference - Target height reference system\n   * @returns {Coordinate} A new coordinate with the converted height reference\n   */\n  toHeightReference(reference) {\n    if (this.heightReference === reference) {\n      return this.clone();\n    }\n    \n    if (reference === 'orthometric' && this.heightReference === 'ellipsoidal') {\n      // Convert from ellipsoidal (GPS) to orthometric (mean sea level)\n      return this.transformer.convertEllipsoidalToOrthometric(this);\n    }\n    \n    if (reference === 'ellipsoidal' && this.heightReference === 'orthometric') {\n      // Convert from orthometric (mean sea level) to ellipsoidal (GPS)\n      return this.transformer.convertOrthometricToEllipsoidal(this);\n    }\n    \n    throw new Error(`Unsupported height reference conversion: ${this.heightReference} to ${reference}`);\n  }\n  \n  /**\n   * Calculate the 3D distance to another coordinate.\n   * @param {Coordinate} other - The other coordinate\n   * @returns {number} Distance in meters\n   */\n  distanceTo(other) {\n    // Ensure both coordinates are in the same reference system\n    let otherCoord = other;\n    \n    if (other.projection !== this.projection) {\n      otherCoord = other.toProjection(this.projection);\n    }\n    \n    if (otherCoord.heightReference !== this.heightReference) {\n      otherCoord = otherCoord.toHeightReference(this.heightReference);\n    }\n    \n    // Calculate horizontal distance using Haversine formula\n    const R = 6371000; // Earth radius in meters\n    const φ1 = this.lat * Math.PI / 180;\n    const φ2 = otherCoord.lat * Math.PI / 180;\n    const Δφ = (otherCoord.lat - this.lat) * Math.PI / 180;\n    const Δλ = (otherCoord.lng - this.lng) * Math.PI / 180;\n    \n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const horizontalDistance = R * c;\n    \n    // Calculate elevation difference\n    const elevDiff = otherCoord.elevation - this.elevation;\n    \n    // Return 3D distance using Pythagorean theorem\n    return Math.sqrt(horizontalDistance * horizontalDistance + elevDiff * elevDiff);\n  }\n  \n  /**\n   * Calculate the bearing to another coordinate.\n   * @param {Coordinate} other - The other coordinate\n   * @returns {number} Bearing in degrees (0-360)\n   */\n  bearingTo(other) {\n    // Ensure same projection\n    const otherCoord = other.projection !== this.projection \n      ? other.toProjection(this.projection) \n      : other;\n    \n    const φ1 = this.lat * Math.PI / 180;\n    const φ2 = otherCoord.lat * Math.PI / 180;\n    const λ1 = this.lng * Math.PI / 180;\n    const λ2 = otherCoord.lng * Math.PI / 180;\n    \n    const y = Math.sin(λ2 - λ1) * Math.cos(φ2);\n    const x = Math.cos(φ1) * Math.sin(φ2) -\n              Math.sin(φ1) * Math.cos(φ2) * Math.cos(λ2 - λ1);\n    \n    let bearing = Math.atan2(y, x) * 180 / Math.PI;\n    bearing = (bearing + 360) % 360; // Normalize to 0-360\n    \n    return bearing;\n  }\n  \n  /**\n   * Calculate the midpoint between this coordinate and another.\n   * @param {Coordinate} other - The other coordinate \n   * @returns {Coordinate} A new coordinate at the midpoint\n   */\n  midpointTo(other) {\n    // Ensure same reference systems\n    let otherCoord = other;\n    \n    if (other.projection !== this.projection) {\n      otherCoord = other.toProjection(this.projection);\n    }\n    \n    if (otherCoord.heightReference !== this.heightReference) {\n      otherCoord = otherCoord.toHeightReference(this.heightReference);\n    }\n    \n    // Calculate midpoint\n    const φ1 = this.lat * Math.PI / 180;\n    const λ1 = this.lng * Math.PI / 180;\n    const φ2 = otherCoord.lat * Math.PI / 180;\n    const λ2 = otherCoord.lng * Math.PI / 180;\n    \n    const Bx = Math.cos(φ2) * Math.cos(λ2 - λ1);\n    const By = Math.cos(φ2) * Math.sin(λ2 - λ1);\n    \n    const φ3 = Math.atan2(\n      Math.sin(φ1) + Math.sin(φ2),\n      Math.sqrt((Math.cos(φ1) + Bx) * (Math.cos(φ1) + Bx) + By * By),\n    );\n    \n    const λ3 = λ1 + Math.atan2(By, Math.cos(φ1) + Bx);\n    \n    // Calculate average elevation\n    const midElevation = (this.elevation + otherCoord.elevation) / 2;\n    \n    return new Coordinate(\n      φ3 * 180 / Math.PI,\n      λ3 * 180 / Math.PI,\n      midElevation,\n      this.heightReference,\n      this.projection,\n    );\n  }\n  \n  /**\n   * Create a copy of this coordinate.\n   * @returns {Coordinate} A new coordinate with the same values\n   */\n  clone() {\n    return new Coordinate(\n      this.lat,\n      this.lng,\n      this.elevation,\n      this.heightReference,\n      this.projection,\n    );\n  }\n  \n  /**\n   * Convert the coordinate to a plain object.\n   * @returns {Object} Object representation of the coordinate\n   */\n  toObject() {\n    return {\n      lat: this.lat,\n      lng: this.lng,\n      elevation: this.elevation,\n      heightReference: this.heightReference,\n      projection: this.projection,\n    };\n  }\n  \n  /**\n   * Convert the coordinate to a GeoJSON point.\n   * @returns {Object} GeoJSON Point geometry\n   */\n  toGeoJSON() {\n    // Ensure WGS84 for GeoJSON compliance\n    const wgs84Coord = this.projection !== 'WGS84' \n      ? this.toProjection('WGS84') \n      : this;\n    \n    return {\n      type: 'Point',\n      coordinates: [wgs84Coord.lng, wgs84Coord.lat, wgs84Coord.elevation],\n    };\n  }\n  \n  /**\n   * Return string representation of the coordinate.\n   * @returns {string} String representation\n   */\n  toString() {\n    return `${this.lat.toFixed(7)},${this.lng.toFixed(7)},${this.elevation.toFixed(2)} (${this.projection}, ${this.heightReference})`;\n  }\n  \n  /**\n   * Return a compact string representation of the coordinate (lat, lng only).\n   * @returns {string} Compact string representation\n   */\n  toCompactString() {\n    return `${this.lat.toFixed(5)},${this.lng.toFixed(5)}`;\n  }\n  \n  /**\n   * Set the elevation (Z value) of the coordinate\n   * @param {number} elevation - The new elevation value in meters\n   * @returns {Coordinate} - This coordinate for chaining\n   */\n  setZ(elevation) {\n    // Handle null/undefined elevation more gracefully\n    const safeElevation = elevation !== null && elevation !== undefined ? elevation : 0;\n    \n    if (!Number.isFinite(safeElevation)) {\n      throw new Error(`Invalid elevation: ${elevation}. Must be a number.`);\n    }\n    \n    this.elevation = safeElevation;\n    return this;\n  }\n}","/**\n * CoordinateUtils.js - Coordinate format utilities\n * \n * Provides utility functions for working with different coordinate formats\n * and ensuring consistency across the application.\n */\n\nimport { Coordinate } from './Coordinate.js';\n\n/**\n * Coordinate Utilities\n * A collection of helper functions for coordinate processing\n */\nexport const CoordinateUtils = {\n  /**\n   * Standardize coordinate properties to use lat/lng/elevation format\n   * while preserving the original properties for compatibility\n   * \n   * @param {Object} coordinate - Coordinate object with either lat/lng or x/y/z properties\n   * @returns {Object} Standardized coordinate object with both property sets\n   */\n  standardizeCoordinate(coordinate) {\n    if (!coordinate || typeof coordinate !== 'object') {\n      console.warn('Invalid coordinate object provided to standardizeCoordinate');\n      return null;\n    }\n    \n    // Extract latitude (try different common property names)\n    const lat = coordinate.lat !== undefined ? coordinate.lat : \n      coordinate.latitude !== undefined ? coordinate.latitude :\n        coordinate.y !== undefined ? coordinate.y : null;\n    \n    // Extract longitude (try different common property names)\n    const lng = coordinate.lng !== undefined ? coordinate.lng : \n      coordinate.longitude !== undefined ? coordinate.longitude :\n        coordinate.x !== undefined ? coordinate.x : null;\n    \n    // Extract elevation (try different common property names)\n    const elevation = coordinate.elevation !== undefined ? coordinate.elevation : \n      coordinate.altitude !== undefined ? coordinate.altitude :\n        coordinate.alt !== undefined ? coordinate.alt :\n          coordinate.z !== undefined ? coordinate.z : 0;\n    \n    // Validate required properties\n    if (lat === null || lng === null) {\n      console.warn('Cannot standardize coordinate without lat/lng or x/y properties');\n      return coordinate; // Return original to avoid data loss\n    }\n    \n    // Return a standardized object with all properties\n    // This maintains backwards compatibility while ensuring\n    // that standard property names are available\n    return {\n      // Standard properties\n      lat,\n      lng,\n      elevation,\n      \n      // Common alternate properties\n      latitude: lat,\n      longitude: lng,\n      \n      // Legacy/cartesian properties\n      x: lng,\n      y: lat,\n      z: elevation,\n      \n      // Original properties for reference\n      ...coordinate,\n    };\n  },\n  \n  /**\n   * Convert any coordinate object to a proper Coordinate instance\n   * \n   * @param {Object|Coordinate} coordinate - A coordinate object or Coordinate instance\n   * @returns {Coordinate} A proper Coordinate instance\n   */\n  toCoordinate(coordinate) {\n    // If it's already a Coordinate instance, return it\n    if (coordinate instanceof Coordinate) {\n      return coordinate;\n    }\n    \n    // Otherwise, standardize and convert\n    return Coordinate.fromObject(this.standardizeCoordinate(coordinate));\n  },\n  \n  /**\n   * Extract standard lat/lng/elevation values from a coordinate object\n   * \n   * @param {Object} coordinate - Coordinate object with either lat/lng or x/y/z properties\n   * @returns {Object} Object with standardized lat/lng/elevation properties\n   */\n  extractStandardValues(coordinate) {\n    const standardized = this.standardizeCoordinate(coordinate);\n    \n    return {\n      lat: standardized.lat,\n      lng: standardized.lng,\n      elevation: standardized.elevation,\n    };\n  },\n  \n  /**\n   * Create a deep copy of a coordinate object with standard properties\n   * \n   * @param {Object} coordinate - Coordinate object to copy\n   * @returns {Object} A new coordinate object with standard properties\n   */\n  cloneWithStandardProperties(coordinate) {\n    const standardized = this.standardizeCoordinate(coordinate);\n    \n    // Create a new object with only the standard properties\n    return {\n      lat: standardized.lat,\n      lng: standardized.lng,\n      elevation: standardized.elevation,\n    };\n  },\n};","/**\n * GeometryEngine.js - Geodesic geometry calculations for 3D coordinates\n *\n * Provides accurate geometric calculations on an ellipsoidal Earth model,\n * taking elevation into account for true 3D calculations. This engine handles\n * complex computations such as area, volume, and intersection determination.\n */\n\nimport { Coordinate } from './Coordinate.js';\nimport { CoordinateUtils } from './CoordinateUtils.js';\n\n/**\n * Provides geometric calculations for geographic coordinates.\n */\nexport class GeometryEngine {\n  /**\n   * Calculate the total elevation gain along a path\n   * @param {Array<Coordinate>} coordinates - Array of coordinates representing the path\n   * @returns {number} Total elevation gain in meters\n   */\n  static calculateElevationGain(coordinates) {\n    if (!coordinates || coordinates.length < 2) {\n      return 0;\n    }\n\n    let totalGain = 0;\n\n    for (let i = 1; i < coordinates.length; i++) {\n      const prev = coordinates[i - 1];\n      const curr = coordinates[i];\n\n      // Skip if either coordinate doesn't have elevation data\n      if (prev.elevation === undefined || prev.elevation === null ||\n          curr.elevation === undefined || curr.elevation === null) {\n        continue;\n      }\n\n      // Only add positive elevation changes\n      const diff = curr.elevation - prev.elevation;\n      if (diff > 0) {\n        totalGain += diff;\n      }\n    }\n\n    return totalGain;\n  }\n\n  /**\n   * Calculate the total elevation loss along a path\n   * @param {Array<Coordinate>} coordinates - Array of coordinates representing the path\n   * @returns {number} Total elevation loss in meters (as a positive number)\n   */\n  static calculateElevationLoss(coordinates) {\n    if (!coordinates || coordinates.length < 2) {\n      return 0;\n    }\n\n    let totalLoss = 0;\n\n    for (let i = 1; i < coordinates.length; i++) {\n      const prev = coordinates[i - 1];\n      const curr = coordinates[i];\n\n      // Skip if either coordinate doesn't have elevation data\n      if (prev.elevation === undefined || prev.elevation === null ||\n          curr.elevation === undefined || curr.elevation === null) {\n        continue;\n      }\n\n      // Only add negative elevation changes (as positive values)\n      const diff = curr.elevation - prev.elevation;\n      if (diff < 0) {\n        totalLoss += Math.abs(diff);\n      }\n    }\n\n    return totalLoss;\n  }\n  /**\n     * Get the Coordinate class\n     * @returns {Object} Object containing the Coordinate class\n     * @private\n     */\n  static _getCoordinateClass() {\n    return { Coordinate };\n  }\n\n  /**\n     * Earth parameters.\n     * @private\n     */\n  static _EARTH_RADIUS_M = 6371000; // Mean radius in meters\n  static _WGS84_SEMI_MAJOR_AXIS = 6378137.0; // Semi-major axis in meters\n  static _WGS84_SEMI_MINOR_AXIS = 6356752.314245; // Semi-minor axis in meters\n  static _WGS84_FLATTENING = 1 / 298.257223563; // Flattening\n\n  /**\n     * Find the nearest point on a line segment to a given point.\n     * Instance method wrapper for the static nearestPointOnSegment method\n     * @param {Coordinate} start - Starting point of the segment\n     * @param {Coordinate} end - Ending point of the segment\n     * @param {Coordinate} point - The point to find the nearest to\n     * @returns {Object} Object containing the nearest point and distance information\n     */\n  nearestPointOnSegment(start, end, point) {\n    return GeometryEngine.nearestPointOnSegment(start, end, point);\n  }\n\n  /**\n     * Calculate the distance between two coordinates.\n     * @param {Coordinate|Object} coord1 - First coordinate\n     * @param {Coordinate|Object} coord2 - Second coordinate\n     * @param {Object} [options={}] - Calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation in the calculation\n     * @returns {number} Distance in meters\n     */\n  static calculateDistance(coord1, coord2, options = {}) {\n    // Validate coordinates or coordinate-like objects\n    if (!coord1 || !coord2 ||\n            typeof coord1 !== 'object' || typeof coord2 !== 'object') {\n      console.error('Invalid coordinate format for distance calculation');\n      return 0;\n    }\n\n    const includeElevation = options.includeElevation !== false;\n\n    // Helper function to extract latitude from coordinate-like object\n    const getLat = (coord) => {\n      // Support both coord.lat and coord.latitude formats\n      return coord.lat !== undefined ? coord.lat :\n        coord.latitude !== undefined ? coord.latitude : null;\n    };\n\n    // Helper function to extract longitude from coordinate-like object\n    const getLng = (coord) => {\n      // Support both coord.lng and coord.longitude formats\n      return coord.lng !== undefined ? coord.lng :\n        coord.longitude !== undefined ? coord.longitude : null;\n    };\n\n    // Extract lat/lng values\n    const lat1 = getLat(coord1);\n    const lng1 = getLng(coord1);\n    const lat2 = getLat(coord2);\n    const lng2 = getLng(coord2);\n\n    // Validate lat/lng existence\n    if (lat1 === null || lng1 === null || lat2 === null || lng2 === null) {\n      console.error('Coordinates missing lat/lng properties for distance calculation');\n      return 0;\n    }\n\n    // Create simplified coordinate objects with consistent properties\n    const simpleCoord1 = {\n      lat: lat1,\n      lng: lng1,\n      elevation: coord1.elevation !== undefined ? coord1.elevation : 0,\n    };\n\n    const simpleCoord2 = {\n      lat: lat2,\n      lng: lng2,\n      elevation: coord2.elevation !== undefined ? coord2.elevation : 0,\n    };\n\n    // If both are true Coordinate instances with distanceTo method, use it\n    if (includeElevation &&\n            coord1 instanceof Coordinate &&\n            coord2 instanceof Coordinate &&\n            typeof coord1.distanceTo === 'function') {\n      return coord1.distanceTo(coord2);\n    }\n\n    // For 3D distance with elevation (Pythagorean approach)\n    if (includeElevation) {\n      // Calculate 2D distance\n      const distance2D = this._calculateApproximateDistance(simpleCoord1, simpleCoord2);\n\n      // Extract elevations\n      const elev1 = simpleCoord1.elevation !== undefined ? simpleCoord1.elevation : 0;\n      const elev2 = simpleCoord2.elevation !== undefined ? simpleCoord2.elevation : 0;\n\n      // Apply Pythagorean theorem for 3D distance\n      const elevDiff = elev2 - elev1;\n      return Math.sqrt(distance2D * distance2D + elevDiff * elevDiff);\n    }\n\n    // For 2D distance, use simplified Vincenty approximation\n    return this._calculateApproximateDistance(simpleCoord1, simpleCoord2);\n  }\n\n  /**\n     * Calculate the area of a polygon defined by an array of coordinates.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon (must be closed)\n     * @param {Object} [options={}] - Calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation in the calculation\n     * @returns {number} Area in square meters\n     */\n  static calculateArea(coordinates, options = {}) {\n    const includeElevation = options.includeElevation !== false;\n\n    // Check if we have enough coordinates\n    if (coordinates.length < 3) {\n      return 0;\n    }\n\n    // Check if the polygon is closed\n    const firstCoord = coordinates[0];\n    const lastCoord = coordinates[coordinates.length - 1];\n    const isClosed = firstCoord.lat === lastCoord.lat &&\n            firstCoord.lng === lastCoord.lng;\n\n    // Create a closed copy if needed\n    const closedCoords = isClosed ? coordinates : [...coordinates, coordinates[0]];\n\n    // Check for self-intersection\n    if (this._isSelfIntersecting(closedCoords)) {\n      // For self-intersecting polygons, we'll need to triangulate\n      return this._calculateAreaWithTriangulation(closedCoords, options);\n    }\n\n    if (includeElevation) {\n      // For 3D area, project to a plane and calculate\n      return this._calculate3DArea(closedCoords);\n    } else {\n      // Use spherical geometry for 2D area\n      return this._calculate2DSphericalArea(closedCoords);\n    }\n  }\n\n  /**\n     * Calculate the perimeter of a polygon or the length of a line.\n     * @param {Coordinate[]} coordinates - Array of coordinates\n     * @param {Object} [options={}] - Calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation in the calculation\n     * @returns {number} Perimeter in meters\n     */\n  static calculatePerimeter(coordinates, options = {}) {\n    const includeElevation = options.includeElevation !== false;\n\n    if (coordinates.length < 2) {\n      return 0;\n    }\n\n    let perimeter = 0;\n\n    // Sum the distances between consecutive points\n    for (let i = 0; i < coordinates.length - 1; i++) {\n      perimeter += this.calculateDistance(\n        coordinates[i],\n        coordinates[i + 1],\n        { includeElevation },\n      );\n    }\n\n    // If it's a polygon (has at least 3 points), close it\n    if (coordinates.length >= 3) {\n      // Check if already closed\n      const firstCoord = coordinates[0];\n      const lastCoord = coordinates[coordinates.length - 1];\n      const isClosed = firstCoord.lat === lastCoord.lat &&\n                firstCoord.lng === lastCoord.lng;\n\n      if (!isClosed) {\n        // Add distance from last point back to first\n        perimeter += this.calculateDistance(\n          coordinates[coordinates.length - 1],\n          coordinates[0],\n          { includeElevation },\n        );\n      }\n    }\n\n    return perimeter;\n  }\n\n  /**\n     * Calculate the length of a path (alias for calculatePerimeter).\n     * @param {Coordinate[]} coordinates - Array of coordinates\n     * @param {Object} [options={}] - Calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation in the calculation\n     * @param {boolean} [options.closed=false] - Whether the path is closed\n     * @returns {number} Path length in meters\n     */\n  static calculatePathLength(coordinates, options = {}) {\n    return this.calculatePerimeter(coordinates, options);\n  }\n\n  /**\n     * Calculate a perpendicular offset point from a line segment.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a line\n     * @param {number} pointIndex - Index of the segment start point\n     * @param {number} segmentPosition - Normalized position along the segment (0-1)\n     * @param {number} distance - Offset distance in meters\n     * @param {Object} [options={}] - Calculation options\n     * @param {boolean} [options.enable3D=true] - Whether to include elevation in the calculation\n     * @returns {Object} Object with the offset point and other segment info\n     */\n  static calculatePerpendicularOffset(coordinates, pointIndex, segmentPosition, distance, options = {}) {\n    if (coordinates.length < 2 || pointIndex < 0 || pointIndex >= coordinates.length - 1) {\n      throw new Error('Invalid coordinates or point index for perpendicular offset');\n    }\n\n    const enable3D = options.enable3D !== false;\n\n    // Get the segment points\n    const startPoint = coordinates[pointIndex];\n    const endPoint = coordinates[pointIndex + 1];\n\n    // Calculate the point on the segment at the given position\n    const segmentFraction = Math.max(0, Math.min(1, segmentPosition));\n\n    // Interpolate the point position\n    const nearestPoint = new Coordinate(\n      startPoint.lat + segmentFraction * (endPoint.lat - startPoint.lat),\n      startPoint.lng + segmentFraction * (endPoint.lng - startPoint.lng),\n      enable3D ? startPoint.elevation + segmentFraction * (endPoint.elevation - startPoint.elevation) : null,\n      startPoint.heightReference,\n      startPoint.projection,\n    );\n\n    // Calculate the bearing of the segment\n    const segmentBearing = startPoint.bearingTo(endPoint);\n\n    // Calculate perpendicular bearing (90 degrees to the right)\n    const perpendicularBearing = (segmentBearing + 90) % 360;\n\n    // Calculate the offset point\n    const offsetPoint = this._calculateDestinationPoint(\n      nearestPoint,\n      distance,\n      perpendicularBearing,\n    );\n\n    // If 3D is enabled, ensure the offset point has proper elevation\n    if (enable3D && nearestPoint.elevation !== null && nearestPoint.elevation !== undefined) {\n      offsetPoint.elevation = nearestPoint.elevation;\n    }\n\n    return {\n      nearestPoint: nearestPoint,\n      offsetPoint: offsetPoint,\n      pointIndex: pointIndex,\n      segmentPosition: segmentFraction,\n      segmentBearing: segmentBearing,\n      perpendicularBearing: perpendicularBearing,\n    };\n  }\n\n  /**\n     * Calculate the bearing between two coordinates.\n     * @param {Coordinate} from - Starting coordinate\n     * @param {Coordinate} to - Ending coordinate\n     * @returns {number} Bearing in degrees (0-360)\n     */\n  static calculateBearing(from, to) {\n    // Use the bearing calculation from the Coordinate class\n    return from.bearingTo(to);\n  }\n\n  /**\n     * Create a geodesic arc with the given radius around a point.\n     * @param {Coordinate} center - Center coordinate\n     * @param {number} radiusMeters - Radius in meters\n     * @param {number} [startAngle=0] - Starting angle in degrees\n     * @param {number} [endAngle=360] - Ending angle in degrees\n     * @param {number} [segments=32] - Number of segments to create\n     * @returns {Coordinate[]} Array of coordinates forming the arc\n     */\n  static createArc(center, radiusMeters, startAngle = 0, endAngle = 360, segments = 32) {\n    const result = [];\n    const angleRange = endAngle - startAngle;\n\n    // Calculate angle increment based on segments\n    const angleIncrement = angleRange / segments;\n\n    for (let i = 0; i <= segments; i++) {\n      const angle = (startAngle + i * angleIncrement) * Math.PI / 180;\n      const point = this._calculateDestinationPoint(\n        center,\n        radiusMeters,\n        angle,\n      );\n      result.push(point);\n    }\n\n    return result;\n  }\n\n  /**\n     * Create a geodesic circle with the given radius around a point.\n     * @param {Coordinate} center - Center coordinate\n     * @param {number} radiusMeters - Radius in meters\n     * @param {number} [segments=32] - Number of segments to create\n     * @returns {Coordinate[]} Array of coordinates forming the circle\n     */\n  static createCircle(center, radiusMeters, segments = 32) {\n    return this.createArc(center, radiusMeters, 0, 360, segments);\n  }\n\n  /**\n     * Create a geodesic rectangle with the given dimensions.\n     * @param {Coordinate} center - Center coordinate\n     * @param {number} widthMeters - Width in meters\n     * @param {number} heightMeters - Height in meters\n     * @param {number} [rotationDegrees=0] - Rotation in degrees\n     * @returns {Coordinate[]} Array of coordinates forming the rectangle\n     */\n  static createRectangle(center, widthMeters, heightMeters, rotationDegrees = 0) {\n    const rotationRadians = rotationDegrees * Math.PI / 180;\n    const halfWidth = widthMeters / 2;\n    const halfHeight = heightMeters / 2;\n\n    // Calculate corners\n    const bearings = [\n      Math.atan2(-halfHeight, -halfWidth) + rotationRadians,\n      Math.atan2(-halfHeight, halfWidth) + rotationRadians,\n      Math.atan2(halfHeight, halfWidth) + rotationRadians,\n      Math.atan2(halfHeight, -halfWidth) + rotationRadians,\n    ];\n\n    const distances = [\n      Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight),\n      Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight),\n      Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight),\n      Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight),\n    ];\n\n    // Generate the corners\n    const corners = [];\n    for (let i = 0; i < 4; i++) {\n      const bearing = (bearings[i] * 180 / Math.PI + 360) % 360;\n      corners.push(this._calculateDestinationPoint(\n        center,\n        distances[i],\n        bearing,\n      ));\n    }\n\n    // Close the polygon\n    corners.push(corners[0]);\n\n    return corners;\n  }\n\n  /**\n     * Check if a point is contained within a polygon.\n     * @param {Coordinate} point - The point to check\n     * @param {Coordinate[]} polygon - Array of coordinates defining the polygon\n     * @returns {boolean} True if the point is inside the polygon\n     */\n  static isPointInPolygon(point, polygon) {\n    // Ray casting algorithm for point-in-polygon detection\n    let inside = false;\n\n    // Check if the polygon is closed - if not, close it\n    const isPolygonClosed = polygon[0].lat === polygon[polygon.length - 1].lat &&\n            polygon[0].lng === polygon[polygon.length - 1].lng;\n    const closedPolygon = isPolygonClosed ? polygon : [...polygon, polygon[0]];\n\n    // Ensure all coordinates are in the same projection\n    const targetProjection = point.projection;\n    const normalizedPolygon = closedPolygon.map(coord =>\n      coord.projection !== targetProjection ?\n        coord.toProjection(targetProjection) :\n        coord,\n    );\n\n    for (let i = 0, j = normalizedPolygon.length - 1; i < normalizedPolygon.length; j = i++) {\n      const xi = normalizedPolygon[i].lng;\n      const yi = normalizedPolygon[i].lat;\n      const xj = normalizedPolygon[j].lng;\n      const yj = normalizedPolygon[j].lat;\n\n      const intersect = ((yi > point.lat) !== (yj > point.lat)) &&\n                (point.lng < (xj - xi) * (point.lat - yi) / (yj - yi) + xi);\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  /**\n     * Check if a point is contained within a polygon (alias for isPointInPolygon).\n     * @param {Coordinate} point - The point to check\n     * @param {Coordinate[]} polygon - Array of coordinates defining the polygon\n     * @returns {boolean} True if the point is inside the polygon\n     */\n  static pointInPolygon(point, polygon) {\n    return this.isPointInPolygon(point, polygon);\n  }\n\n  /**\n     * Calculate the centroid of a polygon.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon\n     * @returns {Coordinate} Centroid coordinate\n     */\n  static calculateCentroid(coordinates) {\n    // Check if we have enough coordinates\n    if (coordinates.length < 3) {\n      throw new Error('Cannot calculate centroid: need at least 3 coordinates');\n    }\n\n    // For simple polygons, use the arithmetic mean of coordinates\n    // For more complex cases, this is an approximation\n    let sumLat = 0;\n    let sumLng = 0;\n    let sumElev = 0;\n\n    for (const coord of coordinates) {\n      sumLat += coord.lat;\n      sumLng += coord.lng;\n      sumElev += coord.elevation;\n    }\n\n    return new Coordinate(\n      sumLat / coordinates.length,\n      sumLng / coordinates.length,\n      sumElev / coordinates.length,\n      coordinates[0].heightReference,\n      coordinates[0].projection,\n    );\n  }\n\n  /**\n     * Calculate the centroid of a polygon with holes.\n     * @param {Coordinate[]} exteriorRing - Array of coordinates defining the exterior ring\n     * @param {Array<Array<Coordinate>>} [holes=[]] - Array of holes, each an array of coordinates\n     * @returns {Coordinate|null} Centroid coordinate or null if insufficient coordinates\n     */\n  static calculatePolygonCentroid(exteriorRing, holes = []) {\n    // Check if we have enough coordinates for the exterior ring\n    if (!exteriorRing || exteriorRing.length < 3) {\n      console.warn('Cannot calculate polygon centroid: need at least 3 coordinates for exterior ring');\n      // Return null instead of throwing an error for easier error handling\n      // or if we have at least one coordinate, return it as a fallback\n      if (exteriorRing && exteriorRing.length > 0) {\n        return exteriorRing[0].clone();\n      }\n      return null;\n    }\n\n    // If there are no holes, use the regular centroid calculation\n    if (!holes || holes.length === 0) {\n      return this.calculateCentroid(exteriorRing);\n    }\n\n    // For polygons with holes, we can use different strategies:\n    // 1. Area-weighted centroid of exterior ring and holes\n    // 2. Find centroid of exterior ring and adjust based on holes\n    // 3. Triangulate and compute weighted centroid\n\n    // For simplicity, we'll use the exterior ring centroid\n    // with a slight adjustment if all holes are valid\n\n    // Calculate the centroid of the exterior ring\n    const exteriorCentroid = this.calculateCentroid(exteriorRing);\n\n    // Filter valid holes (those with at least 3 points)\n    const validHoles = holes.filter(hole => hole && hole.length >= 3);\n\n    if (validHoles.length === 0) {\n      return exteriorCentroid;\n    }\n\n    // Calculate area of exterior ring\n    const exteriorArea = this.calculateArea(exteriorRing);\n    if (exteriorArea === 0) {\n      return exteriorCentroid;\n    }\n\n    // Calculate area-weighted centroid considering holes\n    let totalArea = exteriorArea;\n    let weightedLat = exteriorCentroid.lat * exteriorArea;\n    let weightedLng = exteriorCentroid.lng * exteriorArea;\n    let weightedElev = exteriorCentroid.elevation * exteriorArea;\n\n    for (const hole of validHoles) {\n      const holeCentroid = this.calculateCentroid(hole);\n      const holeArea = this.calculateArea(hole);\n\n      totalArea -= holeArea;\n      weightedLat -= holeCentroid.lat * holeArea;\n      weightedLng -= holeCentroid.lng * holeArea;\n      weightedElev -= holeCentroid.elevation * holeArea;\n    }\n\n    // If the total area becomes too small or negative, fall back to exterior centroid\n    if (totalArea <= 0) {\n      return exteriorCentroid;\n    }\n\n    // Calculate the final weighted centroid\n    return new Coordinate(\n      weightedLat / totalArea,\n      weightedLng / totalArea,\n      weightedElev / totalArea,\n      exteriorRing[0].heightReference,\n      exteriorRing[0].projection,\n    );\n  }\n\n  /**\n     * Calculate the center of a path (line).\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a path\n     * @returns {Coordinate} Center coordinate of the path\n     */\n  static calculatePathCenter(coordinates) {\n    // Check if we have coordinates\n    if (coordinates.length === 0) {\n      throw new Error('Cannot calculate path center: no coordinates provided');\n    }\n\n    // For a single point, return it\n    if (coordinates.length === 1) {\n      return coordinates[0].clone();\n    }\n\n    // For a path with two points, return the midpoint\n    if (coordinates.length === 2) {\n      const lat = (coordinates[0].lat + coordinates[1].lat) / 2;\n      const lng = (coordinates[0].lng + coordinates[1].lng) / 2;\n      const elevation = (coordinates[0].elevation + coordinates[1].elevation) / 2;\n\n      return new Coordinate(\n        lat,\n        lng,\n        elevation,\n        coordinates[0].heightReference,\n        coordinates[0].projection,\n      );\n    }\n\n    // For a path with more than two points, find the middle point along the path\n    const totalLength = this.calculatePathLength(coordinates);\n    const targetDistance = totalLength / 2;\n\n    // Find the point at the target distance\n    let currentDistance = 0;\n\n    for (let i = 0; i < coordinates.length - 1; i++) {\n      const segmentLength = this.calculateDistance(\n        coordinates[i],\n        coordinates[i + 1],\n        { includeElevation: true },\n      );\n\n      if (currentDistance + segmentLength >= targetDistance) {\n        // The center point is on this segment\n        const remainingDistance = targetDistance - currentDistance;\n        const fraction = remainingDistance / segmentLength;\n\n        // Interpolate the position\n        const bearing = coordinates[i].bearingTo(coordinates[i + 1]);\n        const center = this._calculateDestinationPoint(\n          coordinates[i],\n          segmentLength * fraction,\n          bearing,\n        );\n\n        // Interpolate the elevation\n        center.elevation = coordinates[i].elevation +\n                    (coordinates[i + 1].elevation - coordinates[i].elevation) * fraction;\n\n        return center;\n      }\n\n      currentDistance += segmentLength;\n    }\n\n    // If something went wrong, fall back to the midpoint of the path\n    let sumLat = 0;\n    let sumLng = 0;\n    let sumElev = 0;\n\n    for (const coord of coordinates) {\n      sumLat += coord.lat;\n      sumLng += coord.lng;\n      sumElev += coord.elevation;\n    }\n\n    return new Coordinate(\n      sumLat / coordinates.length,\n      sumLng / coordinates.length,\n      sumElev / coordinates.length,\n      coordinates[0].heightReference,\n      coordinates[0].projection,\n    );\n  }\n\n  /**\n     * Create an offset line parallel to an existing line.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a line\n     * @param {number} offsetMeters - Offset distance in meters (positive is right, negative is left)\n     * @param {Object} [options={}] - Offset options\n     * @param {boolean} [options.closed=false] - Whether the line forms a closed loop\n     * @returns {Coordinate[]} Array of coordinates forming the offset line\n     */\n  static createOffsetLine(coordinates, offsetMeters, options = {}) {\n    if (coordinates.length < 2) {\n      throw new Error('Cannot create offset: need at least 2 coordinates');\n    }\n\n    const closed = options.closed || false;\n    const result = [];\n\n    // Process each segment\n    for (let i = 0; i < coordinates.length - 1; i++) {\n      const start = coordinates[i];\n      const end = coordinates[i + 1];\n\n      // Calculate bearing of the segment\n      const bearing = start.bearingTo(end);\n\n      // Calculate perpendicular bearing (90 degrees to the right)\n      const perpBearing = (bearing + 90) % 360;\n\n      // Calculate offset points\n      const startOffset = this._calculateDestinationPoint(\n        start,\n        offsetMeters,\n        perpBearing,\n      );\n\n      result.push(startOffset);\n\n      // Add the end point for the last segment\n      if (i === coordinates.length - 2) {\n        const endOffset = this._calculateDestinationPoint(\n          end,\n          offsetMeters,\n          perpBearing,\n        );\n        result.push(endOffset);\n      }\n    }\n\n    // If closed, add first point to close the loop\n    if (closed && result.length > 2) {\n      result.push(result[0]);\n    }\n\n    return result;\n  }\n\n  /**\n     * Find the closest point on a line segment to a given point.\n     * @param {Coordinate|Object} point - The reference point\n     * @param {Coordinate|Object} segmentStart - Start of the line segment\n     * @param {Coordinate|Object} segmentEnd - End of the line segment\n     * @returns {Object} Object with the closest point and distance information\n     */\n  static nearestPointOnSegment(start, end, point) {\n    const result = this._findClosestPointOnLineSegment(point, start, end);\n    return {\n      point: result.point,\n      distance: result.distance,\n      fraction: result.fraction,\n      segmentPosition: result.fraction, // For compatibility with existing code\n    };\n  }\n\n  /**\n     * Calculate a destination point given a starting point, distance, and bearing.\n     * Public method wrapping the private implementation.\n     * @param {Coordinate} coordinate - Starting coordinate\n     * @param {number} distance - Distance in meters\n     * @param {number} bearing - Bearing in degrees\n     * @returns {Coordinate} Destination coordinate\n     */\n  static destinationCoordinate(coordinate, distance, bearing) {\n    return this._calculateDestinationPoint(coordinate, distance, bearing);\n  }\n\n  /**\n     * Calculate a destination point given a starting point, distance, and bearing.\n     * Uses CoordinateUtils for consistent property handling.\n     * @param {Coordinate|Object} start - Starting coordinate\n     * @param {number} distance - Distance in meters\n     * @param {number} bearing - Bearing in degrees\n     * @returns {Coordinate} Destination coordinate\n     * @private\n     */\n  static _calculateDestinationPoint(start, distance, bearing) {\n    // Standardize coordinate properties\n    const standardStart = CoordinateUtils.standardizeCoordinate(start);\n\n    if (!standardStart) {\n      console.error('Invalid starting coordinate for destination calculation:', start);\n      return null;\n    }\n\n    const earthRadius = this._EARTH_RADIUS_M;\n    const bearingRad = bearing * Math.PI / 180;\n    const latRad = standardStart.lat * Math.PI / 180;\n    const lngRad = standardStart.lng * Math.PI / 180;\n\n    const distRatio = distance / earthRadius;\n    const sinDistRatio = Math.sin(distRatio);\n    const cosDistRatio = Math.cos(distRatio);\n\n    const sinLat1 = Math.sin(latRad);\n    const cosLat1 = Math.cos(latRad);\n\n    const sinLat2 = sinLat1 * cosDistRatio + cosLat1 * sinDistRatio * Math.cos(bearingRad);\n    const lat2 = Math.asin(sinLat2);\n\n    const y = Math.sin(bearingRad) * sinDistRatio * cosLat1;\n    const x = cosDistRatio - sinLat1 * sinLat2;\n    const lng2 = lngRad + Math.atan2(y, x);\n\n    // Preserve the original height reference and projection if available\n    const heightReference = start.heightReference ? start.heightReference :\n      (start instanceof Coordinate ? start.heightReference : 'ellipsoidal');\n    const projection = start.projection ? start.projection :\n      (start instanceof Coordinate ? start.projection : 'WGS84');\n\n    return new Coordinate(\n      lat2 * 180 / Math.PI,\n      ((lng2 * 180 / Math.PI) + 540) % 360 - 180, // Normalize to -180 to +180\n      standardStart.elevation,\n      heightReference,\n      projection,\n    );\n  }\n\n  /**\n     * Find the closest point on a line segment to a given point.\n     * Uses CoordinateUtils for consistent property handling.\n     * @param {Coordinate|Object} point - The reference point\n     * @param {Coordinate|Object} segmentStart - Start of the line segment\n     * @param {Coordinate|Object} segmentEnd - End of the line segment\n     * @returns {Object} Object with closest point and distance information\n     * @private\n     */\n  static _findClosestPointOnLineSegment(point, segmentStart, segmentEnd) {\n    // Standardize coordinates using CoordinateUtils\n    const standardPoint = CoordinateUtils.toCoordinate(point);\n    const standardStart = CoordinateUtils.toCoordinate(segmentStart);\n    const standardEnd = CoordinateUtils.toCoordinate(segmentEnd);\n\n    // Calculate vectors\n    const x = standardPoint.lng - standardStart.lng;\n    const y = standardPoint.lat - standardStart.lat;\n    const dx = standardEnd.lng - standardStart.lng;\n    const dy = standardEnd.lat - standardStart.lat;\n\n    // Calculate dot product\n    const dot = x * dx + y * dy;\n\n    // Calculate squared length of the segment\n    const len2 = dx * dx + dy * dy;\n\n    // Calculate parametric position along the line segment\n    const t = len2 > 0 ? Math.max(0, Math.min(1, dot / len2)) : 0;\n\n    // Calculate closest point\n    const closestLng = standardStart.lng + t * dx;\n    const closestLat = standardStart.lat + t * dy;\n\n    // Calculate elevation (linear interpolation)\n    const closestElev = standardStart.elevation +\n            t * (standardEnd.elevation - standardStart.elevation);\n\n    // Create the closest point coordinate\n    const closestPoint = new Coordinate(\n      closestLat,\n      closestLng,\n      closestElev,\n      standardStart.heightReference,\n      standardStart.projection,\n    );\n\n    // Calculate the distance to the closest point\n    const distance = standardPoint.distanceTo(closestPoint);\n\n    return {\n      point: closestPoint,\n      distance,\n      fraction: t,\n    };\n  }\n    \n  /**\n     * Check if two line segments intersect.\n     * @param {Coordinate} p1 - First point of first line segment\n     * @param {Coordinate} p2 - Second point of first line segment\n     * @param {Coordinate} p3 - First point of second line segment\n     * @param {Coordinate} p4 - Second point of second line segment\n     * @returns {boolean} True if the line segments intersect\n     * @private\n     */\n  static _lineSegmentsIntersect(p1, p2, p3, p4) {\n    // Convert to longitude, latitude order for calculation\n    const pt1 = { x: p1.lng, y: p1.lat };\n    const pt2 = { x: p2.lng, y: p2.lat };\n    const pt3 = { x: p3.lng, y: p3.lat };\n    const pt4 = { x: p4.lng, y: p4.lat };\n\n    // Calculate cross products\n    const d1 = this._direction(pt3, pt4, pt1);\n    const d2 = this._direction(pt3, pt4, pt2);\n    const d3 = this._direction(pt1, pt2, pt3);\n    const d4 = this._direction(pt1, pt2, pt4);\n\n    // Check if the line segments intersect\n    return (((d1 > 0 && d2 < 0) || (d1 < 0 && d2 > 0)) &&\n                ((d3 > 0 && d4 < 0) || (d3 < 0 && d4 > 0))) ||\n            (d1 === 0 && this._onSegment(pt3, pt4, pt1)) ||\n            (d2 === 0 && this._onSegment(pt3, pt4, pt2)) ||\n            (d3 === 0 && this._onSegment(pt1, pt2, pt3)) ||\n            (d4 === 0 && this._onSegment(pt1, pt2, pt4));\n  }\n\n  /**\n     * Calculate the direction of three points.\n     * @param {Object} a - First point {x, y}\n     * @param {Object} b - Second point {x, y}\n     * @param {Object} c - Third point {x, y}\n     * @returns {number} Direction value\n     * @private\n     */\n  static _direction(a, b, c) {\n    return (c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y);\n  }\n\n  /**\n     * Check if a point is on a line segment.\n     * @param {Object} a - First endpoint of segment {x, y}\n     * @param {Object} b - Second endpoint of segment {x, y}\n     * @param {Object} c - Point to check {x, y}\n     * @returns {boolean} True if the point is on the segment\n     * @private\n     */\n  static _onSegment(a, b, c) {\n    return c.x <= Math.max(a.x, b.x) && c.x >= Math.min(a.x, b.x) &&\n            c.y <= Math.max(a.y, b.y) && c.y >= Math.min(a.y, b.y);\n  }\n\n  /**\n     * Check if a polygon is self-intersecting.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon\n     * @returns {boolean} True if the polygon is self-intersecting\n     * @private\n     */\n  static _isSelfIntersecting(coordinates) {\n    // Check all line segments against all other line segments for intersection\n    for (let i = 0; i < coordinates.length - 1; i++) {\n      for (let j = i + 2; j < coordinates.length - 1; j++) {\n        // Skip adjacent segments\n        if (i === 0 && j === coordinates.length - 2) continue;\n\n        const p1 = coordinates[i];\n        const p2 = coordinates[i + 1];\n        const p3 = coordinates[j];\n        const p4 = coordinates[j + 1];\n\n        if (this._lineSegmentsIntersect(p1, p2, p3, p4)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n     * Check if a polygon or path is self-intersecting.\n     * Public method wrapping the private implementation.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon or path\n     * @returns {boolean} True if the polygon or path is self-intersecting\n     */\n  static hasSelfIntersections(coordinates) {\n    if (!coordinates || coordinates.length < 4) {\n      return false; // A path needs at least 4 points to self-intersect\n    }\n\n    return this._isSelfIntersecting(coordinates);\n  }\n\n  /**\n     * Calculate 2D area using spherical geometry.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon\n     * @returns {number} Area in square meters\n     * @private\n     */\n  static _calculate2DSphericalArea(coordinates) {\n    // We don't need R here since it's used in _calculateSphericalTriangleArea\n    let area = 0;\n\n    // For more than 3 coordinates, we compute the area using a sum of spherical triangles\n    for (let i = 1; i < coordinates.length - 1; i++) {\n      area += this._calculateSphericalTriangleArea(\n        coordinates[0],\n        coordinates[i],\n        coordinates[i + 1],\n      );\n    }\n\n    return Math.abs(area);\n  }\n\n  /**\n     * Calculate the area of a spherical triangle using Girard's formula.\n     * @param {Coordinate} A - First coordinate\n     * @param {Coordinate} B - Second coordinate\n     * @param {Coordinate} C - Third coordinate\n     * @returns {number} Area in square meters\n     * @private\n     */\n  static _calculateSphericalTriangleArea(A, B, C) {\n    const R = this._EARTH_RADIUS_M;\n\n    // Convert to radians\n    const a1 = A.lat * Math.PI / 180;\n    const a2 = A.lng * Math.PI / 180;\n    const b1 = B.lat * Math.PI / 180;\n    const b2 = B.lng * Math.PI / 180;\n    const c1 = C.lat * Math.PI / 180;\n    const c2 = C.lng * Math.PI / 180;\n\n    // Calculate the angles of the spherical triangle\n    const a = Math.acos(\n      Math.sin(b1) * Math.sin(c1) +\n            Math.cos(b1) * Math.cos(c1) * Math.cos(b2 - c2),\n    );\n    const b = Math.acos(\n      Math.sin(a1) * Math.sin(c1) +\n            Math.cos(a1) * Math.cos(c1) * Math.cos(a2 - c2),\n    );\n    const c = Math.acos(\n      Math.sin(a1) * Math.sin(b1) +\n            Math.cos(a1) * Math.cos(b1) * Math.cos(a2 - b2),\n    );\n\n    // Calculate the spherical excess (in radians)\n    const E = a + b + c - Math.PI;\n\n    // Calculate the area\n    return E * R * R;\n  }\n\n  /**\n     * Calculate area of a self-intersecting polygon using triangulation.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon\n     * @param {Object} options - Calculation options\n     * @returns {number} Area in square meters\n     * @private\n     */\n  static _calculateAreaWithTriangulation(coordinates, _options) {\n    // For simplicity in this implementation, we'll assume the polygon is not self-intersecting\n    // A full implementation would use ear clipping or other triangulation methods\n\n    console.warn('Self-intersecting polygon detected. Area calculation may be inaccurate.');\n\n    // Fall back to 2D calculation\n    return this._calculate2DSphericalArea(coordinates);\n  }\n\n  /**\n     * Calculate 3D area considering elevation.\n     * @param {Coordinate[]} coordinates - Array of coordinates defining a polygon\n     * @returns {number} Area in square meters\n     * @private\n     */\n  static _calculate3DArea(coordinates) {\n    // For 3D area, we'll project to a plane and calculate\n    // First determine plane normal vector by taking cross product\n    // of vectors formed by first three points\n\n    if (coordinates.length < 3) {\n      return 0;\n    }\n\n    // Convert to Cartesian coordinates\n    const cartesian = coordinates.map(coord => this._geographicToCartesian(coord));\n\n    // Calculate normal vector of best-fit plane\n    const normal = this._calculateBestFitPlaneNormal(cartesian);\n\n    // Project points onto the plane\n    const projectedPoints = cartesian.map(point =>\n      this._projectPointOntoPlane(point, normal, cartesian[0]),\n    );\n\n    // Calculate 3D area of the polygon on this plane\n    let area = 0;\n    for (let i = 0; i < projectedPoints.length - 1; i++) {\n      const p1 = projectedPoints[i];\n      const p2 = projectedPoints[i + 1];\n\n      // Add area of triangle formed with origin point\n      const crossProduct = this._crossProduct(p1, p2);\n      area += 0.5 * this._vectorLength(crossProduct);\n    }\n\n    return area;\n  }\n\n  /**\n     * Calculate the normal vector of the best-fit plane for a set of points.\n     * @param {Object[]} points - Array of Cartesian coordinates {x, y, z}\n     * @returns {Object} Normal vector {x, y, z}\n     * @private\n     */\n  static _calculateBestFitPlaneNormal(points) {\n    // For simplicity, we'll use the normal of the first triangle\n    // In a full implementation, we would use Principal Component Analysis\n\n    if (points.length < 3) {\n      return { x: 0, y: 0, z: 1 }; // Default to up\n    }\n\n    // Calculate vectors from first point to second and third points\n    const v1 = {\n      x: points[1].x - points[0].x,\n      y: points[1].y - points[0].y,\n      z: points[1].z - points[0].z,\n    };\n\n    const v2 = {\n      x: points[2].x - points[0].x,\n      y: points[2].y - points[0].y,\n      z: points[2].z - points[0].z,\n    };\n\n    // Calculate cross product to get normal vector\n    const normal = this._crossProduct(v1, v2);\n\n    // Normalize\n    const length = this._vectorLength(normal);\n\n    return {\n      x: normal.x / length,\n      y: normal.y / length,\n      z: normal.z / length,\n    };\n  }\n\n  /**\n     * Convert geographic coordinates to Cartesian (ECEF) coordinates.\n     * Uses CoordinateUtils for consistent property handling.\n     * @param {Coordinate|Object} coord - Geographic coordinate\n     * @returns {Object} Cartesian coordinate with consistent property naming\n     * @private\n     */\n  static _geographicToCartesian(coord) {\n    const a = this._WGS84_SEMI_MAJOR_AXIS;\n    const e2 = 0.00669437999014; // WGS84 first eccentricity squared\n\n    // Standardize coordinate properties using CoordinateUtils\n    const standardCoord = CoordinateUtils.standardizeCoordinate(coord);\n\n    if (!standardCoord || standardCoord.lat === null || standardCoord.lng === null) {\n      console.error('Invalid coordinate format for conversion:', coord);\n      // Return a default value at origin\n      return { x: 0, y: 0, z: 0, originalFormat: 'cartesian' };\n    }\n\n    const latRad = standardCoord.lat * Math.PI / 180;\n    const lngRad = standardCoord.lng * Math.PI / 180;\n    const h = standardCoord.elevation;\n\n    const sinLat = Math.sin(latRad);\n    const cosLat = Math.cos(latRad);\n    const sinLng = Math.sin(lngRad);\n    const cosLng = Math.cos(lngRad);\n\n    const N = a / Math.sqrt(1 - e2 * sinLat * sinLat);\n\n    // Create result with both naming conventions for compatibility\n    const result = {\n      x: (N + h) * cosLat * cosLng,\n      y: (N + h) * cosLat * sinLng,\n      z: (N * (1 - e2) + h) * sinLat,\n      // Include standardized geographic properties\n      lat: standardCoord.lat,\n      lng: standardCoord.lng,\n      elevation: standardCoord.elevation,\n      originalFormat: 'geographic',\n    };\n\n    return result;\n  }\n\n  /**\n     * Project a point onto a plane.\n     * @param {Object} point - Cartesian coordinate {x, y, z}\n     * @param {Object} normal - Normal vector of the plane {x, y, z}\n     * @param {Object} planePoint - A point on the plane {x, y, z}\n     * @returns {Object} Projected point on the plane\n     * @private\n     */\n  static _projectPointOntoPlane(point, normal, planePoint) {\n    // Calculate vector from plane point to target point\n    const v = {\n      x: point.x - planePoint.x,\n      y: point.y - planePoint.y,\n      z: point.z - planePoint.z,\n    };\n\n    // Calculate distance from point to plane\n    const dist = this._dotProduct(v, normal);\n\n    // Project the point onto the plane\n    return {\n      x: point.x - dist * normal.x,\n      y: point.y - dist * normal.y,\n      z: point.z - dist * normal.z,\n    };\n  }\n\n  /**\n     * Calculate the dot product of two vectors.\n     * @param {Object} v1 - First vector {x, y, z}\n     * @param {Object} v2 - Second vector {x, y, z}\n     * @returns {number} Dot product\n     * @private\n     */\n  static _dotProduct(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n  }\n\n  /**\n     * Calculate the cross product of two vectors.\n     * @param {Object} v1 - First vector {x, y, z}\n     * @param {Object} v2 - Second vector {x, y, z}\n     * @returns {Object} Cross product vector {x, y, z}\n     * @private\n     */\n  static _crossProduct(v1, v2) {\n    return {\n      x: v1.y * v2.z - v1.z * v2.y,\n      y: v1.z * v2.x - v1.x * v2.z,\n      z: v1.x * v2.y - v1.y * v2.x,\n    };\n  }\n\n  /**\n     * Calculate the length of a vector.\n     * @param {Object} v - Vector {x, y, z}\n     * @returns {number} Vector length\n     * @private\n     */\n  static _vectorLength(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n  }\n\n  /**\n     * Calculate the approximate 2D distance between two coordinates using Haversine formula.\n     * @param {Coordinate|Object} coord1 - First coordinate\n     * @param {Coordinate|Object} coord2 - Second coordinate\n     * @returns {number} Distance in meters\n     * @private\n     */\n  static _calculateApproximateDistance(coord1, coord2) {\n    const R = this._EARTH_RADIUS_M;\n    const lat1 = coord1.lat * Math.PI / 180;\n    const lat2 = coord2.lat * Math.PI / 180;\n    const dLat = lat2 - lat1;\n    const dLon = (coord2.lng - coord1.lng) * Math.PI / 180;\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(lat1) * Math.cos(lat2) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  }\n}","/**\n * Core module for the gis-survey.js library.\n * \n * Provides the foundational 3D coordinate system, transformations,\n * and geometry calculations for the survey tools.\n */\n\n// Export the core classes\nexport { Coordinate } from './Coordinate.js';\nexport { GeoidModel } from './GeoidModel.js';\nexport { TransformerFactory } from './TransformerFactory.js';\nexport { CoordinateTransformer } from './CoordinateTransformer.js';\nexport { SimpleWGS84Transformer } from './SimpleWGS84Transformer.js';\nexport { CoordinateUtils } from './CoordinateUtils.js';\n\n/**\n * Initialize the core geometry module.\n * @param {Object} [options] - Initialization options\n * @param {string} [options.transformerType='simple'] - Type of transformer to use ('simple' or 'proj4js')\n * @param {string} [options.geoidModel='default'] - Geoid model to use for height reference conversions\n * @returns {Promise<boolean>} Promise that resolves when initialization is complete\n */\nexport async function initializeCore(options = {}) {\n  const { \n    transformerType = 'simple',\n    geoidModel = 'default',\n  } = options;\n  \n  // Set the default transformer type\n  if (options.transformerType) {\n    try {\n      const { TransformerFactory } = await import('./TransformerFactory.js');\n      TransformerFactory.setDefaultType(transformerType);\n    } catch (error) {\n      console.error(`Failed to set transformer type: ${error.message}`);\n      return false;\n    }\n  }\n  \n  // Load geoid model if specified\n  if (geoidModel !== 'default') {\n    try {\n      const { GeoidModel } = await import('./GeoidModel.js');\n      await GeoidModel.loadModel(geoidModel);\n    } catch (error) {\n      console.error(`Failed to load geoid model: ${error.message}`);\n      return false;\n    }\n  }\n  \n  return true;\n}\n\n/**\n * Create a coordinate object.\n * Convenience function for creating coordinates.\n * \n * @param {number} lat - Latitude in decimal degrees\n * @param {number} lng - Longitude in decimal degrees\n * @param {number} [elevation=0] - Elevation in meters\n * @param {string} [heightReference='ellipsoidal'] - Height reference system ('ellipsoidal' or 'orthometric')\n * @param {string} [projection='WGS84'] - Coordinate projection system\n * @returns {Coordinate} A new Coordinate object\n */\nexport function createCoordinate(lat, lng, elevation = 0, heightReference = 'ellipsoidal', projection = 'WGS84') {\n  const { Coordinate } = require('./Coordinate.js');\n  return new Coordinate(lat, lng, elevation, heightReference, projection);\n}\n\n/**\n * Get a list of all supported projections.\n * @returns {string[]} Array of supported projection identifiers\n */\nexport function getSupportedProjections() {\n  const { TransformerFactory } = require('./TransformerFactory.js');\n  return TransformerFactory.getAllSupportedProjections();\n}\n\n/**\n * Utility function to create a geojson feature from a coordinate.\n * @param {Coordinate} coordinate - The coordinate to convert\n * @param {Object} [properties={}] - Properties to include in the GeoJSON feature\n * @returns {Object} GeoJSON Feature object\n */\nexport function coordinateToGeoJSON(coordinate, properties = {}) {\n  return {\n    type: 'Feature',\n    geometry: coordinate.toGeoJSON(),\n    properties,\n  };\n}\n\n/**\n * Utility function to create a geojson feature collection from an array of coordinates.\n * @param {Coordinate[]} coordinates - Array of coordinates to convert\n * @param {Object} [properties={}] - Additional properties for the feature collection\n * @returns {Object} GeoJSON FeatureCollection object\n */\nexport function coordinatesToGeoJSON(coordinates, properties = {}) {\n  return {\n    type: 'FeatureCollection',\n    features: coordinates.map((coord, index) => coordinateToGeoJSON(coord, { \n      id: index, \n      ...properties, \n    })),\n    properties,\n  };\n}","/**\n * Base abstract class for all survey features\n * @module gnss/survey/features/FeatureBase\n */\nimport { EventEmitter } from '../core/event-emitter.js';\n\nexport class FeatureBase extends EventEmitter {\n  /**\n     * Initialize a feature\n     * @param {Object} options - Configuration options for the feature\n     * @param {string} [options.id] - Unique identifier for the feature\n     * @param {string} [options.name] - Human-readable name for the feature\n     * @param {Object} [options.style] - Style properties for the feature\n     * @param {Object} [options.properties] - Custom properties for the feature\n     * @param {Object} [options.metadata] - Metadata related to the feature\n     */\n  constructor(options = {}) {\n    super();\n        \n    if (this.constructor === FeatureBase) {\n      throw new Error('Abstract class \\'FeatureBase\\' cannot be instantiated directly.');\n    }\n        \n    this.id = options.id || `feature_${Date.now()}_${Math.floor(Math.random() * 10000)}`;\n    this.name = options.name || `Feature ${this.id.substr(-4)}`;\n    this.type = 'feature';\n    this.style = options.style || {};\n    this.properties = options.properties || {};\n    this.metadata = options.metadata || {};\n    this.selected = false;\n    this.visible = options.visible !== false;\n    this.editable = options.editable !== false;\n    this.interactive = options.interactive !== false;\n    this.rendered = null;\n    this.timestamp = options.timestamp || Date.now();\n    this.sourceData = options.sourceData || null;\n  }\n    \n  /**\n     * Get the feature type string\n     * @returns {string} - The feature type\n     */\n  getType() {\n    return this.type;\n  }\n    \n  /**\n     * Get the feature's bounds\n     * @returns {Object} - The bounds object with northEast and southWest coordinates\n     */\n  getBounds() {\n    throw new Error('Method \\'getBounds()\\' must be implemented.');\n  }\n    \n  /**\n     * Get the feature's center coordinate\n     * @returns {Coordinate} - The center coordinate\n     */\n  getCenter() {\n    throw new Error('Method \\'getCenter()\\' must be implemented.');\n  }\n    \n  /**\n     * Get the elevation range of the feature\n     * @returns {Object} - Object with min and max elevations\n     */\n  getElevationRange() {\n    throw new Error('Method \\'getElevationRange()\\' must be implemented.');\n  }\n    \n  /**\n     * Check if the feature contains a coordinate\n     * @param {Coordinate} coordinate - The coordinate to check\n     * @param {Object} [options] - Tolerance and other options\n     * @returns {boolean} - True if the feature contains the coordinate\n     */\n  contains(_coordinate, _options = {}) {\n    throw new Error('Method \\'contains()\\' must be implemented.');\n  }\n    \n  /**\n     * Find the nearest point on the feature to a given coordinate\n     * @param {Coordinate} coordinate - The reference coordinate\n     * @returns {Object} - Object with the nearest point and distance\n     */\n  nearest(_coordinate) {\n    throw new Error('Method \\'nearest()\\' must be implemented.');\n  }\n    \n  /**\n     * Export the feature to GeoJSON\n     * @param {Object} [options] - Export options\n     * @returns {Object} - GeoJSON representation of the feature\n     */\n  toGeoJSON(_options = {}) {\n    throw new Error('Method \\'toGeoJSON()\\' must be implemented.');\n  }\n    \n  /**\n     * Import feature from GeoJSON\n     * @param {Object} geojson - GeoJSON object to import\n     * @param {Object} [options] - Import options\n     * @returns {boolean} - Success status\n     */\n  fromGeoJSON(_geojson, _options = {}) {\n    throw new Error('Method \\'fromGeoJSON()\\' must be implemented.');\n  }\n    \n  /**\n     * Clone this feature\n     * @returns {FeatureBase} - A new feature instance that is a copy of this one\n     */\n  clone() {\n    throw new Error('Method \\'clone()\\' must be implemented.');\n  }\n    \n  /**\n     * Set the feature's style\n     * @param {Object} style - Style properties\n     * @param {Object} [options] - Options for style application\n     */\n  setStyle(style, options = {}) {\n    this.style = { ...this.style, ...style };\n    this.emit('style-changed', { feature: this, style: this.style, options });\n  }\n    \n  /**\n     * Get the feature's style\n     * @returns {Object} - Style properties\n     */\n  getStyle() {\n    return { ...this.style };\n  }\n    \n  /**\n     * Set the feature's properties\n     * @param {Object} properties - Custom properties\n     */\n  setProperties(properties) {\n    this.properties = { ...this.properties, ...properties };\n    this.emit('properties-changed', { feature: this, properties: this.properties });\n  }\n    \n  /**\n     * Get the feature's properties\n     * @returns {Object} - Custom properties\n     */\n  getProperties() {\n    return { ...this.properties };\n  }\n    \n  /**\n     * Get a specific property\n     * @param {string} name - Property name\n     * @returns {*} - Property value\n     */\n  getProperty(name) {\n    return this.properties[name];\n  }\n    \n  /**\n     * Set a specific property\n     * @param {string} name - Property name\n     * @param {*} value - Property value\n     */\n  setProperty(name, value) {\n    this.properties[name] = value;\n    this.emit('property-changed', { feature: this, name, value });\n  }\n    \n  /**\n     * Set the feature's name\n     * @param {string} name - The new name for the feature\n     */\n  setName(name) {\n    this.name = name;\n    this.emit('name-changed', { feature: this, name });\n  }\n    \n  /**\n     * Get the feature's name\n     * @returns {string} - The feature's name\n     */\n  getName() {\n    return this.name;\n  }\n    \n  /**\n     * Select the feature\n     * @param {Object} [options] - Options for selection\n     */\n  select(options = {}) {\n    if (!this.selected) {\n      this.selected = true;\n      this.emit('selected', { feature: this, options });\n    }\n  }\n    \n  /**\n     * Deselect the feature\n     * @param {Object} [options] - Options for deselection\n     */\n  deselect(options = {}) {\n    if (this.selected) {\n      this.selected = false;\n      this.emit('deselected', { feature: this, options });\n    }\n  }\n    \n  /**\n     * Toggle the feature's selection state\n     * @param {Object} [options] - Options for selection toggling\n     * @returns {boolean} - The new selection state\n     */\n  toggleSelection(options = {}) {\n    if (this.selected) {\n      this.deselect(options);\n    } else {\n      this.select(options);\n    }\n    return this.selected;\n  }\n    \n  /**\n     * Show the feature\n     */\n  show() {\n    if (!this.visible) {\n      this.visible = true;\n      this.emit('visibility-changed', { feature: this, visible: true });\n    }\n  }\n    \n  /**\n     * Hide the feature\n     */\n  hide() {\n    if (this.visible) {\n      this.visible = false;\n      this.emit('visibility-changed', { feature: this, visible: false });\n    }\n  }\n    \n  /**\n     * Toggle the feature's visibility\n     * @returns {boolean} - The new visibility state\n     */\n  toggleVisibility() {\n    this.visible = !this.visible;\n    this.emit('visibility-changed', { feature: this, visible: this.visible });\n    return this.visible;\n  }\n    \n  /**\n     * Make the feature editable\n     */\n  enableEditing() {\n    if (!this.editable) {\n      this.editable = true;\n      this.emit('editable-changed', { feature: this, editable: true });\n    }\n  }\n    \n  /**\n     * Make the feature non-editable\n     */\n  disableEditing() {\n    if (this.editable) {\n      this.editable = false;\n      this.emit('editable-changed', { feature: this, editable: false });\n    }\n  }\n    \n  /**\n     * Register a rendered object with this feature\n     * @param {Object} renderedObject - The rendered object\n     */\n  setRendered(renderedObject) {\n    this.rendered = renderedObject;\n  }\n    \n  /**\n     * Get the rendered object for this feature\n     * @returns {Object|null} - The rendered object or null\n     */\n  getRendered() {\n    return this.rendered;\n  }\n    \n  /**\n     * Check if the feature has a valid rendered object\n     * @returns {boolean} - True if the feature has a rendered object\n     */\n  isRendered() {\n    return this.rendered !== null;\n  }\n}","/**\n * Point feature class for survey points\n * @module gnss/survey/features/PointFeature\n */\nimport { FeatureBase } from './FeatureBase.js';\nimport { Coordinate } from '../core/Coordinate.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\nexport class PointFeature extends FeatureBase {\n  /**\n     * Initialize a point feature\n     * @param {Coordinate|Object} coordinate - The point's coordinate\n     * @param {Object} [options] - Configuration options\n     * @param {string} [options.id] - Unique identifier\n     * @param {string} [options.name] - Human-readable name\n     * @param {Object} [options.style] - Style properties\n     * @param {Object} [options.properties] - Custom properties\n     * @param {Object} [options.metadata] - Metadata\n     */\n  constructor(coordinate, options = {}) {\n    super(options);\n        \n    this.type = 'point';\n        \n    // Handle different input types\n    if (coordinate instanceof Coordinate) {\n      // Use the Coordinate instance directly\n      this.coordinate = coordinate;\n    } else if (typeof coordinate === 'object') {\n      if (coordinate.latitude !== undefined && coordinate.longitude !== undefined) {\n        // Object with latitude/longitude properties\n        const elevationVal = coordinate.elevation !== undefined ? coordinate.elevation :\n          (coordinate.alt !== undefined ? coordinate.alt : null);\n\n        // Create compatible coordinate object\n        this.coordinate = {\n          lat: coordinate.latitude,\n          lng: coordinate.longitude,\n          elevation: elevationVal,\n          toString: function() { return `${this.lat}, ${this.lng}, ${this.elevation || 0}`; },\n        };\n      } else if (coordinate.lat !== undefined && coordinate.lng !== undefined) {\n        // Google Maps-style object with lat/lng - use directly with minimal modifications\n        const elevationVal = coordinate.elevation !== undefined ? coordinate.elevation :\n          (coordinate.alt !== undefined ? coordinate.alt : null);\n\n        // Ensure it has all expected properties\n        if (!coordinate.toString) {\n          coordinate.toString = function() { return `${this.lat}, ${this.lng}, ${this.elevation || 0}`; };\n        }\n\n        // Store elevation if available\n        if (elevationVal !== null && elevationVal !== undefined) {\n          coordinate.elevation = elevationVal;\n        }\n\n        this.coordinate = coordinate;\n      } else if (Array.isArray(coordinate) && coordinate.length >= 2) {\n        // Array [lng, lat, elevation] (GeoJSON style)\n        const lat = coordinate[1];\n        const lng = coordinate[0];\n        const elevation = coordinate.length > 2 ? coordinate[2] : null;\n                \n        // Create compatible coordinate object\n        this.coordinate = {\n          lat: lat,\n          lng: lng,\n          elevation: elevation,\n          toString: function() { return `${this.lat}, ${this.lng}, ${this.elevation || 0}`; },\n        };\n      } else {\n        console.error('Invalid coordinate format:', coordinate);\n        throw new Error('Invalid coordinate format');\n      }\n    } else {\n      console.error('Invalid coordinate type:', typeof coordinate);\n      throw new Error('Point feature requires a valid coordinate');\n    }\n        \n    // If no name was provided, generate a coordinate-based name\n    if (!options.name) {\n      // Create a name that works with any coordinate format\n      const lat = this.coordinate.lat || this.coordinate.latitude;\n      const lng = this.coordinate.lng || this.coordinate.longitude;\n      this.name = `Point ${lat.toFixed(5)}, ${lng.toFixed(5)}`;\n    }\n        \n    // Store elevation in properties too for easy access\n    const elevation = this.coordinate.elevation;\n    if (elevation !== null && elevation !== undefined) {\n      this.properties.elevation = elevation;\n    }\n  }\n    \n  /**\n     * Get the point's coordinate\n     * @returns {Coordinate|Object} - The coordinate\n     */\n  getCoordinate() {\n    // Return the stored coordinate, which may be a Coordinate instance\n    // or a compatible coordinate-like object\n    return this.coordinate;\n  }\n    \n  /**\n     * Set the point's coordinate\n     * @param {Coordinate|Object} coordinate - The new coordinate\n     */\n  setCoordinate(coordinate) {\n    // Accept either Coordinate instances or coordinate-like objects\n    if (coordinate && (coordinate instanceof Coordinate || \n            (typeof coordinate === 'object' && \n             (coordinate.lat !== undefined || coordinate.latitude !== undefined)))) {\n            \n      // Store the coordinate directly\n      this.coordinate = coordinate;\n            \n      // Extract elevation consistently regardless of coordinate type\n      const elevation = coordinate.elevation !== undefined ? coordinate.elevation :\n        coordinate.alt !== undefined ? coordinate.alt : null;\n            \n      // Update elevation property\n      if (elevation !== null && elevation !== undefined) {\n        this.properties.elevation = elevation;\n      } else {\n        delete this.properties.elevation;\n      }\n            \n      this.emit('geometry-changed', { feature: this, coordinate: this.coordinate });\n    } else {\n      console.error('Invalid coordinate format:', coordinate);\n      throw new Error('Coordinate must be a valid coordinate-like object');\n    }\n  }\n    \n  /**\n     * Get the feature's bounds\n     * @returns {Object} - The bounds object with northEast and southWest coordinates\n     */\n  getBounds() {\n    // For a point, the bounds are the same point\n    return {\n      northEast: this.coordinate.clone(),\n      southWest: this.coordinate.clone(),\n      north: this.coordinate.lat,\n      east: this.coordinate.lng,\n      south: this.coordinate.lat,\n      west: this.coordinate.lng,\n    };\n  }\n    \n  /**\n     * Get the feature's center coordinate\n     * @returns {Coordinate} - The center coordinate\n     */\n  getCenter() {\n    return this.coordinate;\n  }\n    \n  /**\n     * Get the elevation range of the feature\n     * @returns {Object} - Object with min and max elevations\n     */\n  getElevationRange() {\n    const elevation = this.coordinate.elevation || 0;\n    return {\n      min: elevation,\n      max: elevation,\n      range: 0,\n    };\n  }\n    \n  /**\n     * Check if the feature contains a coordinate\n     * @param {Coordinate|Object} coordinate - The coordinate to check\n     * @param {Object} [options] - Tolerance and other options\n     * @param {number} [options.tolerance=0] - Distance tolerance in meters\n     * @param {boolean} [options.includeElevation=false] - Whether to consider elevation\n     * @returns {boolean} - True if the feature contains the coordinate\n     */\n  contains(coordinate, options = {}) {\n    // Check if we have a valid coordinate-like object\n    if (!coordinate || typeof coordinate !== 'object' || \n            (coordinate.lat === undefined && coordinate.latitude === undefined)) {\n      console.error('Invalid coordinate format:', coordinate);\n      return false;\n    }\n        \n    const tolerance = options.tolerance || 0;\n        \n    if (tolerance === 0) {\n      // Exact match only - simple comparison of lat/lng\n      const checkLat = this.coordinate.lat || this.coordinate.latitude;\n      const checkLng = this.coordinate.lng || this.coordinate.longitude;\n      const coordLat = coordinate.lat || coordinate.latitude;\n      const coordLng = coordinate.lng || coordinate.longitude;\n            \n      // Check for exact match\n      return checkLat === coordLat && checkLng === coordLng;\n    } else {\n      // Within tolerance distance - use GeometryEngine with any coordinate-like object\n      try {\n        const distance = GeometryEngine.calculateDistance(\n          this.coordinate, \n          coordinate, \n          { includeElevation: options.includeElevation },\n        );\n        return distance <= tolerance;\n      } catch (error) {\n        console.error('Error calculating distance for contains check:', error);\n        return false;\n      }\n    }\n  }\n    \n  /**\n     * Find the nearest point on the feature to a given coordinate\n     * @param {Coordinate|Object} coordinate - The reference coordinate\n     * @returns {Object} - Object with the nearest point and distance\n     */\n  nearest(coordinate) {\n    // Check if we have a valid coordinate-like object\n    if (!coordinate || typeof coordinate !== 'object' || \n            (coordinate.lat === undefined && coordinate.latitude === undefined)) {\n      console.error('Invalid coordinate format:', coordinate);\n      throw new Error('Coordinate must be a valid coordinate-like object');\n    }\n        \n    try {\n      const distance = GeometryEngine.calculateDistance(\n        this.coordinate, \n        coordinate, \n        { includeElevation: true },\n      );\n            \n      // Return a simple object with the result\n      return {\n        // Just return the original coordinate, no need to clone\n        coordinate: this.coordinate,\n        distance,\n      };\n    } catch (error) {\n      console.error('Error calculating nearest point:', error);\n      return {\n        coordinate: this.coordinate,\n        distance: Infinity,\n      };\n    }\n  }\n    \n  /**\n     * Export the feature to GeoJSON\n     * @param {Object} [options] - Export options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation\n     * @param {boolean} [options.includeProperties=true] - Whether to include properties\n     * @returns {Object} - GeoJSON representation of the feature\n     */\n  toGeoJSON(options = {}) {\n    const includeElevation = options.includeElevation !== false;\n    const includeProperties = options.includeProperties !== false;\n        \n    const geojson = {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [\n          this.coordinate.lng,\n          this.coordinate.lat,\n        ],\n      },\n      id: this.id,\n    };\n        \n    // Include elevation if available and requested\n    if (includeElevation && this.coordinate.elevation !== null && this.coordinate.elevation !== undefined) {\n      geojson.geometry.coordinates.push(this.coordinate.elevation);\n    }\n        \n    // Include properties if requested\n    if (includeProperties) {\n      geojson.properties = {\n        name: this.name,\n        ...this.properties,\n      };\n    }\n        \n    return geojson;\n  }\n    \n  /**\n     * Import feature from GeoJSON\n     * @param {Object} geojson - GeoJSON object to import\n     * @param {Object} [options] - Import options\n     * @returns {boolean} - Success status\n     */\n  fromGeoJSON(geojson, _options = {}) {\n    if (!geojson || geojson.type !== 'Feature' || !geojson.geometry || \n            geojson.geometry.type !== 'Point' || !Array.isArray(geojson.geometry.coordinates)) {\n      return false;\n    }\n        \n    const coords = geojson.geometry.coordinates;\n    if (coords.length < 2) {\n      return false;\n    }\n        \n    // Extract coordinates (GeoJSON format is [longitude, latitude, elevation?])\n    const longitude = coords[0];\n    const latitude = coords[1];\n    const elevation = coords.length > 2 ? coords[2] : null;\n        \n    // Create new coordinate\n    this.coordinate = new Coordinate(latitude, longitude, elevation);\n        \n    // Update properties\n    if (geojson.properties) {\n      if (geojson.properties.name) {\n        this.name = geojson.properties.name;\n        delete geojson.properties.name;\n      }\n            \n      this.properties = { ...geojson.properties };\n    }\n        \n    // Update ID if provided\n    if (geojson.id) {\n      this.id = geojson.id;\n    }\n        \n    // Store elevation in properties too for easy access\n    if (elevation !== null && elevation !== undefined) {\n      this.properties.elevation = elevation;\n    }\n        \n    this.emit('geometry-changed', { feature: this, coordinate: this.coordinate });\n    return true;\n  }\n    \n  /**\n     * Clone this feature\n     * @returns {PointFeature} - A new point feature instance that is a copy of this one\n     */\n  clone() {\n    const cloned = new PointFeature(\n      this.coordinate.clone(),\n      {\n        id: `clone_${this.id}`,\n        name: `${this.name} (copy)`,\n        style: { ...this.style },\n        properties: { ...this.properties },\n        metadata: { ...this.metadata },\n        visible: this.visible,\n        editable: this.editable,\n        interactive: this.interactive,\n      },\n    );\n        \n    return cloned;\n  }\n    \n  /**\n     * Calculate distance to another point\n     * @param {PointFeature|Coordinate} point - The other point\n     * @param {Object} [options] - Distance calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation\n     * @returns {number} - Distance in meters\n     */\n  distanceTo(point, options = {}) {\n    const otherCoord = point instanceof PointFeature ? point.getCoordinate() : point;\n        \n    if (!(otherCoord instanceof Coordinate)) {\n      throw new Error('Point must be a PointFeature or Coordinate');\n    }\n        \n    return GeometryEngine.calculateDistance(\n      this.coordinate, \n      otherCoord, \n      { includeElevation: options.includeElevation !== false },\n    );\n  }\n    \n  /**\n     * Calculate bearing to another point\n     * @param {PointFeature|Coordinate} point - The other point\n     * @returns {number} - Bearing in degrees (0-360)\n     */\n  bearingTo(point) {\n    const otherCoord = point instanceof PointFeature ? point.getCoordinate() : point;\n        \n    if (!(otherCoord instanceof Coordinate)) {\n      throw new Error('Point must be a PointFeature or Coordinate');\n    }\n        \n    return GeometryEngine.calculateBearing(this.coordinate, otherCoord);\n  }\n    \n  /**\n     * Move the point by a specified distance and bearing\n     * @param {number} distance - Distance to move in meters\n     * @param {number} bearing - Bearing in degrees (0 = north, 90 = east, etc.)\n     * @param {Object} [options] - Movement options\n     * @param {boolean} [options.preserveElevation=true] - Keep the same elevation\n     * @returns {PointFeature} - This feature for chaining\n     */\n  moveByDistanceAndBearing(distance, bearing, options = {}) {\n    const preserveElevation = options.preserveElevation !== false;\n    const elevation = preserveElevation ? this.coordinate.elevation : null;\n        \n    const newCoord = GeometryEngine.destinationCoordinate(\n      this.coordinate, \n      distance, \n      bearing,\n    );\n        \n    if (preserveElevation && elevation !== null && elevation !== undefined) {\n      newCoord.elevation = elevation;\n    }\n        \n    this.setCoordinate(newCoord);\n    return this;\n  }\n    \n  /**\n     * Move the point to a specific coordinate\n     * @param {Coordinate} coordinate - The new coordinate\n     * @returns {PointFeature} - This feature for chaining\n     */\n  moveTo(coordinate) {\n    this.setCoordinate(coordinate);\n    return this;\n  }\n}","/**\n * Line feature class for survey lines and polylines\n * @module gnss/survey/features/LineFeature\n */\nimport { FeatureBase } from './FeatureBase.js';\nimport { Coordinate } from '../core/Coordinate.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\nexport class LineFeature extends FeatureBase {\n  /**\n     * Initialize a line feature\n     * @param {Array<Coordinate>} coordinates - The line's coordinates\n     * @param {Object} [options] - Configuration options\n     * @param {string} [options.id] - Unique identifier\n     * @param {string} [options.name] - Human-readable name\n     * @param {Object} [options.style] - Style properties\n     * @param {Object} [options.properties] - Custom properties\n     * @param {Object} [options.metadata] - Metadata\n     * @param {boolean} [options.closed=false] - Whether the line forms a closed loop\n     */\n  constructor(coordinates = [], options = {}) {\n    super(options);\n        \n    this.type = 'line';\n    this.closed = options.closed || false;\n        \n    // Validate and convert coordinates\n    this.coordinates = this._validateCoordinates(coordinates);\n        \n    // Update properties with metadata about the line\n    this._updateProperties();\n        \n    // If no name was provided, generate a default name\n    if (!options.name) {\n      this.name = this.closed ? \n        `Closed Line (${this.coordinates.length} vertices)` : \n        `Line (${this.coordinates.length} vertices)`;\n    }\n  }\n    \n  /**\n     * Validate and convert coordinate array\n     * @param {Array} coordinates - Array of coordinates in various formats\n     * @returns {Array<Coordinate>} - Array of Coordinate objects\n     * @private\n     */\n  _validateCoordinates(coordinates) {\n    if (!Array.isArray(coordinates)) {\n      throw new Error('Coordinates must be an array');\n    }\n        \n    return coordinates.map(coord => {\n      if (coord instanceof Coordinate) {\n        return coord;\n      } else if (typeof coord === 'object') {\n        if (coord.latitude !== undefined && coord.longitude !== undefined) {\n          // Object with lat/lng properties\n          const elevation = coord.elevation !== undefined ? coord.elevation : \n            (coord.alt !== undefined ? coord.alt : null);\n          return new Coordinate(coord.latitude, coord.longitude, elevation);\n        } else if (coord.lat !== undefined && coord.lng !== undefined) {\n          // Google Maps-style object\n          const elevation = coord.elevation !== undefined ? coord.elevation : \n            (coord.alt !== undefined ? coord.alt : null);\n          return new Coordinate(coord.lat, coord.lng, elevation);\n        } else if (Array.isArray(coord) && coord.length >= 2) {\n          // Array [lng, lat, elevation] (GeoJSON style)\n          return new Coordinate(coord[1], coord[0], coord[2] || null);\n        }\n      }\n            \n      throw new Error('Invalid coordinate format in array');\n    });\n  }\n    \n  /**\n     * Update internal properties with metadata about the line\n     * @private\n     */\n  _updateProperties() {\n    if (this.coordinates.length < 2) {\n      this.properties.length = 0;\n      return;\n    }\n        \n    // Calculate length\n    this.properties.length = GeometryEngine.calculatePathLength(this.coordinates, { includeElevation: true });\n        \n    // Get elevation statistics\n    const elevations = this.coordinates\n      .map(coord => coord.elevation)\n      .filter(elev => elev !== null && elev !== undefined);\n        \n    if (elevations.length > 0) {\n      this.properties.minElevation = Math.min(...elevations);\n      this.properties.maxElevation = Math.max(...elevations);\n      this.properties.elevationGain = GeometryEngine.calculateElevationGain(this.coordinates);\n      this.properties.elevationLoss = GeometryEngine.calculateElevationLoss(this.coordinates);\n    }\n  }\n    \n  /**\n     * Get the line's coordinates\n     * @returns {Array<Coordinate>} - Array of coordinates\n     */\n  getCoordinates() {\n    return [...this.coordinates];\n  }\n    \n  /**\n     * Set the line's coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates\n     */\n  setCoordinates(coordinates) {\n    this.coordinates = this._validateCoordinates(coordinates);\n    this._updateProperties();\n    this.emit('geometry-changed', { feature: this, coordinates: this.coordinates });\n  }\n    \n  /**\n     * Add a coordinate to the line\n     * @param {Coordinate} coordinate - The coordinate to add\n     * @param {number} [index] - Optional index to insert at (default: end of line)\n     */\n  addCoordinate(coordinate, index = null) {\n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    if (index === null) {\n      // Add to end\n      this.coordinates.push(coordinate);\n    } else {\n      // Insert at specific index\n      this.coordinates.splice(index, 0, coordinate);\n    }\n        \n    this._updateProperties();\n    this.emit('geometry-changed', { \n      feature: this, \n      coordinates: this.coordinates,\n      action: 'add',\n      coordinate,\n      index: index === null ? this.coordinates.length - 1 : index,\n    });\n  }\n    \n  /**\n     * Remove a coordinate from the line\n     * @param {number} index - Index of the coordinate to remove\n     * @returns {Coordinate|null} - The removed coordinate or null if index was invalid\n     */\n  removeCoordinate(index) {\n    if (index < 0 || index >= this.coordinates.length) {\n      return null;\n    }\n        \n    const removed = this.coordinates.splice(index, 1)[0];\n    this._updateProperties();\n        \n    this.emit('geometry-changed', { \n      feature: this, \n      coordinates: this.coordinates,\n      action: 'remove',\n      coordinate: removed,\n      index,\n    });\n        \n    return removed;\n  }\n    \n  /**\n     * Update a coordinate at a specific index\n     * @param {number} index - Index of the coordinate to update\n     * @param {Coordinate} coordinate - The new coordinate\n     * @returns {boolean} - Success status\n     */\n  updateCoordinate(index, coordinate) {\n    if (index < 0 || index >= this.coordinates.length) {\n      return false;\n    }\n        \n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    const oldCoord = this.coordinates[index];\n    this.coordinates[index] = coordinate;\n    this._updateProperties();\n        \n    this.emit('geometry-changed', { \n      feature: this, \n      coordinates: this.coordinates,\n      action: 'update',\n      oldCoordinate: oldCoord,\n      newCoordinate: coordinate,\n      index,\n    });\n        \n    return true;\n  }\n    \n  /**\n     * Get the number of vertices in the line\n     * @returns {number} - Vertex count\n     */\n  getVertexCount() {\n    return this.coordinates.length;\n  }\n    \n  /**\n     * Get a specific vertex by index\n     * @param {number} index - Index of the vertex\n     * @returns {Coordinate|null} - The coordinate or null if index is invalid\n     */\n  getVertex(index) {\n    if (index < 0 || index >= this.coordinates.length) {\n      return null;\n    }\n        \n    return this.coordinates[index];\n  }\n    \n  /**\n     * Toggle the closed state of the line\n     * @returns {boolean} - The new closed state\n     */\n  toggleClosed() {\n    this.closed = !this.closed;\n    this._updateProperties();\n        \n    this.emit('closed-changed', { \n      feature: this, \n      closed: this.closed, \n    });\n        \n    return this.closed;\n  }\n    \n  /**\n     * Set the closed state of the line\n     * @param {boolean} closed - Whether the line should be closed\n     */\n  setClosed(closed) {\n    if (this.closed !== closed) {\n      this.closed = closed;\n      this._updateProperties();\n            \n      this.emit('closed-changed', { \n        feature: this, \n        closed: this.closed, \n      });\n    }\n  }\n    \n  /**\n     * Check if the line is closed\n     * @returns {boolean} - True if the line is closed\n     */\n  isClosed() {\n    return this.closed;\n  }\n    \n  /**\n     * Get the feature's bounds\n     * @returns {Object} - The bounds object with northEast and southWest coordinates\n     */\n  getBounds() {\n    if (this.coordinates.length === 0) {\n      return null;\n    }\n        \n    let north = -90;\n    let south = 90;\n    let east = -180;\n    let west = 180;\n        \n    for (const coord of this.coordinates) {\n      north = Math.max(north, coord.lat);\n      south = Math.min(south, coord.lat);\n      east = Math.max(east, coord.lng);\n      west = Math.min(west, coord.lng);\n    }\n        \n    return {\n      north,\n      south,\n      east,\n      west,\n      northEast: new Coordinate(north, east),\n      southWest: new Coordinate(south, west),\n    };\n  }\n    \n  /**\n     * Get the feature's center coordinate\n     * @returns {Coordinate} - The center coordinate\n     */\n  getCenter() {\n    if (this.coordinates.length === 0) {\n      return null;\n    } else if (this.coordinates.length === 1) {\n      return this.coordinates[0];\n    }\n        \n    // Use the GeometryEngine to calculate the center\n    return GeometryEngine.calculatePathCenter(this.coordinates);\n  }\n    \n  /**\n     * Get the elevation range of the feature\n     * @returns {Object} - Object with min, max, and range elevations\n     */\n  getElevationRange() {\n    if (this.coordinates.length === 0) {\n      return { min: 0, max: 0, range: 0 };\n    }\n        \n    const elevations = this.coordinates\n      .map(coord => coord.elevation)\n      .filter(elev => elev !== null && elev !== undefined);\n        \n    if (elevations.length === 0) {\n      return { min: 0, max: 0, range: 0 };\n    }\n        \n    const min = Math.min(...elevations);\n    const max = Math.max(...elevations);\n        \n    return {\n      min,\n      max,\n      range: max - min,\n    };\n  }\n    \n  /**\n     * Check if the feature contains a coordinate\n     * @param {Coordinate} coordinate - The coordinate to check\n     * @param {Object} [options] - Tolerance and other options\n     * @param {number} [options.tolerance=0] - Distance tolerance in meters\n     * @param {boolean} [options.includeElevation=false] - Whether to consider elevation\n     * @returns {boolean} - True if the feature contains the coordinate\n     */\n  contains(coordinate, options = {}) {\n    if (this.coordinates.length < 2) {\n      return false;\n    }\n        \n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    const tolerance = options.tolerance || 0;\n        \n    // Check if the coordinate is on the line within tolerance\n    const nearest = this.nearest(coordinate);\n        \n    return nearest.distance <= tolerance;\n  }\n    \n  /**\n     * Find the nearest point on the feature to a given coordinate\n     * @param {Coordinate} coordinate - The reference coordinate\n     * @returns {Object} - Object with the nearest point, distance, and segment index\n     */\n  nearest(coordinate) {\n    if (this.coordinates.length < 2) {\n      if (this.coordinates.length === 1) {\n        const distance = GeometryEngine.calculateDistance(\n          this.coordinates[0], \n          coordinate, \n          { includeElevation: true },\n        );\n                \n        return {\n          coordinate: this.coordinates[0].clone(),\n          distance,\n          segmentIndex: 0,\n          segmentFraction: 0,\n        };\n      }\n            \n      return {\n        coordinate: null,\n        distance: Infinity,\n        segmentIndex: -1,\n        segmentFraction: 0,\n      };\n    }\n        \n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    // Use the GeometryEngine to find the nearest point on the path\n    return GeometryEngine.calculateNearestPointOnPath(this.coordinates, coordinate, { closed: this.closed });\n  }\n    \n  /**\n     * Export the feature to GeoJSON\n     * @param {Object} [options] - Export options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation\n     * @param {boolean} [options.includeProperties=true] - Whether to include properties\n     * @returns {Object} - GeoJSON representation of the feature\n     */\n  toGeoJSON(options = {}) {\n    const includeElevation = options.includeElevation !== false;\n    const includeProperties = options.includeProperties !== false;\n        \n    // Determine if this should be a LineString or a Polygon\n    const type = this.closed ? 'Polygon' : 'LineString';\n        \n    let coordinates;\n        \n    if (type === 'LineString') {\n      // LineString - array of coordinates\n      coordinates = this.coordinates.map(coord => {\n        // Use lng/lat instead of longitude/latitude as that's how they're stored in Coordinate\n        const point = [coord.lng, coord.lat];\n        if (includeElevation && coord.elevation !== null && coord.elevation !== undefined) {\n          point.push(coord.elevation);\n        }\n        return point;\n      });\n    } else {\n      // Polygon - array of linear rings (arrays of coordinates)\n      // Make a copy of coordinates that closes the ring if needed\n      const ring = [...this.coordinates];\n      if (ring.length > 0 && \n                (ring[0].lat !== ring[ring.length - 1].lat || \n                 ring[0].lng !== ring[ring.length - 1].lng)) {\n        ring.push(ring[0]);\n      }\n            \n      coordinates = [ring.map(coord => {\n        // Use lng/lat instead of longitude/latitude as that's how they're stored in Coordinate\n        const point = [coord.lng, coord.lat];\n        if (includeElevation && coord.elevation !== null && coord.elevation !== undefined) {\n          point.push(coord.elevation);\n        }\n        return point;\n      })];\n    }\n        \n    const geojson = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates,\n      },\n      id: this.id,\n    };\n        \n    // Include properties if requested\n    if (includeProperties) {\n      geojson.properties = {\n        name: this.name,\n        ...this.properties,\n      };\n    }\n        \n    return geojson;\n  }\n    \n  /**\n     * Import feature from GeoJSON\n     * @param {Object} geojson - GeoJSON object to import\n     * @param {Object} [options] - Import options\n     * @returns {boolean} - Success status\n     */\n  fromGeoJSON(geojson, _options = {}) {\n    if (!geojson || geojson.type !== 'Feature' || !geojson.geometry) {\n      return false;\n    }\n        \n    const geometryType = geojson.geometry.type;\n    let newCoordinates = [];\n    let isClosed = false;\n        \n    if (geometryType === 'LineString') {\n      if (!Array.isArray(geojson.geometry.coordinates)) {\n        return false;\n      }\n            \n      // Process LineString coordinates\n      newCoordinates = geojson.geometry.coordinates.map(coords => {\n        if (!Array.isArray(coords) || coords.length < 2) {\n          throw new Error('Invalid GeoJSON LineString coordinates');\n        }\n                \n        return new Coordinate(\n          coords[1], \n          coords[0], \n          coords.length > 2 ? coords[2] : null,\n        );\n      });\n            \n      // Check if the line is closed\n      const first = newCoordinates[0];\n      const last = newCoordinates[newCoordinates.length - 1];\n            \n      if (first && last && \n                first.lat === last.lat && \n                first.lng === last.lng) {\n        isClosed = true;\n      }\n            \n    } else if (geometryType === 'Polygon') {\n      if (!Array.isArray(geojson.geometry.coordinates) || \n                !Array.isArray(geojson.geometry.coordinates[0])) {\n        return false;\n      }\n            \n      // Process Polygon coordinates (use the exterior ring only)\n      const ring = geojson.geometry.coordinates[0];\n            \n      newCoordinates = ring.map(coords => {\n        if (!Array.isArray(coords) || coords.length < 2) {\n          throw new Error('Invalid GeoJSON Polygon coordinates');\n        }\n                \n        return new Coordinate(\n          coords[1], \n          coords[0], \n          coords.length > 2 ? coords[2] : null,\n        );\n      });\n            \n      // Polygons should be closed, but we'll check anyway\n      const first = newCoordinates[0];\n      const last = newCoordinates[newCoordinates.length - 1];\n            \n      if (first && last && \n                first.latitude === last.latitude && \n                first.longitude === last.longitude) {\n        // Remove the duplicate closing point\n        newCoordinates.pop();\n      }\n            \n      isClosed = true;\n            \n    } else {\n      return false;\n    }\n        \n    // Update the feature\n    this.coordinates = newCoordinates;\n    this.closed = isClosed;\n        \n    // Update properties\n    if (geojson.properties) {\n      if (geojson.properties.name) {\n        this.name = geojson.properties.name;\n        delete geojson.properties.name;\n      }\n            \n      this.properties = { ...geojson.properties };\n    }\n        \n    // Update ID if provided\n    if (geojson.id) {\n      this.id = geojson.id;\n    }\n        \n    this._updateProperties();\n    this.emit('geometry-changed', { feature: this, coordinates: this.coordinates });\n        \n    return true;\n  }\n    \n  /**\n     * Clone this feature\n     * @returns {LineFeature} - A new line feature instance that is a copy of this one\n     */\n  clone() {\n    const clonedCoordinates = this.coordinates.map(coord => coord.clone());\n        \n    const cloned = new LineFeature(\n      clonedCoordinates,\n      {\n        id: `clone_${this.id}`,\n        name: `${this.name} (copy)`,\n        style: { ...this.style },\n        properties: { ...this.properties },\n        metadata: { ...this.metadata },\n        visible: this.visible,\n        editable: this.editable,\n        interactive: this.interactive,\n        closed: this.closed,\n      },\n    );\n        \n    return cloned;\n  }\n    \n  /**\n     * Calculate the length of the line\n     * @param {Object} [options] - Calculation options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation\n     * @returns {number} - Length in meters\n     */\n  calculateLength(options = {}) {\n    if (this.coordinates.length < 2) {\n      return 0;\n    }\n        \n    return GeometryEngine.calculatePathLength(\n      this.coordinates, \n      { \n        includeElevation: options.includeElevation !== false,\n        closed: this.closed,\n      },\n    );\n  }\n    \n  /**\n     * Calculate the area of the closed line\n     * @param {Object} [options] - Calculation options\n     * @returns {number} - Area in square meters\n     */\n  calculateArea(options = {}) {\n    if (!this.closed || this.coordinates.length < 3) {\n      return 0;\n    }\n        \n    return GeometryEngine.calculateArea(this.coordinates, options);\n  }\n    \n  /**\n     * Create an elevation profile for the line\n     * @returns {Array<Object>} - Array of {distance, elevation} points\n     */\n  createElevationProfile() {\n    if (this.coordinates.length < 2) {\n      return [];\n    }\n        \n    return GeometryEngine.createElevationProfile(this.coordinates);\n  }\n    \n  /**\n     * Calculate the elevation gain and loss\n     * @returns {Object} - Object with gain and loss in meters\n     */\n  calculateElevationChange() {\n    if (this.coordinates.length < 2) {\n      return { gain: 0, loss: 0 };\n    }\n        \n    return {\n      gain: GeometryEngine.calculateElevationGain(this.coordinates),\n      loss: GeometryEngine.calculateElevationLoss(this.coordinates),\n    };\n  }\n    \n  /**\n     * Create offset line parallel to this line\n     * @param {number} distance - Offset distance in meters (positive = right, negative = left)\n     * @param {Object} [options] - Offset options\n     * @returns {LineFeature} - New line feature with the offset coordinates\n     */\n  createOffsetLine(distance, options = {}) {\n    if (this.coordinates.length < 2) {\n      return this.clone();\n    }\n        \n    const offsetCoords = GeometryEngine.createOffsetLine(\n      this.coordinates, \n      distance, \n      { \n        closed: this.closed,\n        ...options,\n      },\n    );\n        \n    return new LineFeature(\n      offsetCoords,\n      {\n        name: `${this.name} (offset ${distance}m)`,\n        style: { ...this.style },\n        closed: this.closed,\n      },\n    );\n  }\n    \n  /**\n     * Simplify the line by removing redundant points\n     * @param {number} tolerance - Tolerance distance in meters\n     * @returns {LineFeature} - This feature for chaining\n     */\n  simplify(tolerance) {\n    if (this.coordinates.length < 3 || tolerance <= 0) {\n      return this;\n    }\n        \n    const simplified = GeometryEngine.simplifyPath(this.coordinates, tolerance);\n    this.setCoordinates(simplified);\n        \n    return this;\n  }\n    \n  /**\n     * Create points at regular intervals along the line\n     * @param {number} interval - Distance between points in meters\n     * @param {Object} [options] - Interpolation options\n     * @returns {Array<Coordinate>} - Array of coordinates\n     */\n  createRegularPoints(interval, options = {}) {\n    if (this.coordinates.length < 2 || interval <= 0) {\n      return [];\n    }\n        \n    return GeometryEngine.createRegularPointsAlongPath(\n      this.coordinates, \n      interval, \n      { \n        closed: this.closed,\n        ...options,\n      },\n    );\n  }\n    \n  /**\n     * Get a point at a specific percentage along the line\n     * @param {number} percentage - Percentage along the line (0-100)\n     * @returns {Coordinate} - The coordinate at that percentage\n     */\n  getPointAtPercentage(percentage) {\n    if (this.coordinates.length < 2) {\n      return null;\n    }\n        \n    if (percentage < 0) percentage = 0;\n    if (percentage > 100) percentage = 100;\n        \n    const distance = (percentage / 100) * this.calculateLength();\n    return this.getPointAtDistance(distance);\n  }\n    \n  /**\n     * Get a point at a specific distance along the line\n     * @param {number} distance - Distance along the line in meters\n     * @returns {Coordinate} - The coordinate at that distance\n     */\n  getPointAtDistance(distance) {\n    if (this.coordinates.length < 2) {\n      return null;\n    }\n        \n    return GeometryEngine.getPointAtDistance(this.coordinates, distance, { closed: this.closed });\n  }\n    \n  /**\n     * Split the line at a specific vertex\n     * @param {number} index - Index of the vertex to split at\n     * @returns {Array<LineFeature>} - Array of two line features\n     */\n  splitAtVertex(index) {\n    if (index <= 0 || index >= this.coordinates.length - 1) {\n      return [this.clone()];\n    }\n        \n    const part1 = new LineFeature(\n      this.coordinates.slice(0, index + 1),\n      {\n        name: `${this.name} (part 1)`,\n        style: { ...this.style },\n        closed: false,\n      },\n    );\n        \n    const part2 = new LineFeature(\n      this.coordinates.slice(index),\n      {\n        name: `${this.name} (part 2)`,\n        style: { ...this.style },\n        closed: false,\n      },\n    );\n        \n    return [part1, part2];\n  }\n    \n  /**\n     * Reverse the order of coordinates\n     * @returns {LineFeature} - This feature for chaining\n     */\n  reverse() {\n    this.coordinates.reverse();\n    this.emit('geometry-changed', { feature: this, coordinates: this.coordinates });\n    return this;\n  }\n}","/**\n * Polygon feature class for survey areas\n * @module gnss/survey/features/PolygonFeature\n */\nimport { FeatureBase } from './FeatureBase.js';\nimport { LineFeature } from './LineFeature.js';\nimport { Coordinate } from '../core/Coordinate.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\nexport class PolygonFeature extends FeatureBase {\n  /**\n     * Initialize a polygon feature\n     * @param {Array<Coordinate>} coordinates - The polygon's exterior ring coordinates\n     * @param {Object} [options] - Configuration options\n     * @param {string} [options.id] - Unique identifier\n     * @param {string} [options.name] - Human-readable name\n     * @param {Object} [options.style] - Style properties\n     * @param {Object} [options.properties] - Custom properties\n     * @param {Object} [options.metadata] - Metadata\n     * @param {Array<Array<Coordinate>>} [options.holes=[]] - Arrays of coordinates for interior rings (holes)\n     */\n  constructor(coordinates = [], options = {}) {\n    super(options);\n        \n    this.type = 'polygon';\n        \n    // Create with internal LineFeature objects for ring management\n    this.exteriorRing = new LineFeature(coordinates, { closed: true });\n        \n    // Interior rings (holes)\n    this.interiorRings = [];\n        \n    if (options.holes && Array.isArray(options.holes)) {\n      for (const holeCoords of options.holes) {\n        this.interiorRings.push(\n          new LineFeature(holeCoords, { closed: true }),\n        );\n      }\n    }\n        \n    // Update properties with metadata about the polygon\n    this._updateProperties();\n        \n    // If no name was provided, generate a default name\n    if (!options.name) {\n      this.name = `Polygon (${this.exteriorRing.getVertexCount()} vertices)`;\n    }\n        \n    // Set up event forwarding from rings\n    this._setupEventForwarding();\n  }\n    \n  /**\n     * Set up event forwarding from the rings to this polygon\n     * @private\n     */\n  _setupEventForwarding() {\n    // Forward events from exterior ring\n    this.exteriorRing.on('geometry-changed', event => {\n      this._updateProperties();\n      this.emit('geometry-changed', { \n        feature: this, \n        ring: 'exterior',\n        ringIndex: -1,\n        ...event,\n      });\n    });\n        \n    // Set up forwarding for interior rings too\n    for (let i = 0; i < this.interiorRings.length; i++) {\n      const ring = this.interiorRings[i];\n            \n      ring.on('geometry-changed', event => {\n        this._updateProperties();\n        this.emit('geometry-changed', { \n          feature: this, \n          ring: 'interior',\n          ringIndex: i,\n          ...event,\n        });\n      });\n    }\n  }\n    \n  /**\n     * Update internal properties with metadata about the polygon\n     * @private\n     */\n  _updateProperties() {\n    // Make sure we have enough coordinates before calculating properties\n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    if (exteriorCoords.length < 3) {\n      // Set default values for incomplete polygons\n      this.properties.area = 0;\n      this.properties.perimeter = 0;\n      return;\n    }\n        \n    // Calculate area\n    this.properties.area = this.calculateArea();\n        \n    // Calculate perimeter (exterior ring length)\n    this.properties.perimeter = this.exteriorRing.calculateLength();\n        \n    // Get elevation statistics\n    const elevations = exteriorCoords\n      .map(coord => coord.elevation)\n      .filter(elev => elev !== null && elev !== undefined);\n        \n    if (elevations.length > 0) {\n      this.properties.minElevation = Math.min(...elevations);\n      this.properties.maxElevation = Math.max(...elevations);\n      this.properties.averageElevation = elevations.reduce((sum, elev) => sum + elev, 0) / elevations.length;\n    }\n        \n    // Update approximate centroid\n    try {\n      const center = this.calculateCentroid();\n      if (center) {\n        this.properties.centroid = {\n          lat: center.lat,\n          lng: center.lng,\n        };\n      }\n    } catch (error) {\n      console.warn(`Could not calculate centroid: ${error.message}`);\n    }\n  }\n    \n  /**\n     * Get the polygon's exterior ring coordinates\n     * @returns {Array<Coordinate>} - Array of coordinates\n     */\n  getCoordinates() {\n    return this.exteriorRing.getCoordinates();\n  }\n    \n  /**\n     * Set the polygon's exterior ring coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates\n     */\n  setCoordinates(coordinates) {\n    this.exteriorRing.setCoordinates(coordinates);\n    // _updateProperties is called via event forwarding\n  }\n    \n  /**\n     * Get all interior rings (holes)\n     * @returns {Array<Array<Coordinate>>} - Array of coordinate arrays\n     */\n  getHoles() {\n    return this.interiorRings.map(ring => ring.getCoordinates());\n  }\n    \n  /**\n     * Get all rings (exterior and interior)\n     * @returns {Array<Array<Coordinate>>} - Array of coordinate arrays, where first array is exterior ring\n     */\n  getRings() {\n    const rings = [this.exteriorRing.getCoordinates()];\n    return rings.concat(this.getHoles());\n  }\n    \n  /**\n     * Set all rings (exterior and interior)\n     * @param {Array<Array<Coordinate>>} rings - Array of coordinate arrays where first array is exterior ring\n     */\n  setRings(rings) {\n    if (!rings || !Array.isArray(rings) || rings.length === 0) {\n      throw new Error('Invalid rings: must provide a non-empty array of coordinate arrays');\n    }\n        \n    // Set exterior ring (first ring)\n    this.exteriorRing.setCoordinates(rings[0]);\n        \n    // Clear existing interior rings\n    this.interiorRings = [];\n        \n    // Add interior rings (if any)\n    for (let i = 1; i < rings.length; i++) {\n      this.addHole(rings[i]);\n    }\n        \n    // Update properties\n    this._updateProperties();\n  }\n    \n  /**\n     * Get a specific interior ring\n     * @param {number} index - Index of the ring\n     * @returns {Array<Coordinate>|null} - Array of coordinates or null if index is invalid\n     */\n  getHole(index) {\n    if (index < 0 || index >= this.interiorRings.length) {\n      return null;\n    }\n        \n    return this.interiorRings[index].getCoordinates();\n  }\n    \n  /**\n     * Add a new hole to the polygon\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the hole\n     * @returns {number} - Index of the new hole\n     */\n  addHole(coordinates) {\n    const hole = new LineFeature(coordinates, { closed: true });\n        \n    // Set up event forwarding\n    const holeIndex = this.interiorRings.length;\n        \n    hole.on('geometry-changed', event => {\n      this._updateProperties();\n      this.emit('geometry-changed', { \n        feature: this, \n        ring: 'interior',\n        ringIndex: holeIndex,\n        ...event,\n      });\n    });\n        \n    this.interiorRings.push(hole);\n    this._updateProperties();\n        \n    this.emit('hole-added', { \n      feature: this, \n      holeIndex, \n      coordinates: hole.getCoordinates(), \n    });\n        \n    return holeIndex;\n  }\n    \n  /**\n     * Remove a hole from the polygon\n     * @param {number} index - Index of the hole to remove\n     * @returns {boolean} - Success status\n     */\n  removeHole(index) {\n    if (index < 0 || index >= this.interiorRings.length) {\n      return false;\n    }\n        \n    const removed = this.interiorRings.splice(index, 1)[0];\n    this._updateProperties();\n        \n    this.emit('hole-removed', { \n      feature: this, \n      holeIndex: index, \n      coordinates: removed.getCoordinates(), \n    });\n        \n    return true;\n  }\n    \n  /**\n     * Update a hole's coordinates\n     * @param {number} index - Index of the hole\n     * @param {Array<Coordinate>} coordinates - New coordinates\n     * @returns {boolean} - Success status\n     */\n  updateHole(index, coordinates) {\n    if (index < 0 || index >= this.interiorRings.length) {\n      return false;\n    }\n        \n    this.interiorRings[index].setCoordinates(coordinates);\n    // _updateProperties is called via event forwarding\n        \n    return true;\n  }\n    \n  /**\n     * Get the number of holes in the polygon\n     * @returns {number} - Hole count\n     */\n  getHoleCount() {\n    return this.interiorRings.length;\n  }\n    \n  /**\n     * Add a vertex to the exterior ring\n     * @param {Coordinate} coordinate - The coordinate to add\n     * @param {number} [index] - Optional index to insert at (default: end of ring)\n     */\n  addVertex(coordinate, index = null) {\n    this.exteriorRing.addCoordinate(coordinate, index);\n    // _updateProperties is called via event forwarding\n  }\n    \n  /**\n     * Remove a vertex from the exterior ring\n     * @param {number} index - Index of the vertex to remove\n     * @returns {Coordinate|null} - The removed coordinate or null if index was invalid\n     */\n  removeVertex(index) {\n    return this.exteriorRing.removeCoordinate(index);\n    // _updateProperties is called via event forwarding\n  }\n    \n  /**\n     * Update a vertex in the exterior ring\n     * @param {number} index - Index of the vertex to update\n     * @param {Coordinate} coordinate - The new coordinate\n     * @returns {boolean} - Success status\n     */\n  updateVertex(index, coordinate) {\n    return this.exteriorRing.updateCoordinate(index, coordinate);\n    // _updateProperties is called via event forwarding\n  }\n    \n  /**\n     * Get the number of vertices in the exterior ring\n     * @returns {number} - Vertex count\n     */\n  getVertexCount() {\n    return this.exteriorRing.getVertexCount();\n  }\n    \n  /**\n     * Get a specific vertex from the exterior ring\n     * @param {number} index - Index of the vertex\n     * @returns {Coordinate|null} - The coordinate or null if index is invalid\n     */\n  getVertex(index) {\n    return this.exteriorRing.getVertex(index);\n  }\n    \n  /**\n     * Get the feature's bounds\n     * @returns {Object} - The bounds object with northEast and southWest coordinates\n     */\n  getBounds() {\n    return this.exteriorRing.getBounds();\n  }\n    \n  /**\n     * Get the feature's center coordinate\n     * @returns {Coordinate} - The center coordinate\n     */\n  getCenter() {\n    return this.calculateCentroid();\n  }\n    \n  /**\n     * Calculate the centroid of the polygon\n     * @returns {Coordinate} - The centroid coordinate\n     */\n  calculateCentroid() {\n    return GeometryEngine.calculatePolygonCentroid(\n      this.exteriorRing.getCoordinates(),\n      this.getHoles(),\n    );\n  }\n    \n  /**\n     * Get the elevation range of the feature\n     * @returns {Object} - Object with min, max, and range elevations\n     */\n  getElevationRange() {\n    // First get elevation range from exterior ring\n    const exteriorRange = this.exteriorRing.getElevationRange();\n        \n    // If there are no interior rings, just return exterior range\n    if (this.interiorRings.length === 0) {\n      return exteriorRange;\n    }\n        \n    // Otherwise, combine with interior rings\n    let min = exteriorRange.min;\n    let max = exteriorRange.max;\n        \n    for (const ring of this.interiorRings) {\n      const ringRange = ring.getElevationRange();\n            \n      if (ringRange.min < min) min = ringRange.min;\n      if (ringRange.max > max) max = ringRange.max;\n    }\n        \n    return {\n      min,\n      max,\n      range: max - min,\n    };\n  }\n    \n  /**\n     * Check if the polygon contains a coordinate\n     * @param {Coordinate} coordinate - The coordinate to check\n     * @param {Object} [options] - Tolerance and other options\n     * @returns {boolean} - True if the polygon contains the coordinate\n     */\n  contains(coordinate, _options = {}) {\n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    if (exteriorCoords.length < 3) {\n      return false;\n    }\n        \n    // First check if the point is in the exterior ring\n    const inExterior = GeometryEngine.pointInPolygon(coordinate, exteriorCoords);\n        \n    // If not in exterior, definitely not in polygon\n    if (!inExterior) {\n      return false;\n    }\n        \n    // If in exterior, check if it's in any holes\n    for (const hole of this.interiorRings) {\n      if (GeometryEngine.pointInPolygon(coordinate, hole.getCoordinates())) {\n        // If in a hole, not in the polygon\n        return false;\n      }\n    }\n        \n    // In exterior but not in any holes\n    return true;\n  }\n    \n  /**\n     * Find the nearest point on the feature to a given coordinate\n     * @param {Coordinate} coordinate - The reference coordinate\n     * @returns {Object} - Object with the nearest point and distance\n     */\n  nearest(coordinate) {\n    if (!(coordinate instanceof Coordinate)) {\n      throw new Error('Coordinate must be an instance of Coordinate class');\n    }\n        \n    // First check if the point is inside the polygon\n    if (this.contains(coordinate)) {\n      // If inside, distance is 0\n      return {\n        coordinate: coordinate.clone(),\n        distance: 0,\n        isInterior: true,\n      };\n    }\n        \n    // Otherwise, find nearest point on exterior ring\n    const exteriorNearest = this.exteriorRing.nearest(coordinate);\n        \n    // Find nearest points on all holes too\n    let minDistance = exteriorNearest.distance;\n    let nearestPoint = exteriorNearest.coordinate;\n        \n    for (const hole of this.interiorRings) {\n      const holeNearest = hole.nearest(coordinate);\n            \n      if (holeNearest.distance < minDistance) {\n        minDistance = holeNearest.distance;\n        nearestPoint = holeNearest.coordinate;\n      }\n    }\n        \n    return {\n      coordinate: nearestPoint,\n      distance: minDistance,\n      isInterior: false,\n    };\n  }\n    \n  /**\n     * Export the feature to GeoJSON\n     * @param {Object} [options] - Export options\n     * @param {boolean} [options.includeElevation=true] - Whether to include elevation\n     * @param {boolean} [options.includeProperties=true] - Whether to include properties\n     * @returns {Object} - GeoJSON representation of the feature\n     */\n  toGeoJSON(options = {}) {\n    const includeElevation = options.includeElevation !== false;\n    const includeProperties = options.includeProperties !== false;\n        \n    // Get exterior ring and ensure it's closed\n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    const exteriorRing = [...exteriorCoords];\n        \n    // Ensure exterior ring is closed as required by GeoJSON\n    if (exteriorRing.length > 0 && \n            (exteriorRing[0].lat !== exteriorRing[exteriorRing.length - 1].lat || \n             exteriorRing[0].lng !== exteriorRing[exteriorRing.length - 1].lng)) {\n      exteriorRing.push(exteriorRing[0]);\n    }\n        \n    // Convert exterior ring to GeoJSON format\n    const exteriorRingGeoJSON = exteriorRing.map(coord => {\n      // Use lng/lat instead of longitude/latitude as that's how they're stored in Coordinate\n      const point = [coord.lng, coord.lat];\n      if (includeElevation && coord.elevation !== null && coord.elevation !== undefined) {\n        point.push(coord.elevation);\n      }\n      return point;\n    });\n        \n    // Convert interior rings to GeoJSON format\n    const interiorRingsGeoJSON = this.interiorRings.map(ring => {\n      let holeCoords = ring.getCoordinates();\n            \n      // Ensure hole is closed as required by GeoJSON\n      if (holeCoords.length > 0 && \n                (holeCoords[0].lat !== holeCoords[holeCoords.length - 1].lat || \n                 holeCoords[0].lng !== holeCoords[holeCoords.length - 1].lng)) {\n        holeCoords = [...holeCoords, holeCoords[0]];\n      }\n            \n      return holeCoords.map(coord => {\n        // Use lng/lat instead of longitude/latitude as that's how they're stored in Coordinate\n        const point = [coord.lng, coord.lat];\n        if (includeElevation && coord.elevation !== null && coord.elevation !== undefined) {\n          point.push(coord.elevation);\n        }\n        return point;\n      });\n    });\n        \n    // Create the GeoJSON object\n    const geojson = {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [exteriorRingGeoJSON, ...interiorRingsGeoJSON],\n      },\n      id: this.id,\n    };\n        \n    // Include properties if requested\n    if (includeProperties) {\n      geojson.properties = {\n        name: this.name,\n        ...this.properties,\n      };\n    }\n        \n    return geojson;\n  }\n    \n  /**\n     * Import feature from GeoJSON\n     * @param {Object} geojson - GeoJSON object to import\n     * @param {Object} [options] - Import options\n     * @returns {boolean} - Success status\n     */\n  fromGeoJSON(geojson, _options = {}) {\n    if (!geojson || geojson.type !== 'Feature' || !geojson.geometry || \n            geojson.geometry.type !== 'Polygon' || !Array.isArray(geojson.geometry.coordinates)) {\n      return false;\n    }\n        \n    const rings = geojson.geometry.coordinates;\n    if (rings.length === 0 || !Array.isArray(rings[0])) {\n      return false;\n    }\n        \n    // Process exterior ring (first ring)\n    const exteriorRingCoords = rings[0].map(coords => {\n      if (!Array.isArray(coords) || coords.length < 2) {\n        throw new Error('Invalid GeoJSON Polygon coordinates');\n      }\n            \n      return new Coordinate(\n        coords[1], \n        coords[0], \n        coords.length > 2 ? coords[2] : null,\n      );\n    });\n        \n    // Ensure exterior ring is not closed for internal representation\n    // (GeoJSON has explicit closing point, but we handle closing automatically)\n    if (exteriorRingCoords.length > 0 && \n            exteriorRingCoords[0].equals(exteriorRingCoords[exteriorRingCoords.length - 1])) {\n      exteriorRingCoords.pop();\n    }\n        \n    // Set exterior ring\n    this.exteriorRing.setCoordinates(exteriorRingCoords);\n        \n    // Remove all existing holes\n    this.interiorRings = [];\n        \n    // Process interior rings (holes)\n    for (let i = 1; i < rings.length; i++) {\n      const ring = rings[i];\n            \n      const holeCoords = ring.map(coords => {\n        if (!Array.isArray(coords) || coords.length < 2) {\n          throw new Error('Invalid GeoJSON Polygon hole coordinates');\n        }\n                \n        return new Coordinate(\n          coords[1], \n          coords[0], \n          coords.length > 2 ? coords[2] : null,\n        );\n      });\n            \n      // Ensure hole is not closed for internal representation\n      if (holeCoords.length > 0 && \n                holeCoords[0].equals(holeCoords[holeCoords.length - 1])) {\n        holeCoords.pop();\n      }\n            \n      // Add new hole\n      this.addHole(holeCoords);\n    }\n        \n    // Update properties\n    if (geojson.properties) {\n      if (geojson.properties.name) {\n        this.name = geojson.properties.name;\n        delete geojson.properties.name;\n      }\n            \n      this.properties = { ...geojson.properties };\n    }\n        \n    // Update ID if provided\n    if (geojson.id) {\n      this.id = geojson.id;\n    }\n        \n    this._updateProperties();\n    this.emit('geometry-changed', { feature: this });\n        \n    return true;\n  }\n    \n  /**\n     * Clone this feature\n     * @returns {PolygonFeature} - A new polygon feature instance that is a copy of this one\n     */\n  clone() {\n    const clonedExteriorCoords = this.exteriorRing.getCoordinates().map(coord => coord.clone());\n        \n    const clonedHoles = this.interiorRings.map(ring => \n      ring.getCoordinates().map(coord => coord.clone()),\n    );\n        \n    const cloned = new PolygonFeature(\n      clonedExteriorCoords,\n      {\n        id: `clone_${this.id}`,\n        name: `${this.name} (copy)`,\n        style: { ...this.style },\n        properties: { ...this.properties },\n        metadata: { ...this.metadata },\n        visible: this.visible,\n        editable: this.editable,\n        interactive: this.interactive,\n        holes: clonedHoles,\n      },\n    );\n        \n    return cloned;\n  }\n    \n  /**\n     * Calculate the area of the polygon\n     * @param {Object} [options] - Calculation options\n     * @param {boolean} [options.includeHoles=true] - Whether to subtract hole areas\n     * @returns {number} - Area in square meters\n     */\n  calculateArea(options = {}) {\n    const includeHoles = options.includeHoles !== false;\n        \n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    if (exteriorCoords.length < 3) {\n      return 0;\n    }\n        \n    // Calculate exterior area\n    let area = GeometryEngine.calculateArea(exteriorCoords);\n        \n    // Subtract hole areas if requested\n    if (includeHoles && this.interiorRings.length > 0) {\n      for (const hole of this.interiorRings) {\n        const holeCoords = hole.getCoordinates();\n        if (holeCoords.length < 3) continue;\n                \n        const holeArea = GeometryEngine.calculateArea(holeCoords);\n        area -= holeArea;\n      }\n    }\n        \n    return area;\n  }\n    \n  /**\n     * Calculate the perimeter of the polygon\n     * @param {Object} [options] - Calculation options\n     * @param {boolean} [options.includeHoles=true] - Whether to include hole perimeters\n     * @returns {number} - Perimeter in meters\n     */\n  calculatePerimeter(options = {}) {\n    const includeHoles = options.includeHoles !== false;\n        \n    // Calculate exterior perimeter\n    let perimeter = this.exteriorRing.calculateLength();\n        \n    // Add hole perimeters if requested\n    if (includeHoles && this.interiorRings.length > 0) {\n      for (const hole of this.interiorRings) {\n        perimeter += hole.calculateLength();\n      }\n    }\n        \n    return perimeter;\n  }\n    \n  /**\n     * Create a simplified version of the polygon\n     * @param {number} tolerance - Tolerance distance in meters\n     * @returns {PolygonFeature} - A new simplified polygon feature\n     */\n  simplify(tolerance) {\n    if (tolerance <= 0) {\n      return this.clone();\n    }\n        \n    const simplifiedExterior = GeometryEngine.simplifyPath(\n      this.exteriorRing.getCoordinates(), \n      tolerance,\n    );\n        \n    const simplifiedHoles = this.interiorRings.map(ring => \n      GeometryEngine.simplifyPath(ring.getCoordinates(), tolerance),\n    );\n        \n    return new PolygonFeature(\n      simplifiedExterior,\n      {\n        name: `${this.name} (simplified)`,\n        style: { ...this.style },\n        holes: simplifiedHoles,\n      },\n    );\n  }\n    \n  /**\n     * Create a buffered polygon around this polygon\n     * @param {number} distance - Buffer distance in meters\n     * @param {Object} [options] - Buffer options\n     * @returns {PolygonFeature} - A new polygon feature representing the buffer\n     */\n  buffer(distance, options = {}) {\n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    if (exteriorCoords.length < 3) {\n      return this.clone();\n    }\n        \n    const bufferedExterior = GeometryEngine.bufferPolygon(\n      exteriorCoords, \n      distance, \n      options,\n    );\n        \n    // Buffering with negative distance could create multiple polygons\n    // For simplicity, we just return the first one\n    return new PolygonFeature(\n      bufferedExterior,\n      {\n        name: `${this.name} (buffer ${distance}m)`,\n        style: { ...this.style },\n      },\n    );\n  }\n    \n  /**\n     * Check if the polygon is valid (no self-intersections)\n     * @returns {boolean} - True if the polygon is valid\n     */\n  isValid() {\n    const exteriorCoords = this.exteriorRing.getCoordinates();\n    if (exteriorCoords.length < 3) {\n      return false;\n    }\n        \n    // Check exterior ring for self-intersections\n    if (GeometryEngine.hasSelfIntersections(exteriorCoords)) {\n      return false;\n    }\n        \n    // Check each hole for self-intersections\n    for (const hole of this.interiorRings) {\n      const holeCoords = hole.getCoordinates();\n      if (holeCoords.length < 3) continue;\n            \n      if (GeometryEngine.hasSelfIntersections(holeCoords)) {\n        return false;\n      }\n            \n      // Check if hole is inside the exterior ring\n      const holeCenter = GeometryEngine.calculatePathCenter(holeCoords);\n      if (!GeometryEngine.pointInPolygon(holeCenter, exteriorCoords)) {\n        return false;\n      }\n            \n      // Check if hole intersects with exterior ring\n      if (GeometryEngine.doPathsIntersect(exteriorCoords, holeCoords)) {\n        return false;\n      }\n            \n      // Check if hole intersects with other holes\n      for (const otherHole of this.interiorRings) {\n        if (hole === otherHole) continue;\n                \n        const otherHoleCoords = otherHole.getCoordinates();\n        if (GeometryEngine.doPathsIntersect(holeCoords, otherHoleCoords)) {\n          return false;\n        }\n      }\n    }\n        \n    return true;\n  }\n    \n  /**\n     * Calculate the surface of the polygon considering elevation\n     * @returns {number} - Surface area in square meters\n     */\n  calculate3DSurfaceArea() {\n    // Implement using TIN (Triangulated Irregular Network)\n    // This is a simplified implementation\n    return GeometryEngine.calculate3DPolygonSurfaceArea(\n      this.exteriorRing.getCoordinates(),\n      this.getHoles(),\n    );\n  }\n    \n  /**\n     * Calculate the volume of the polygon\n     * @param {Object} [options] - Calculation options\n     * @param {number} [options.baseElevation] - Base elevation in meters\n     * @returns {number} - Volume in cubic meters\n     */\n  calculateVolume(options = {}) {\n    let baseElevation;\n        \n    if (options.baseElevation !== undefined) {\n      baseElevation = options.baseElevation;\n    } else {\n      // Use minimum elevation as base\n      const elevRange = this.getElevationRange();\n      baseElevation = elevRange.min;\n    }\n        \n    return GeometryEngine.calculatePolygonVolume(\n      this.exteriorRing.getCoordinates(),\n      this.getHoles(),\n      baseElevation,\n    );\n  }\n}","/**\n * Feature collection for managing groups of features\n * @module gnss/survey/features/FeatureCollection\n */\nimport { EventEmitter } from '../core/event-emitter.js';\nimport { FeatureBase } from './FeatureBase.js';\nimport { PointFeature } from './PointFeature.js';\nimport { LineFeature } from './LineFeature.js';\nimport { PolygonFeature } from './PolygonFeature.js';\nimport { Coordinate } from '../core/Coordinate.js';\n\n/**\n * Class for managing collections of features\n */\nexport class FeatureCollection extends EventEmitter {\n  /**\n     * Initialize a feature collection\n     * @param {Array<FeatureBase>} [features=[]] - Initial features\n     * @param {Object} [options] - Configuration options\n     * @param {string} [options.id] - Unique identifier for the collection\n     * @param {string} [options.name] - Human-readable name for the collection\n     */\n  constructor(features = [], options = {}) {\n    super();\n        \n    this.id = options.id || `collection_${Date.now()}_${Math.floor(Math.random() * 10000)}`;\n    this.name = options.name || `Collection ${this.id.substr(-4)}`;\n    this.features = new Map();\n        \n    // Add initial features\n    if (Array.isArray(features)) {\n      features.forEach(feature => this.addFeature(feature));\n    }\n  }\n    \n  /**\n     * Add a feature to the collection\n     * @param {FeatureBase} feature - The feature to add\n     * @returns {string} - The feature ID\n     */\n  addFeature(feature) {\n    if (!(feature instanceof FeatureBase)) {\n      throw new Error('Feature must be an instance of FeatureBase');\n    }\n        \n    this.features.set(feature.id, feature);\n        \n    // Listen for feature events\n    feature.on('geometry-changed', event => {\n      this.emit('feature-geometry-changed', { ...event, collection: this });\n    });\n        \n    feature.on('properties-changed', event => {\n      this.emit('feature-properties-changed', { ...event, collection: this });\n    });\n        \n    feature.on('style-changed', event => {\n      this.emit('feature-style-changed', { ...event, collection: this });\n    });\n        \n    feature.on('selected', event => {\n      this.emit('feature-selected', { ...event, collection: this });\n    });\n        \n    feature.on('deselected', event => {\n      this.emit('feature-deselected', { ...event, collection: this });\n    });\n        \n    feature.on('visibility-changed', event => {\n      this.emit('feature-visibility-changed', { ...event, collection: this });\n    });\n        \n    this.emit('feature-added', { feature, collection: this });\n        \n    return feature.id;\n  }\n    \n  /**\n     * Remove a feature from the collection\n     * @param {string|FeatureBase} featureOrId - The feature or its ID to remove\n     * @returns {boolean} - Success status\n     */\n  removeFeature(featureOrId) {\n    const featureId = featureOrId instanceof FeatureBase ? featureOrId.id : featureOrId;\n        \n    if (!this.features.has(featureId)) {\n      return false;\n    }\n        \n    const feature = this.features.get(featureId);\n    this.features.delete(featureId);\n        \n    // Remove all listeners\n    feature.removeAllListeners();\n        \n    this.emit('feature-removed', { feature, collection: this });\n        \n    return true;\n  }\n    \n  /**\n     * Get a feature by ID\n     * @param {string} id - The feature ID\n     * @returns {FeatureBase|undefined} - The feature or undefined if not found\n     */\n  getFeature(id) {\n    return this.features.get(id);\n  }\n    \n  /**\n     * Check if the collection contains a specific feature\n     * @param {string|FeatureBase} featureOrId - The feature or its ID to check\n     * @returns {boolean} - True if the feature is in the collection\n     */\n  hasFeature(featureOrId) {\n    const featureId = featureOrId instanceof FeatureBase ? featureOrId.id : featureOrId;\n    return this.features.has(featureId);\n  }\n    \n  /**\n     * Get all features in the collection\n     * @returns {Array<FeatureBase>} - Array of features\n     */\n  getAllFeatures() {\n    return Array.from(this.features.values());\n  }\n    \n  /**\n     * Get features of a specific type\n     * @param {string} type - Feature type ('point', 'line', 'polygon', etc.)\n     * @returns {Array<FeatureBase>} - Array of features of the specified type\n     */\n  getFeaturesByType(type) {\n    return this.getAllFeatures().filter(feature => feature.type === type);\n  }\n    \n  /**\n     * Get features that match a predicate function\n     * @param {Function} predicate - Function that returns true for features to include\n     * @returns {Array<FeatureBase>} - Array of matching features\n     */\n  findFeatures(predicate) {\n    return this.getAllFeatures().filter(predicate);\n  }\n    \n  /**\n     * Get the number of features in the collection\n     * @returns {number} - Feature count\n     */\n  getFeatureCount() {\n    return this.features.size;\n  }\n    \n  /**\n     * Get the count of features by type\n     * @returns {Object} - Object with type counts\n     */\n  getFeatureCountsByType() {\n    const counts = {};\n        \n    this.getAllFeatures().forEach(feature => {\n      counts[feature.type] = (counts[feature.type] || 0) + 1;\n    });\n        \n    return counts;\n  }\n    \n  /**\n     * Clear all features from the collection\n     */\n  clear() {\n    const featuresToRemove = this.getAllFeatures();\n        \n    featuresToRemove.forEach(feature => {\n      this.removeFeature(feature);\n    });\n        \n    this.emit('collection-cleared', { collection: this });\n  }\n    \n  /**\n     * Select all features in the collection\n     * @param {Object} [options] - Selection options\n     */\n  selectAll(options = {}) {\n    this.getAllFeatures().forEach(feature => {\n      if (!feature.selected) {\n        feature.select(options);\n      }\n    });\n  }\n    \n  /**\n     * Deselect all features in the collection\n     * @param {Object} [options] - Deselection options\n     */\n  deselectAll(options = {}) {\n    this.getAllFeatures().forEach(feature => {\n      if (feature.selected) {\n        feature.deselect(options);\n      }\n    });\n  }\n    \n  /**\n     * Get selected features\n     * @returns {Array<FeatureBase>} - Array of selected features\n     */\n  getSelectedFeatures() {\n    return this.getAllFeatures().filter(feature => feature.selected);\n  }\n    \n  /**\n     * Set visibility for all features\n     * @param {boolean} visible - Whether features should be visible\n     */\n  setAllVisible(visible) {\n    this.getAllFeatures().forEach(feature => {\n      if (feature.visible !== visible) {\n        if (visible) {\n          feature.show();\n        } else {\n          feature.hide();\n        }\n      }\n    });\n  }\n    \n  /**\n     * Get visible features\n     * @returns {Array<FeatureBase>} - Array of visible features\n     */\n  getVisibleFeatures() {\n    return this.getAllFeatures().filter(feature => feature.visible);\n  }\n    \n  /**\n     * Export the collection to GeoJSON\n     * @param {Object} [options] - Export options\n     * @returns {Object} - GeoJSON FeatureCollection\n     */\n  toGeoJSON(options = {}) {\n    console.log('Exporting FeatureCollection to GeoJSON, feature count:', this.features.size);\n        \n    const features = this.getAllFeatures()\n      .filter(feature => options.includeHidden || feature.visible)\n      .map(feature => {\n        console.log(`Processing feature for export: ${feature.id}, type: ${feature.type}`);\n        if (feature.type === 'line' || feature.type === 'polygon') {\n          console.log(`  Coordinates count: ${feature.getCoordinates().length}`);\n        }\n        const geojson = feature.toGeoJSON(options);\n                \n        // Validate the created GeoJSON feature\n        if (geojson.geometry) {\n          if (geojson.geometry.type === 'LineString' && Array.isArray(geojson.geometry.coordinates)) {\n            console.log(`  LineString exported with ${geojson.geometry.coordinates.length} coordinates`);\n          } else if (geojson.geometry.type === 'Polygon' && Array.isArray(geojson.geometry.coordinates) && \n                              geojson.geometry.coordinates.length > 0) {\n            console.log(`  Polygon exported with ${geojson.geometry.coordinates[0].length} coordinates in exterior ring`);\n          }\n        } else {\n          console.warn(`  Warning: No geometry in exported feature ${feature.id}`);\n        }\n                \n        return geojson;\n      });\n        \n    return {\n      type: 'FeatureCollection',\n      features,\n    };\n  }\n    \n  /**\n     * Import features from GeoJSON\n     * @param {Object} geojson - GeoJSON object\n     * @param {Object} [options] - Import options\n     * @returns {number} - Number of features imported\n     */\n  fromGeoJSON(geojson, options = {}) {\n    if (!geojson) {\n      return 0;\n    }\n        \n    let features = [];\n        \n    // Handle feature collection\n    if (geojson.type === 'FeatureCollection' && Array.isArray(geojson.features)) {\n      features = geojson.features;\n    } \n    // Handle single feature\n    else if (geojson.type === 'Feature') {\n      features = [geojson];\n    }\n        \n    // Import all valid features\n    let importCount = 0;\n        \n    for (const featureJson of features) {\n      if (!featureJson || !featureJson.geometry || !featureJson.geometry.type) {\n        continue;\n      }\n            \n      try {\n        // Create the appropriate feature type\n        let feature;\n                \n        switch (featureJson.geometry.type) {\n        case 'Point':\n          feature = new PointFeature(featureJson.geometry.coordinates, { id: featureJson.id });\n          break;\n        case 'LineString':\n          // Pass the coordinates from GeoJSON directly to LineFeature constructor \n          feature = new LineFeature(\n            featureJson.geometry.coordinates.map(coords => \n              new Coordinate(coords[1], coords[0], coords.length > 2 ? coords[2] : null),\n            ),\n            { id: featureJson.id },\n          );\n          break;\n        case 'Polygon':\n          // For polygons, use the first ring (exterior) as constructor coordinates\n          if (featureJson.geometry.coordinates && featureJson.geometry.coordinates.length > 0) {\n            const exteriorRing = featureJson.geometry.coordinates[0].map(coords =>\n              new Coordinate(coords[1], coords[0], coords.length > 2 ? coords[2] : null),\n            );\n                            \n            // Create holes array for additional rings if they exist\n            const holes = [];\n            for (let i = 1; i < featureJson.geometry.coordinates.length; i++) {\n              holes.push(\n                featureJson.geometry.coordinates[i].map(coords =>\n                  new Coordinate(coords[1], coords[0], coords.length > 2 ? coords[2] : null),\n                ),\n              );\n            }\n                            \n            feature = new PolygonFeature(exteriorRing, { \n              id: featureJson.id,\n              holes: holes,\n            });\n          } else {\n            feature = new PolygonFeature([], { id: featureJson.id });\n          }\n          break;\n        default:\n          console.warn(`Unsupported GeoJSON geometry type: ${featureJson.geometry.type}`);\n          continue;\n        }\n                \n        // Directly add the feature if we constructed it with coordinates already\n        if (featureJson.geometry.type === 'LineString' || featureJson.geometry.type === 'Polygon') {\n          // Need to handle properties\n          if (featureJson.properties) {\n            if (featureJson.properties.name) {\n              feature.name = featureJson.properties.name;\n            }\n            // Copy all properties\n            feature.properties = { ...featureJson.properties };\n          }\n                    \n          this.addFeature(feature);\n          importCount++;\n        }\n        // Let the feature handle import itself for other types\n        else if (feature.fromGeoJSON(featureJson, options)) {\n          this.addFeature(feature);\n          importCount++;\n        }\n      } catch (err) {\n        console.error('Error importing GeoJSON feature:', err);\n      }\n    }\n        \n    if (importCount > 0) {\n      this.emit('features-imported', { \n        count: importCount, \n        collection: this, \n      });\n    }\n        \n    return importCount;\n  }\n    \n  /**\n     * Get the combined bounds of all features\n     * @returns {Object|null} - Bounds object or null if collection is empty\n     */\n  getBounds() {\n    const features = this.getAllFeatures();\n        \n    if (features.length === 0) {\n      return null;\n    }\n        \n    // Start with the bounds of the first feature\n    const firstBounds = features[0].getBounds();\n    if (!firstBounds) {\n      return null;\n    }\n        \n    let north = firstBounds.north;\n    let south = firstBounds.south;\n    let east = firstBounds.east;\n    let west = firstBounds.west;\n        \n    // Expand to include all other features\n    for (let i = 1; i < features.length; i++) {\n      const bounds = features[i].getBounds();\n      if (!bounds) continue;\n            \n      if (bounds.north > north) north = bounds.north;\n      if (bounds.south < south) south = bounds.south;\n      if (bounds.east > east) east = bounds.east;\n      if (bounds.west < west) west = bounds.west;\n    }\n        \n    // Coordinate is already imported at the top of the file\n        \n    return {\n      north,\n      south,\n      east,\n      west,\n      northEast: new Coordinate(north, east),\n      southWest: new Coordinate(south, west),\n    };\n  }\n    \n  /**\n     * Apply a style to all features\n     * @param {Object} style - Style properties\n     * @param {Object} [options] - Style application options\n     */\n  applyStyleToAll(style, options = {}) {\n    this.getAllFeatures().forEach(feature => {\n      feature.setStyle(style, options);\n    });\n  }\n    \n  /**\n     * Find features at a coordinate\n     * @param {Coordinate} coordinate - The coordinate to search at\n     * @param {Object} [options] - Search options\n     * @param {number} [options.tolerance=0] - Distance tolerance in meters\n     * @returns {Array<FeatureBase>} - Features at the coordinate\n     */\n  findFeaturesAt(coordinate, options = {}) {\n    return this.getAllFeatures().filter(feature => \n      feature.visible && feature.contains(coordinate, options),\n    );\n  }\n    \n  /**\n     * Get features at a position, considering screen coordinates if needed\n     * @param {Coordinate} coordinate - The coordinate to search at\n     * @param {Object} [options] - Search options\n     * @param {number} [options.tolerance=10] - Pixel tolerance for selection\n     * @param {Array<number>} [options.screenPosition] - Screen position [x,y] if available\n     * @param {Object} [options.mapInterface] - Map interface for coordinate conversion if needed\n     * @returns {Array<FeatureBase>} - Features at the position\n     */\n  getFeaturesAtPosition(coordinate, options = {}) {\n    const tolerance = options.tolerance || 10; // Default to 10px tolerance\n    const screenPosition = options.screenPosition;\n    const mapInterface = options.mapInterface;\n        \n    // If we have screen coordinates and a map interface, use that for more precise selection\n    if (screenPosition && mapInterface) {\n      return this.getAllFeatures().filter(feature => {\n        // Skip hidden features\n        if (!feature.visible) return false;\n                \n        // For points, check distance in screen coordinates\n        if (feature.type === 'point') {\n          const featureCoord = feature.getCoordinate();\n          if (!featureCoord) return false;\n                    \n          try {\n            const featureScreenPos = mapInterface.coordinateToPixel(featureCoord);\n            if (!featureScreenPos) return false;\n                        \n            const distance = Math.sqrt(\n              Math.pow(featureScreenPos[0] - screenPosition[0], 2) +\n                            Math.pow(featureScreenPos[1] - screenPosition[1], 2),\n            );\n                        \n            return distance <= tolerance;\n          } catch (e) {\n            console.warn('Error calculating screen distance:', e);\n            return false;\n          }\n        }\n                \n        // For lines and polygons, check if coordinate is contained with tolerance\n        return feature.contains(coordinate, { tolerance });\n      });\n    }\n        \n    // Fall back to regular coordinate-based selection\n    return this.findFeaturesAt(coordinate, { tolerance });\n  }\n    \n  /**\n     * Find the nearest feature to a coordinate\n     * @param {Coordinate} coordinate - The reference coordinate\n     * @param {Object} [options] - Search options\n     * @param {number} [options.maxDistance] - Maximum distance to consider\n     * @param {string} [options.featureType] - Filter by feature type\n     * @returns {Object|null} - Object with feature and distance, or null if none found\n     */\n  findNearestFeature(coordinate, options = {}) {\n    let features = this.getAllFeatures().filter(feature => feature.visible);\n        \n    if (options.featureType) {\n      features = features.filter(feature => feature.type === options.featureType);\n    }\n        \n    if (features.length === 0) {\n      return null;\n    }\n        \n    let nearestFeature = null;\n    let minDistance = Infinity;\n        \n    features.forEach(feature => {\n      const nearest = feature.nearest(coordinate);\n            \n      if (nearest && nearest.distance < minDistance) {\n        if (!options.maxDistance || nearest.distance <= options.maxDistance) {\n          nearestFeature = feature;\n          minDistance = nearest.distance;\n        }\n      }\n    });\n        \n    if (nearestFeature) {\n      return {\n        feature: nearestFeature,\n        distance: minDistance,\n      };\n    }\n        \n    return null;\n  }\n    \n  /**\n     * Update an existing feature in the collection\n     * @param {FeatureBase} feature - The feature to update\n     * @returns {boolean} - Success status\n     */\n  updateFeature(feature) {\n    if (!(feature instanceof FeatureBase)) {\n      throw new Error('Feature must be an instance of FeatureBase');\n    }\n        \n    // Make sure the feature exists in the collection\n    if (!this.features.has(feature.id)) {\n      return false;\n    }\n        \n    // Update the feature reference\n    this.features.set(feature.id, feature);\n        \n    // Emit update event\n    this.emit('feature-updated', { feature, collection: this });\n        \n    return true;\n  }\n}","/**\n * ToolBase.js\n * Base class for all survey tools\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { EventEmitter } from '../core/event-emitter.js';\n\n/**\n * @typedef {Object} ToolBaseOptions\n * @property {Object} manager - The survey manager instance\n * @property {Object} mapInterface - The map interface instance\n */\n\n/**\n * Base class for all survey tools\n * Defines common functionality and interface requirements\n */\nexport class ToolBase extends EventEmitter {\n  /**\n   * Create a new tool instance\n   * @param {ToolBaseOptions} options - Tool configuration options\n   */\n  constructor(options = {}) {\n    super();\n    \n    if (!options.manager) {\n      throw new Error('Manager instance is required for tool initialization');\n    }\n    \n    if (!options.mapInterface) {\n      throw new Error('Map interface is required for tool initialization');\n    }\n    \n    // Store references\n    this.manager = options.manager;\n    this.mapInterface = options.mapInterface;\n    this.geometryEngine = options.geometryEngine || this.manager.geometryEngine;\n    \n    // Initialize state variables\n    this.isActive = false;\n    this.options = options;\n    this.workingData = {};\n    \n    // Setup event listeners\n    this._setupEventListeners();\n  }\n  \n  /**\n   * Set up tool-specific event listeners\n   * Override in derived classes\n   * @protected\n   */\n  _setupEventListeners() {\n    // Base implementation does nothing\n    // Override in specific tool implementations\n  }\n  \n  /**\n   * Activate the tool\n   * @param {Object} [options] - Tool-specific activation options\n   */\n  activate(options = {}) {\n    if (this.isActive) {\n      return; // Already active\n    }\n    \n    // Store activation options\n    this.activationOptions = Object.assign({}, options);\n    \n    // CRITICAL FIX: Update this.options with the new values\n    // This ensures derived tools use the updated options in their _activate method\n    this.options = Object.assign({}, this.options, options);\n    \n    console.log('ToolBase.activate: Updating options', options);\n    console.log('ToolBase.activate: Combined options are now', this.options);\n    \n    // Mark as active\n    this.isActive = true;\n    \n    // Tool-specific activation logic\n    this._activate();\n    \n    // Emit activation event\n    this.emit('activated', this.activationOptions);\n  }\n  \n  /**\n   * Tool-specific activation logic\n   * Override in derived classes\n   * @protected\n   */\n  _activate() {\n    throw new Error('_activate() must be implemented by derived classes');\n  }\n  \n  /**\n   * Deactivate the tool\n   */\n  deactivate() {\n    if (!this.isActive) {\n      return; // Already inactive\n    }\n    \n    // Mark as inactive\n    this.isActive = false;\n    \n    // Tool-specific deactivation logic\n    this._deactivate();\n    \n    // We don't completely reset working data here anymore\n    // as it can cause issues with derived classes that rely on its structure\n    // Instead, derived classes should handle clearing their state in _deactivate()\n    \n    // Emit deactivation event\n    this.emit('deactivated');\n  }\n  \n  /**\n   * Tool-specific deactivation logic\n   * Override in derived classes\n   * @protected\n   */\n  _deactivate() {\n    throw new Error('_deactivate() must be implemented by derived classes');\n  }\n  \n  /**\n   * Handle tool reset\n   * Clears current operation but keeps the tool active\n   */\n  reset() {\n    // Tool-specific reset logic\n    this._reset();\n    \n    // We don't completely reset working data here anymore\n    // as it can cause issues with derived classes that rely on its structure\n    // Instead, derived classes should handle clearing their state in _reset()\n    \n    // Emit reset event\n    this.emit('reset');\n  }\n  \n  /**\n   * Tool-specific reset logic\n   * Override in derived classes\n   * @protected\n   */\n  _reset() {\n    // Base implementation does nothing\n    // Override in specific tool implementations\n  }\n  \n  /**\n   * Update tool options\n   * @param {Object} options - The new options to apply\n   */\n  updateOptions(options = {}) {\n    this.options = Object.assign(this.options, options);\n    \n    // Tool-specific option update handling\n    this._optionsUpdated();\n    \n    // Emit options updated event\n    this.emit('optionsUpdated', this.options);\n  }\n  \n  /**\n   * Tool-specific options update handling\n   * Override in derived classes if needed\n   * @protected\n   */\n  _optionsUpdated() {\n    // Base implementation does nothing\n    // Override in specific tool implementations\n  }\n  \n  /**\n   * Clean up resources used by the tool\n   */\n  destroy() {\n    // Deactivate first if needed\n    if (this.isActive) {\n      this.deactivate();\n    }\n    \n    // Tool-specific destroy logic\n    this._destroy();\n    \n    // Remove all event listeners\n    this.removeAllListeners();\n    \n    // Clear references\n    this.manager = null;\n    this.mapInterface = null;\n    this.geometryEngine = null;\n  }\n  \n  /**\n   * Tool-specific destroy logic\n   * Override in derived classes if needed\n   * @protected\n   */\n  _destroy() {\n    // Base implementation does nothing\n    // Override in specific tool implementations\n  }\n}","/**\n * MeasurementTool.js\n * Tool for measuring distances, areas, and volumes\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { ToolBase } from './ToolBase.js';\nimport { LineFeature } from '../features/LineFeature.js';\nimport { PolygonFeature } from '../features/PolygonFeature.js';\nimport { PointFeature } from '../features/PointFeature.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\n/**\n * @typedef {Object} MeasurementToolOptions\n * @property {string} [mode='distance'] - Measurement mode (distance, area, or volume)\n * @property {string} [units='meters'] - Units for distance (meters, feet, kilometers, miles)\n * @property {string} [areaUnits='square-meters'] - Units for area (square-meters, square-feet, hectares, acres)\n * @property {string} [volumeUnits='cubic-meters'] - Units for volume (cubic-meters, cubic-feet)\n * @property {boolean} [enable3D=true] - Whether to use 3D measurements\n * @property {boolean} [continuousMeasure=false] - Whether to continuously measure while moving\n * @property {boolean} [showSegmentLengths=true] - Whether to show individual segment lengths\n * @property {boolean} [showTotalLength=true] - Whether to show accumulated total length\n * @property {Object} [lineSymbol] - Symbol for measurement lines\n * @property {Object} [pointSymbol] - Symbol for measurement points\n * @property {Object} [labelStyle] - Style for measurement labels\n */\n\n/**\n * Tool for distance, area, and volume measurements\n * Supports both 2D and 3D measurements with multiple unit options\n */\nexport class MeasurementTool extends ToolBase {\n  /**\n   * Create a new MeasurementTool instance\n   * @param {Object} options - Tool configuration options\n   */\n  constructor(options = {}) {\n    super(options);\n    \n    // Initialize tool-specific options with defaults\n    this.options = Object.assign({\n      mode: 'distance',\n      units: 'meters',\n      areaUnits: 'square-meters',\n      volumeUnits: 'cubic-meters',\n      enable3D: true,\n      continuousMeasure: false,\n      showSegmentLengths: true,\n      showTotalLength: true,\n      lineSymbol: this.manager.settings.defaultLineSymbol,\n      pointSymbol: this.manager.settings.defaultPointSymbol,\n      labelStyle: {\n        font: '12px Arial',\n        fillColor: 'black',\n        strokeColor: 'white',\n        strokeWidth: 3,\n      },\n    }, options);\n    \n    // Initialize internal state\n    this.workingData = {\n      activeMeasurement: null,\n      measurements: [],\n      points: [],\n      mousePosition: null,\n      hoverCoordinate: null,\n      measurementLabels: [],\n      segmentLabels: [],\n    };\n    \n    // Use direct imported GeometryEngine instead of relying on manager\n    // This ensures we always have the required methods available\n    this.geometryEngine = GeometryEngine;\n    \n    // Bind event handlers to maintain 'this' context\n    this._handleMapClick = this._handleMapClick.bind(this);\n    this._handleMapMouseMove = this._handleMapMouseMove.bind(this);\n    this._handleMapDoubleClick = this._handleMapDoubleClick.bind(this);\n    this._handleMapRightClick = this._handleMapRightClick.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n  \n  /**\n   * Set up tool-specific event listeners\n   * @protected\n   * @override\n   */\n  _setupEventListeners() {\n    // Implement specific event listeners if needed\n  }\n  \n  /**\n   * Tool-specific activation logic\n   * @protected\n   * @override\n   */\n  _activate() {\n    // Activate the appropriate measurement mode\n    this._activateMeasurementMode(this.options.mode);\n    \n    // Add map event listeners\n    this.mapInterface.addEventListener('click', this._handleMapClick);\n    this.mapInterface.addEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.addEventListener('dblclick', this._handleMapDoubleClick);\n    this.mapInterface.addEventListener('contextmenu', this._handleMapRightClick);\n    \n    // Add keyboard event listeners\n    document.addEventListener('keydown', this._handleKeyDown);\n    \n    // Create a new working feature based on mode\n    this._createNewMeasurement();\n  }\n  \n  /**\n   * Tool-specific deactivation logic\n   * @protected\n   * @override\n   */\n  _deactivate() {\n    // Remove map event listeners\n    this.mapInterface.removeEventListener('click', this._handleMapClick);\n    this.mapInterface.removeEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.removeEventListener('dblclick', this._handleMapDoubleClick);\n    this.mapInterface.removeEventListener('contextmenu', this._handleMapRightClick);\n    \n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this._handleKeyDown);\n    \n    // Clear any temporary features\n    this._clearTemporaryMeasurements();\n  }\n  \n  /**\n   * Tool-specific reset logic\n   * @protected\n   * @override\n   */\n  _reset() {\n    // Clear any active measurement\n    this._clearActiveMeasurement();\n    \n    // Create a new measurement\n    this._createNewMeasurement();\n  }\n  \n  /**\n   * Activate a specific measurement mode\n   * @param {string} mode - The measurement mode (distance, area, volume)\n   * @private\n   */\n  _activateMeasurementMode(mode) {\n    // Validate the mode\n    if (!['distance', 'area', 'volume'].includes(mode)) {\n      console.error(`Invalid measurement mode: ${mode}`);\n      mode = 'distance';\n    }\n    \n    // Update the current mode\n    this.options.mode = mode;\n    \n    // If already active, reset the measurement for the new mode\n    if (this.isActive) {\n      this._reset();\n    }\n    \n    // Emit mode change event\n    this.emit('mode-changed', { mode });\n  }\n  \n  /**\n   * Create a new measurement feature based on current mode\n   * @private\n   */\n  _createNewMeasurement() {\n    // Clear any existing active measurement\n    this._clearActiveMeasurement();\n    \n    // Create appropriate feature type based on mode\n    switch (this.options.mode) {\n    case 'distance':\n      this.workingData.activeMeasurement = new LineFeature([], {\n        id: `measurement-${Date.now()}`,\n        properties: {\n          type: 'measurement',\n          measurementType: 'distance',\n          temporary: true,\n        },\n        style: this.options.lineSymbol,\n      });\n      break;\n        \n    case 'area':\n    case 'volume':\n      // Create a polygon with empty rings\n      this.workingData.activeMeasurement = new PolygonFeature([[]], {\n        id: `measurement-${Date.now()}`,\n        properties: {\n          type: 'measurement',\n          measurementType: this.options.mode,\n          temporary: true,\n        },\n        style: Object.assign({}, this.manager.settings.defaultPolygonSymbol, {\n          outlineColor: this.options.lineSymbol.color,\n          outlineWidth: this.options.lineSymbol.width,\n        }),\n      });\n      break;\n    }\n    \n    // Add the feature to the manager's working features\n    this.manager.workingFeatures.addFeature(this.workingData.activeMeasurement);\n    \n    // Reset points array\n    this.workingData.points = [];\n    this.workingData.measurementLabels = [];\n    this.workingData.segmentLabels = [];\n  }\n  \n  /**\n   * Clear the active measurement\n   * @private\n   */\n  _clearActiveMeasurement() {\n    if (this.workingData.activeMeasurement) {\n      // Remove from manager's working features\n      this.manager.workingFeatures.removeFeature(this.workingData.activeMeasurement);\n      this.workingData.activeMeasurement = null;\n    }\n    \n    // Clear points and labels\n    this.workingData.points.forEach(point => {\n      this.manager.workingFeatures.removeFeature(point);\n    });\n    \n    this.workingData.points = [];\n    \n    // Clear labels\n    this._clearMeasurementLabels();\n  }\n  \n  /**\n   * Clear all temporary measurements\n   * @private\n   */\n  _clearTemporaryMeasurements() {\n    // Clear active measurement\n    this._clearActiveMeasurement();\n    \n    // Clear saved measurements from working features\n    this.workingData.measurements.forEach(measurement => {\n      this.manager.workingFeatures.removeFeature(measurement);\n    });\n    \n    this.workingData.measurements = [];\n  }\n  \n  /**\n   * Clear measurement labels\n   * @private\n   */\n  _clearMeasurementLabels() {\n    // Remove labels from map\n    this.workingData.measurementLabels.forEach(label => {\n      this.mapInterface.removeLabel(label);\n    });\n    \n    this.workingData.segmentLabels.forEach(label => {\n      this.mapInterface.removeLabel(label);\n    });\n    \n    this.workingData.measurementLabels = [];\n    this.workingData.segmentLabels = [];\n  }\n  \n  /**\n   * Handle map click events\n   * @param {Object} event - The map click event\n   * @private\n   */\n  _handleMapClick(event) {\n    // Get clicked coordinate\n    const coordinate = event.coordinate;\n    \n    // Skip if no coordinate or no active measurement\n    if (!coordinate || !this.workingData.activeMeasurement) {\n      return;\n    }\n    \n    // Add point to the measurement\n    this._addPointToMeasurement(coordinate);\n    \n    // Update the measurement display\n    this._updateMeasurementDisplay();\n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - The map mousemove event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    // Store current mouse position\n    this.workingData.mousePosition = event.coordinate;\n    this.workingData.hoverCoordinate = event.coordinate;\n    \n    // Update the measurement preview if we have at least one point\n    if (this.workingData.activeMeasurement && this.workingData.points.length > 0) {\n      this._updateMeasurementPreview();\n    }\n    \n    // Handle continuous measurement mode\n    if (this.options.continuousMeasure && \n        this.workingData.activeMeasurement && \n        this.workingData.points.length > 0) {\n      // Only add points that are a certain distance apart\n      const lastPoint = this.workingData.points[this.workingData.points.length - 1];\n      const lastCoord = lastPoint.getCoordinate();\n      const distance = this.geometryEngine.calculateDistance(lastCoord, event.coordinate, \n        { includeElevation: this.options.enable3D },\n      );\n      \n      // Add point if it's more than 5 meters away from the last point\n      if (distance > 5) {\n        this._addPointToMeasurement(event.coordinate);\n        this._updateMeasurementDisplay();\n      }\n    }\n  }\n  \n  /**\n   * Handle map double click events\n   * @param {Object} event - The map double click event\n   * @private\n   */\n  _handleMapDoubleClick(event) {\n    // Prevent default browser behavior\n    if (event.originalEvent) {\n      event.originalEvent.preventDefault();\n    }\n    \n    // Complete the current measurement\n    this._completeMeasurement();\n  }\n  \n  /**\n   * Handle map right click events\n   * @param {Object} event - The map right click event\n   * @private\n   */\n  _handleMapRightClick(event) {\n    // Prevent default context menu\n    if (event.originalEvent) {\n      event.originalEvent.preventDefault();\n    }\n    \n    // If we have points, complete the measurement\n    if (this.workingData.points.length > 0) {\n      this._completeMeasurement();\n    } else {\n      // Otherwise, cancel the measurement\n      this._reset();\n    }\n  }\n  \n  /**\n   * Handle keyboard events\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  _handleKeyDown(event) {\n    // Handle Escape key\n    if (event.key === 'Escape') {\n      if (this.workingData.points.length > 0) {\n        // Remove the last point\n        this._removeLastPoint();\n      } else {\n        // No points, reset the measurement\n        this._reset();\n      }\n    }\n    \n    // Handle Enter key\n    if (event.key === 'Enter') {\n      // Complete the measurement\n      this._completeMeasurement();\n    }\n  }\n  \n  /**\n   * Add a point to the current measurement\n   * @param {Object} coordinate - The coordinate to add\n   * @private\n   */\n  _addPointToMeasurement(coordinate) {\n    // Create a point feature for the vertex\n    const pointFeature = new PointFeature(coordinate, {\n      id: `measurement-point-${Date.now()}-${this.workingData.points.length}`,\n      properties: {\n        type: 'measurement-point',\n        measurementId: this.workingData.activeMeasurement.id,\n        index: this.workingData.points.length,\n        temporary: true,\n      },\n      style: this.options.pointSymbol,\n    });\n    \n    // Apply 3D elevation if enabled\n    if (this.options.enable3D) {\n      this.manager.applyElevationData(pointFeature);\n    }\n    \n    // Add to working features and points array\n    this.manager.workingFeatures.addFeature(pointFeature);\n    this.workingData.points.push(pointFeature);\n    \n    // Update the measurement feature geometry\n    this._updateMeasurementGeometry();\n  }\n  \n  /**\n   * Remove the last point from the measurement\n   * @private\n   */\n  _removeLastPoint() {\n    if (this.workingData.points.length === 0) {\n      return;\n    }\n    \n    // Remove the last point\n    const lastPoint = this.workingData.points.pop();\n    this.manager.workingFeatures.removeFeature(lastPoint);\n    \n    // Update the measurement feature geometry\n    this._updateMeasurementGeometry();\n    \n    // Update the display\n    this._updateMeasurementDisplay();\n  }\n  \n  /**\n   * Update the measurement feature geometry based on collected points\n   * @private\n   */\n  _updateMeasurementGeometry() {\n    if (!this.workingData.activeMeasurement) {\n      return;\n    }\n    \n    // Extract coordinates from point features\n    const coordinates = this.workingData.points.map(point => point.getCoordinate());\n    \n    // Update the geometry based on measurement type\n    switch (this.options.mode) {\n    case 'distance':\n      this.workingData.activeMeasurement.setCoordinates(coordinates);\n      break;\n        \n    case 'area':\n    case 'volume':\n      // For area and volume, we need a polygon\n      if (coordinates.length >= 3) {\n        // Close the polygon if needed\n        const polygonCoordinates = [...coordinates];\n          \n        // Don't explicitly close it - the polygon feature will handle this\n        this.workingData.activeMeasurement.setRings([polygonCoordinates]);\n      } else {\n        // Not enough points for a polygon yet, use empty geometry\n        this.workingData.activeMeasurement.setRings([coordinates]);\n      }\n      break;\n    }\n  }\n  \n  /**\n   * Update the measurement preview with the current mouse position\n   * @private\n   */\n  _updateMeasurementPreview() {\n    if (!this.workingData.activeMeasurement || !this.workingData.mousePosition) {\n      return;\n    }\n    \n    // Create a preview with existing points plus mouse position\n    const coordinates = this.workingData.points.map(point => point.getCoordinate());\n    const previewCoordinates = [...coordinates, this.workingData.mousePosition];\n    \n    // Update preview based on measurement type\n    switch (this.options.mode) {\n    case 'distance':\n      this.workingData.activeMeasurement.setCoordinates(previewCoordinates);\n      break;\n        \n    case 'area':\n    case 'volume':\n      if (previewCoordinates.length >= 3) {\n        this.workingData.activeMeasurement.setRings([previewCoordinates]);\n      } else {\n        this.workingData.activeMeasurement.setRings([previewCoordinates]);\n      }\n      break;\n    }\n    \n    // Update display including preview\n    this._updateMeasurementDisplay(true);\n  }\n  \n  /**\n   * Update measurement display with labels and values\n   * @param {boolean} [preview=false] - Whether this is a preview update\n   * @private\n   */\n  _updateMeasurementDisplay(preview = false) {\n    // Clear existing labels\n    this._clearMeasurementLabels();\n    \n    if (!this.workingData.activeMeasurement) {\n      return;\n    }\n    \n    // Calculate measurement values based on mode\n    let measurementValue = 0;\n    let measurementUnit = '';\n    let segmentValues = [];\n    \n    switch (this.options.mode) {\n    case 'distance':\n      // Get coordinates including potential preview point\n      const lineCoordinates = this.workingData.points.map(point => point.getCoordinate());\n      if (preview && this.workingData.mousePosition) {\n        lineCoordinates.push(this.workingData.mousePosition);\n      }\n        \n      // Calculate total distance\n      if (lineCoordinates.length >= 2) {\n        measurementValue = this._calculateDistance(lineCoordinates);\n        measurementUnit = this.options.units;\n          \n        // Calculate individual segment distances\n        if (this.options.showSegmentLengths) {\n          segmentValues = this._calculateSegmentDistances(lineCoordinates);\n        }\n      }\n      break;\n        \n    case 'area':\n      // Get coordinates including potential preview point\n      const areaCoordinates = this.workingData.points.map(point => point.getCoordinate());\n      if (preview && this.workingData.mousePosition) {\n        areaCoordinates.push(this.workingData.mousePosition);\n      }\n        \n      // Calculate area\n      if (areaCoordinates.length >= 3) {\n        measurementValue = this._calculateArea(areaCoordinates);\n        measurementUnit = this.options.areaUnits;\n          \n        // Also calculate perimeter if showing segment lengths\n        if (this.options.showSegmentLengths) {\n          // Add a copy of the first point to close the polygon\n          const perimeterCoords = [...areaCoordinates, areaCoordinates[0]];\n          segmentValues = this._calculateSegmentDistances(perimeterCoords);\n        }\n      }\n      break;\n        \n    case 'volume':\n      // Get coordinates including potential preview point\n      const volumeCoordinates = this.workingData.points.map(point => point.getCoordinate());\n      if (preview && this.workingData.mousePosition) {\n        volumeCoordinates.push(this.workingData.mousePosition);\n      }\n        \n      // Calculate volume (requires at least 3 points and 3D data)\n      if (volumeCoordinates.length >= 3 && this.options.enable3D) {\n        measurementValue = this._calculateVolume(volumeCoordinates);\n        measurementUnit = this.options.volumeUnits;\n          \n        // Also calculate perimeter if showing segment lengths\n        if (this.options.showSegmentLengths) {\n          // Add a copy of the first point to close the polygon\n          const perimeterCoords = [...volumeCoordinates, volumeCoordinates[0]];\n          segmentValues = this._calculateSegmentDistances(perimeterCoords);\n        }\n      }\n      break;\n    }\n    \n    // Create and display measurement labels\n    if (measurementValue > 0) {\n      // Format the value\n      const formattedValue = this._formatMeasurementValue(measurementValue, measurementUnit);\n      \n      // Emit measurement updated event to notify components\n      this.emit('measurement-updated', {\n        type: this.options.mode,\n        value: measurementValue,\n        unit: measurementUnit,\n        formattedValue: formattedValue,\n        segments: segmentValues.length,\n        vertices: this.workingData.points.length,\n        preview: preview,\n      });\n      \n      // Create overall measurement label\n      if (this.options.showTotalLength) {\n        const labelPosition = this._calculateLabelPosition();\n        \n        const measurementLabel = this.mapInterface.createLabel({\n          position: labelPosition,\n          text: formattedValue,\n          style: this.options.labelStyle,\n        });\n        \n        this.workingData.measurementLabels.push(measurementLabel);\n      }\n      \n      // Create segment labels if enabled\n      if (this.options.showSegmentLengths && segmentValues.length > 0) {\n        segmentValues.forEach((segment, _index) => {\n          // Skip if segment value is 0\n          if (segment.value <= 0) {\n            return;\n          }\n          \n          // Format the segment value\n          const formattedSegment = this._formatMeasurementValue(segment.value, measurementUnit);\n          \n          // Create segment label\n          const segmentLabel = this.mapInterface.createLabel({\n            position: segment.midpoint,\n            text: formattedSegment,\n            style: Object.assign({}, this.options.labelStyle, {\n              font: '10px Arial',\n            }),\n          });\n          \n          this.workingData.segmentLabels.push(segmentLabel);\n        });\n      }\n    }\n  }\n  \n  /**\n   * Calculate label position for the measurement\n   * @returns {Object} The position for the label\n   * @private\n   */\n  _calculateLabelPosition() {\n    switch (this.options.mode) {\n    case 'distance':\n      // For distance, place label near the last point\n      if (this.workingData.points.length > 0) {\n        const lastPoint = this.workingData.points[this.workingData.points.length - 1];\n        return lastPoint.getCoordinate();\n      }\n      break;\n        \n    case 'area':\n    case 'volume':\n      // For area/volume, place label at centroid\n      if (this.workingData.activeMeasurement) {\n        return this.workingData.activeMeasurement.getCentroid();\n      }\n      break;\n    }\n    \n    // Fallback to first point if available\n    if (this.workingData.points.length > 0) {\n      return this.workingData.points[0].getCoordinate();\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Complete the current measurement\n   * @private\n   */\n  _completeMeasurement() {\n    // Require at least 2 points for distance, 3 for area/volume\n    const minPoints = this.options.mode === 'distance' ? 2 : 3;\n    \n    if (!this.workingData.activeMeasurement || this.workingData.points.length < minPoints) {\n      // Not enough points, just reset\n      this._reset();\n      return;\n    }\n    \n    // Finalize the measurement\n    const finalMeasurement = this.workingData.activeMeasurement;\n    \n    // Complete the geometry (no preview point)\n    this._updateMeasurementGeometry();\n    \n    // Calculate the final measurement value\n    let measurementValue = 0;\n    let measurementUnit = '';\n    \n    switch (this.options.mode) {\n    case 'distance':\n      const coordinates = finalMeasurement.getCoordinates();\n      measurementValue = this._calculateDistance(coordinates);\n      measurementUnit = this.options.units;\n      break;\n        \n    case 'area':\n      const areaRings = finalMeasurement.getRings();\n      if (areaRings.length > 0) {\n        measurementValue = this._calculateArea(areaRings[0]);\n        measurementUnit = this.options.areaUnits;\n      }\n      break;\n        \n    case 'volume':\n      const volumeRings = finalMeasurement.getRings();\n      if (volumeRings.length > 0) {\n        measurementValue = this._calculateVolume(volumeRings[0]);\n        measurementUnit = this.options.volumeUnits;\n      }\n      break;\n    }\n    \n    // Format and store the measurement value\n    const formattedValue = this._formatMeasurementValue(measurementValue, measurementUnit);\n    \n    // Update feature properties with measurement info\n    finalMeasurement.setProperty('measurementValue', measurementValue);\n    finalMeasurement.setProperty('measurementUnit', measurementUnit);\n    finalMeasurement.setProperty('measurementFormatted', formattedValue);\n    finalMeasurement.setProperty('temporary', false);\n    \n    // Update point features to be non-temporary\n    this.workingData.points.forEach(point => {\n      point.setProperty('temporary', false);\n    });\n    \n    // Move to completed measurements collection\n    this.workingData.measurements.push(finalMeasurement);\n    \n    // Create a new measurement\n    this._createNewMeasurement();\n    \n    // Emit measurement completed event\n    this.emit('measurement-completed', {\n      feature: finalMeasurement,\n      value: measurementValue,\n      unit: measurementUnit,\n      formattedValue: formattedValue,\n      mode: this.options.mode,\n    });\n  }\n  \n  /**\n   * Calculate total distance of a line\n   * @param {Array} coordinates - Array of coordinates\n   * @returns {number} The distance in meters\n   * @private\n   */\n  _calculateDistance(coordinates) {\n    if (coordinates.length < 2) {\n      return 0;\n    }\n    \n    let totalDistance = 0;\n    \n    for (let i = 0; i < coordinates.length - 1; i++) {\n      const segmentDistance = this.geometryEngine.calculateDistance(\n        coordinates[i],\n        coordinates[i + 1],\n        { includeElevation: this.options.enable3D },\n      );\n      \n      totalDistance += segmentDistance;\n    }\n    \n    // Convert to requested units\n    return this._convertDistance(totalDistance, 'meters', this.options.units);\n  }\n  \n  /**\n   * Calculate distances for each segment\n   * @param {Array} coordinates - Array of coordinates\n   * @returns {Array} Array of segment distances with midpoints\n   * @private\n   */\n  _calculateSegmentDistances(coordinates) {\n    if (coordinates.length < 2) {\n      return [];\n    }\n    \n    const segments = [];\n    \n    for (let i = 0; i < coordinates.length - 1; i++) {\n      const start = coordinates[i];\n      const end = coordinates[i + 1];\n      \n      const segmentDistance = this.geometryEngine.calculateDistance(\n        start,\n        end,\n        { includeElevation: this.options.enable3D },\n      );\n      \n      // Calculate midpoint for label placement\n      // Create a simple midpoint calculation since GeometryEngine doesn't have interpolate\n      const midpoint = {\n        lat: (start.lat + end.lat) / 2,\n        lng: (start.lng + end.lng) / 2,\n        elevation: (start.elevation !== undefined && end.elevation !== undefined) ? \n          (start.elevation + end.elevation) / 2 : 0,\n      };\n      \n      // Convert to requested units\n      const convertedDistance = this._convertDistance(segmentDistance, 'meters', this.options.units);\n      \n      segments.push({\n        value: convertedDistance,\n        midpoint: midpoint,\n      });\n    }\n    \n    return segments;\n  }\n  \n  /**\n   * Calculate area of a polygon\n   * @param {Array} coordinates - Array of coordinates forming a polygon ring\n   * @returns {number} The area in square meters\n   * @private\n   */\n  _calculateArea(coordinates) {\n    if (coordinates.length < 3) {\n      return 0;\n    }\n    \n    // Ensure polygon is properly closed\n    const closedCoordinates = [...coordinates];\n    \n    // Simple check to see if first and last points are equal\n    const first = closedCoordinates[0];\n    const last = closedCoordinates[closedCoordinates.length - 1];\n    const areEqual = first.lat === last.lat && first.lng === last.lng;\n    \n    if (!areEqual) {\n      closedCoordinates.push(closedCoordinates[0]);\n    }\n    \n    // Calculate area using GeometryEngine static method\n    const area = this.geometryEngine.calculateArea(closedCoordinates, {\n      includeElevation: this.options.enable3D,\n    });\n    \n    // Convert to requested units\n    return this._convertArea(area, 'square-meters', this.options.areaUnits);\n  }\n  \n  /**\n   * Calculate volume enclosed by a polygon base and elevation\n   * @param {Array} coordinates - Array of coordinates forming a polygon ring\n   * @returns {number} The volume in cubic meters\n   * @private\n   */\n  _calculateVolume(coordinates) {\n    if (coordinates.length < 3 || !this.options.enable3D) {\n      return 0;\n    }\n    \n    // Ensure polygon is properly closed\n    const closedCoordinates = [...coordinates];\n    \n    // Simple check to see if first and last points are equal\n    const first = closedCoordinates[0];\n    const last = closedCoordinates[closedCoordinates.length - 1];\n    const areEqual = first.lat === last.lat && first.lng === last.lng;\n    \n    if (!areEqual) {\n      closedCoordinates.push(closedCoordinates[0]);\n    }\n    \n    // Calculate volume using GeometryEngine\n    const volume = this.geometryEngine.calculateVolume ? \n      this.geometryEngine.calculateVolume(closedCoordinates) :\n      this._calculateVolumeDirectly(closedCoordinates);\n    \n    // Convert to requested units\n    return this._convertVolume(volume, 'cubic-meters', this.options.volumeUnits);\n  }\n  \n  /**\n   * Direct implementation of volume calculation if GeometryEngine.calculateVolume is not available\n   * @param {Array} coordinates - Array of coordinates forming a polygon ring\n   * @returns {number} The volume in cubic meters\n   * @private\n   */\n  _calculateVolumeDirectly(coordinates) {\n    // Calculate the base area using the _calculateArea method\n    const baseArea = this._calculateArea(coordinates);\n    \n    // Calculate average height (elevation) of the polygon vertices\n    let totalHeight = 0;\n    let validPoints = 0;\n    \n    for (const coord of coordinates) {\n      if (coord.elevation !== undefined && coord.elevation !== null) {\n        totalHeight += coord.elevation;\n        validPoints++;\n      }\n    }\n    \n    // If we have valid elevation data, calculate the volume\n    if (validPoints > 0) {\n      const avgHeight = totalHeight / validPoints;\n      return baseArea * avgHeight;\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Convert distance between different units\n   * @param {number} distance - The distance to convert\n   * @param {string} fromUnit - The source unit\n   * @param {string} toUnit - The target unit\n   * @returns {number} The converted distance\n   * @private\n   */\n  _convertDistance(distance, fromUnit, toUnit) {\n    if (fromUnit === toUnit) {\n      return distance;\n    }\n    \n    // Convert from source unit to meters\n    let meters = distance;\n    if (fromUnit !== 'meters') {\n      switch (fromUnit) {\n      case 'feet':\n        meters = distance * 0.3048;\n        break;\n      case 'kilometers':\n        meters = distance * 1000;\n        break;\n      case 'miles':\n        meters = distance * 1609.344;\n        break;\n      }\n    }\n    \n    // Convert from meters to target unit\n    switch (toUnit) {\n    case 'meters':\n      return meters;\n    case 'feet':\n      return meters / 0.3048;\n    case 'kilometers':\n      return meters / 1000;\n    case 'miles':\n      return meters / 1609.344;\n    default:\n      return meters;\n    }\n  }\n  \n  /**\n   * Convert area between different units\n   * @param {number} area - The area to convert\n   * @param {string} fromUnit - The source unit\n   * @param {string} toUnit - The target unit\n   * @returns {number} The converted area\n   * @private\n   */\n  _convertArea(area, fromUnit, toUnit) {\n    if (fromUnit === toUnit) {\n      return area;\n    }\n    \n    // Convert from source unit to square meters\n    let squareMeters = area;\n    if (fromUnit !== 'square-meters') {\n      switch (fromUnit) {\n      case 'square-feet':\n        squareMeters = area * 0.092903;\n        break;\n      case 'hectares':\n        squareMeters = area * 10000;\n        break;\n      case 'acres':\n        squareMeters = area * 4046.856;\n        break;\n      }\n    }\n    \n    // Convert from square meters to target unit\n    switch (toUnit) {\n    case 'square-meters':\n      return squareMeters;\n    case 'square-feet':\n      return squareMeters / 0.092903;\n    case 'hectares':\n      return squareMeters / 10000;\n    case 'acres':\n      return squareMeters / 4046.856;\n    default:\n      return squareMeters;\n    }\n  }\n  \n  /**\n   * Convert volume between different units\n   * @param {number} volume - The volume to convert\n   * @param {string} fromUnit - The source unit\n   * @param {string} toUnit - The target unit\n   * @returns {number} The converted volume\n   * @private\n   */\n  _convertVolume(volume, fromUnit, toUnit) {\n    if (fromUnit === toUnit) {\n      return volume;\n    }\n    \n    // Convert from source unit to cubic meters\n    let cubicMeters = volume;\n    if (fromUnit !== 'cubic-meters') {\n      switch (fromUnit) {\n      case 'cubic-feet':\n        cubicMeters = volume * 0.0283168;\n        break;\n      }\n    }\n    \n    // Convert from cubic meters to target unit\n    switch (toUnit) {\n    case 'cubic-meters':\n      return cubicMeters;\n    case 'cubic-feet':\n      return cubicMeters / 0.0283168;\n    default:\n      return cubicMeters;\n    }\n  }\n  \n  /**\n   * Format measurement value for display\n   * @param {number} value - The measurement value\n   * @param {string} unit - The measurement unit\n   * @returns {string} Formatted measurement string\n   * @private\n   */\n  _formatMeasurementValue(value, unit) {\n    // Handle different unit display formats\n    let formattedValue;\n    let unitDisplay;\n    \n    // Format to appropriate precision based on unit\n    switch (unit) {\n    case 'meters':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'm';\n      break;\n    case 'feet':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'ft';\n      break;\n    case 'kilometers':\n      formattedValue = value.toFixed(3);\n      unitDisplay = 'km';\n      break;\n    case 'miles':\n      formattedValue = value.toFixed(3);\n      unitDisplay = 'mi';\n      break;\n    case 'square-meters':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'm²';\n      break;\n    case 'square-feet':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'ft²';\n      break;\n    case 'hectares':\n      formattedValue = value.toFixed(4);\n      unitDisplay = 'ha';\n      break;\n    case 'acres':\n      formattedValue = value.toFixed(4);\n      unitDisplay = 'ac';\n      break;\n    case 'cubic-meters':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'm³';\n      break;\n    case 'cubic-feet':\n      formattedValue = value < 10 ? value.toFixed(2) : Math.round(value).toString();\n      unitDisplay = 'ft³';\n      break;\n    default:\n      formattedValue = value.toString();\n      unitDisplay = unit;\n    }\n    \n    return `${formattedValue} ${unitDisplay}`;\n  }\n  \n  /**\n   * Set the measurement mode\n   * @param {string} mode - The measurement mode (distance, area, volume)\n   * @returns {boolean} Success of mode change\n   */\n  setMode(mode) {\n    if (!['distance', 'area', 'volume'].includes(mode)) {\n      console.error(`Invalid measurement mode: ${mode}`);\n      return false;\n    }\n    \n    // Update the mode\n    this.options.mode = mode;\n    \n    // If tool is active, reset it for the new mode\n    if (this.isActive) {\n      this._reset();\n    }\n    \n    // Emit mode change event\n    this.emit('mode-changed', { mode });\n    \n    return true;\n  }\n  \n  /**\n   * Set the measurement units\n   * @param {Object} units - The units to set\n   * @param {string} [units.distance] - Distance unit\n   * @param {string} [units.area] - Area unit\n   * @param {string} [units.volume] - Volume unit\n   * @returns {boolean} Success of units change\n   */\n  setUnits(units = {}) {\n    // Validate units\n    if (units.distance && !['meters', 'feet', 'kilometers', 'miles'].includes(units.distance)) {\n      console.error(`Invalid distance unit: ${units.distance}`);\n      return false;\n    }\n    \n    if (units.area && !['square-meters', 'square-feet', 'hectares', 'acres'].includes(units.area)) {\n      console.error(`Invalid area unit: ${units.area}`);\n      return false;\n    }\n    \n    if (units.volume && !['cubic-meters', 'cubic-feet'].includes(units.volume)) {\n      console.error(`Invalid volume unit: ${units.volume}`);\n      return false;\n    }\n    \n    // Update units\n    if (units.distance) this.options.units = units.distance;\n    if (units.area) this.options.areaUnits = units.area;\n    if (units.volume) this.options.volumeUnits = units.volume;\n    \n    // Update display if active\n    if (this.isActive && this.workingData.activeMeasurement) {\n      this._updateMeasurementDisplay();\n    }\n    \n    // Emit units changed event\n    this.emit('units-changed', {\n      distance: this.options.units,\n      area: this.options.areaUnits,\n      volume: this.options.volumeUnits,\n    });\n    \n    return true;\n  }\n  \n  /**\n   * Toggle 3D measurement mode\n   * @param {boolean} enable - Whether to enable 3D measurements\n   * @returns {boolean} New state of 3D mode\n   */\n  setEnable3D(enable) {\n    this.options.enable3D = !!enable;\n    \n    // Update display if active\n    if (this.isActive && this.workingData.activeMeasurement) {\n      this._updateMeasurementDisplay();\n    }\n    \n    // Emit 3D mode changed event\n    this.emit('enable-3d-changed', {\n      enable3D: this.options.enable3D,\n    });\n    \n    return this.options.enable3D;\n  }\n  \n  /**\n   * Complete the current measurement and return it\n   * @returns {Object} The completed measurement feature or null\n   */\n  completeMeasurement() {\n    this._completeMeasurement();\n    \n    // Return the most recently completed measurement\n    if (this.workingData.measurements.length > 0) {\n      return this.workingData.measurements[this.workingData.measurements.length - 1];\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Get all completed measurements\n   * @returns {Array} Array of completed measurement features\n   */\n  getMeasurements() {\n    return this.workingData.measurements;\n  }\n  \n  /**\n   * Clear all measurements\n   */\n  clearAllMeasurements() {\n    // Clear temporary and working measurements\n    this._clearTemporaryMeasurements();\n    \n    // Reset tool\n    this._reset();\n    \n    // Emit event\n    this.emit('measurements-cleared');\n  }\n}","/**\n * OffsetTool.js\n * Tool for creating offset points, lines and features\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { ToolBase } from './ToolBase.js';\nimport { PointFeature } from '../features/PointFeature.js';\nimport { LineFeature } from '../features/LineFeature.js';\nimport { Coordinate } from '../core/Coordinate.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\n/**\n * @typedef {Object} OffsetToolOptions\n * @property {string} [mode='point'] - Offset mode (point, line, perpendicular)\n * @property {string} [units='meters'] - Distance units (meters, feet, etc.)\n * @property {boolean} [enable3D=true] - Whether to use 3D offsets\n * @property {number} [defaultDistance=5] - Default offset distance\n * @property {number} [defaultBearing=0] - Default offset bearing (degrees)\n * @property {Object} [sourceSymbol] - Symbol for source features\n * @property {Object} [targetSymbol] - Symbol for offset features\n * @property {Object} [previewSymbol] - Symbol for preview features\n */\n\n/**\n * Tool for creating offset features\n * Supports point-based, line-based, and perpendicular offsets\n */\nexport class OffsetTool extends ToolBase {\n  /**\n   * Create a new OffsetTool instance\n   * @param {Object} options - Tool configuration options\n   */\n  constructor(options = {}) {\n    super(options);\n    \n    // Initialize tool-specific options with defaults\n    this.options = Object.assign({\n      mode: 'point',\n      units: 'meters',\n      enable3D: true,\n      defaultDistance: 5,\n      defaultBearing: 0,\n      distanceSnap: 1,\n      bearingSnap: 5,\n      sourceSymbol: {\n        type: 'circle',\n        size: 8,\n        color: '#3388FF',\n      },\n      targetSymbol: {\n        type: 'circle',\n        size: 8,\n        color: '#FF5733',\n      },\n      lineSymbol: {\n        width: 2,\n        color: '#FF5733',\n        dashArray: '5,5',\n      },\n      previewSymbol: {\n        type: 'circle',\n        size: 8,\n        color: 'rgba(255, 87, 51, 0.5)',\n        outlineWidth: 1,\n        outlineColor: '#FF5733',\n      },\n    }, options);\n    \n    // Initialize internal state\n    this.workingData = {\n      sourceFeature: null,\n      targetFeature: null,\n      previewFeature: null,\n      offsetLine: null,\n      offsetDistance: this.options.defaultDistance,\n      offsetBearing: this.options.defaultBearing,\n      mousePosition: null,\n      selectedPoint: null,\n      snapEnabled: true,\n    };\n    \n    // Bind event handlers to maintain 'this' context\n    this._handleMapClick = this._handleMapClick.bind(this);\n    this._handleMapMouseMove = this._handleMapMouseMove.bind(this);\n    this._handleMapDoubleClick = this._handleMapDoubleClick.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleFeatureSelected = this._handleFeatureSelected.bind(this);\n  }\n  \n  /**\n   * Set up tool-specific event listeners\n   * @protected\n   * @override\n   */\n  _setupEventListeners() {\n    // Listen for feature selection from the manager\n    this.manager.on('featureSelected', this._handleFeatureSelected);\n  }\n  \n  /**\n   * Tool-specific activation logic\n   * @protected\n   * @override\n   */\n  _activate() {\n    // Add map event listeners\n    this.mapInterface.addEventListener('click', this._handleMapClick);\n    this.mapInterface.addEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.addEventListener('dblclick', this._handleMapDoubleClick);\n    \n    // Add keyboard event listeners\n    document.addEventListener('keydown', this._handleKeyDown);\n    \n    // Set the initial mode\n    this._setOffsetMode(this.options.mode);\n    \n    // Initialize offset values\n    this.workingData.offsetDistance = this.options.defaultDistance;\n    this.workingData.offsetBearing = this.options.defaultBearing;\n    \n    // Emit activation event with additional info\n    this.emit('activated', {\n      mode: this.options.mode,\n      offsetDistance: this.workingData.offsetDistance,\n      offsetBearing: this.workingData.offsetBearing,\n    });\n  }\n  \n  /**\n   * Tool-specific deactivation logic\n   * @protected\n   * @override\n   */\n  _deactivate() {\n    // Remove map event listeners\n    this.mapInterface.removeEventListener('click', this._handleMapClick);\n    this.mapInterface.removeEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.removeEventListener('dblclick', this._handleMapDoubleClick);\n    \n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this._handleKeyDown);\n    \n    // Clear any preview features\n    this._clearPreviewFeatures();\n    \n    // Clear working data\n    this.workingData = {\n      sourceFeature: null,\n      targetFeature: null,\n      previewFeature: null,\n      offsetLine: null,\n      offsetDistance: this.options.defaultDistance,\n      offsetBearing: this.options.defaultBearing,\n      mousePosition: null,\n      selectedPoint: null,\n      snapEnabled: true,\n    };\n  }\n  \n  /**\n   * Tool-specific reset logic\n   * @protected\n   * @override\n   */\n  _reset() {\n    // Clear any preview features\n    this._clearPreviewFeatures();\n    \n    // Reset working data but keep offset values\n    const currentDistance = this.workingData.offsetDistance;\n    const currentBearing = this.workingData.offsetBearing;\n    const currentMode = this.options.mode;\n    \n    this.workingData = {\n      sourceFeature: null,\n      targetFeature: null,\n      previewFeature: null,\n      offsetLine: null,\n      offsetDistance: currentDistance,\n      offsetBearing: currentBearing,\n      mousePosition: null,\n      selectedPoint: null,\n      snapEnabled: true,\n    };\n    \n    // Emit reset event\n    this.emit('reset', {\n      mode: currentMode,\n      offsetDistance: currentDistance,\n      offsetBearing: currentBearing,\n    });\n  }\n  \n  /**\n   * Set the offset mode\n   * @param {string} mode - The offset mode (point, line, perpendicular)\n   * @private\n   */\n  _setOffsetMode(mode) {\n    // Validate mode\n    if (!['point', 'line', 'perpendicular'].includes(mode)) {\n      console.error(`Invalid offset mode: ${mode}`);\n      mode = 'point';\n    }\n    \n    // Update the mode\n    this.options.mode = mode;\n    \n    // Reset the tool for the new mode\n    this._reset();\n    \n    // Emit mode change event\n    this.emit('modeChanged', { mode });\n  }\n  \n  /**\n   * Clear preview features\n   * @private\n   */\n  _clearPreviewFeatures() {\n    // Remove preview features from working features\n    if (this.workingData.previewFeature) {\n      this.manager.workingFeatures.removeFeature(this.workingData.previewFeature);\n      this.workingData.previewFeature = null;\n    }\n    \n    if (this.workingData.offsetLine) {\n      this.manager.workingFeatures.removeFeature(this.workingData.offsetLine);\n      this.workingData.offsetLine = null;\n    }\n  }\n  \n  /**\n   * Handle map click events\n   * @param {Object} event - The map click event\n   * @private\n   */\n  _handleMapClick(event) {\n    // Handle click based on current mode and state\n    switch (this.options.mode) {\n    case 'point':\n      if (!this.workingData.sourceFeature) {\n        // First click: select or create source point\n        if (this.workingData.selectedPoint) {\n          // Use the selected point as source\n          this.workingData.sourceFeature = this.workingData.selectedPoint;\n          this._updatePointOffsetPreview();\n        } else {\n          // Create a new source point at click location\n          this._createSourcePoint(event.coordinate);\n        }\n      } else {\n        // Second click: create offset point\n        this._createOffsetPoint();\n      }\n      break;\n        \n    case 'line':\n    case 'perpendicular':\n      if (!this.workingData.sourceFeature) {\n        // First click: select or create source line\n        const selectedFeatures = this.manager.getSelectedFeatures();\n        const selectedLine = selectedFeatures.find(f => f.type === 'line');\n          \n        if (selectedLine) {\n          // Use the selected line as source\n          this.workingData.sourceFeature = selectedLine;\n          this._updateLineOffsetPreview();\n        } else {\n          // Start creating a new line\n          this._startCreatingSourceLine(event.coordinate);\n        }\n      } else if (this.workingData.sourceFeature && this.workingData.sourceFeature.type === 'line') {\n        if (this.workingData.sourceFeature.isTemporary) {\n          // Add point to temporary source line\n          this._addPointToSourceLine(event.coordinate);\n        } else {\n          // Create offset from existing line\n          this._createOffsetFromLine();\n        }\n      }\n      break;\n    }\n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - The map mousemove event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    // Store current mouse position\n    this.workingData.mousePosition = event.coordinate;\n    \n    // Update preview based on current mode and state\n    if (this.workingData.sourceFeature) {\n      switch (this.options.mode) {\n      case 'point':\n        this._updatePointOffsetPreview();\n        break;\n          \n      case 'line':\n      case 'perpendicular':\n        if (this.workingData.sourceFeature.isTemporary) {\n          // Update the temporary source line\n          this._updateTemporarySourceLine();\n        } else {\n          // Update the offset preview\n          this._updateLineOffsetPreview();\n        }\n        break;\n      }\n    }\n  }\n  \n  /**\n   * Handle map double click events\n   * @param {Object} event - The map double click event\n   * @private\n   */\n  _handleMapDoubleClick(event) {\n    // Prevent default browser behavior\n    if (event.originalEvent) {\n      event.originalEvent.preventDefault();\n    }\n    \n    // Complete line creation for line modes\n    if (['line', 'perpendicular'].includes(this.options.mode) && \n        this.workingData.sourceFeature && \n        this.workingData.sourceFeature.isTemporary) {\n      this._completeSourceLine();\n    }\n  }\n  \n  /**\n   * Handle keyboard events\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  _handleKeyDown(event) {\n    // Handle Escape key\n    if (event.key === 'Escape') {\n      if (['line', 'perpendicular'].includes(this.options.mode) && \n          this.workingData.sourceFeature && \n          this.workingData.sourceFeature.isTemporary) {\n        // Cancel line creation\n        this._cancelSourceLine();\n      } else {\n        // Reset the tool\n        this._reset();\n      }\n    }\n    \n    // Handle Enter key\n    if (event.key === 'Enter') {\n      if (['line', 'perpendicular'].includes(this.options.mode) && \n          this.workingData.sourceFeature && \n          this.workingData.sourceFeature.isTemporary) {\n        // Complete line creation\n        this._completeSourceLine();\n      } else if (this.workingData.sourceFeature) {\n        // Create offset\n        if (this.options.mode === 'point') {\n          this._createOffsetPoint();\n        } else {\n          this._createOffsetFromLine();\n        }\n      }\n    }\n    \n    // Handle number keys for quick distance changes\n    if (event.key >= '1' && event.key <= '9') {\n      const distance = parseInt(event.key) * (event.shiftKey ? 10 : 1);\n      this.setOffsetDistance(distance);\n    }\n    \n    // Handle arrow keys for bearing adjustments\n    if (event.key === 'ArrowLeft') {\n      this.adjustOffsetBearing(-15);\n      event.preventDefault();\n    } else if (event.key === 'ArrowRight') {\n      this.adjustOffsetBearing(15);\n      event.preventDefault();\n    } else if (event.key === 'ArrowUp') {\n      this.adjustOffsetDistance(1);\n      event.preventDefault();\n    } else if (event.key === 'ArrowDown') {\n      this.adjustOffsetDistance(-1);\n      event.preventDefault();\n    }\n  }\n  \n  /**\n   * Handle feature selection events\n   * @param {Object} feature - The selected feature\n   * @private\n   */\n  _handleFeatureSelected(feature) {\n    if (!this.isActive) {\n      return;\n    }\n    \n    // Store selected point for point mode\n    if (feature.type === 'point' && this.options.mode === 'point') {\n      this.workingData.selectedPoint = feature;\n      \n      // If no source feature yet, use this as source\n      if (!this.workingData.sourceFeature) {\n        this.workingData.sourceFeature = feature;\n        this._updatePointOffsetPreview();\n      }\n    }\n    \n    // Store selected line for line modes\n    if (feature.type === 'line' && ['line', 'perpendicular'].includes(this.options.mode)) {\n      // If no source feature yet, use this as source\n      if (!this.workingData.sourceFeature) {\n        this.workingData.sourceFeature = feature;\n        this._updateLineOffsetPreview();\n      }\n    }\n  }\n  \n  /**\n   * Create a source point at the specified coordinate\n   * @param {Object} coordinate - The coordinate for the source point\n   * @private\n   */\n  _createSourcePoint(coordinate) {\n    // Create a new point feature\n    const sourcePoint = new PointFeature(coordinate,{\n      id: `offset-source-${Date.now()}`,\n      properties: {\n        type: 'offset-source',\n        temporary: false,\n      },\n      style: this.options.sourceSymbol,\n    });\n    \n    // Apply 3D elevation if enabled\n    if (this.options.enable3D) {\n      this.manager.applyElevationData(sourcePoint);\n    }\n    \n    // Add to features collection\n    this.manager.features.addFeature(sourcePoint);\n    \n    // Set as source feature\n    this.workingData.sourceFeature = sourcePoint;\n    \n    // Create preview\n    this._updatePointOffsetPreview();\n    \n    // Emit event\n    this.emit('sourcePointCreated', sourcePoint);\n  }\n  \n  /**\n   * Update the point offset preview\n   * @private\n   */\n  _updatePointOffsetPreview() {\n    // Clear any existing preview\n    this._clearPreviewFeatures();\n    \n    if (!this.workingData.sourceFeature || this.workingData.sourceFeature.type !== 'point') {\n      return;\n    }\n    \n    // Get source point coordinate\n    const sourceCoord = this.workingData.sourceFeature.getCoordinate();\n    \n    // Calculate bearing\n    let bearing = this.workingData.offsetBearing;\n    \n    // If mouse position is available, calculate dynamic bearing\n    if (this.workingData.mousePosition) {\n      const mouseBearing = sourceCoord.bearingTo(new Coordinate(this.workingData.mousePosition));\n      \n      if (this.workingData.snapEnabled) {\n        // Snap to increments\n        bearing = Math.round(mouseBearing / this.options.bearingSnap) * this.options.bearingSnap;\n      } else {\n        bearing = mouseBearing;\n      }\n      \n      // Update stored bearing\n      this.workingData.offsetBearing = bearing;\n    }\n    \n    // Calculate offset point\n    const offsetCoord = GeometryEngine.destinationCoordinate(\n      sourceCoord,\n      this.workingData.offsetDistance,\n      bearing,\n    );\n    \n    // Create preview point\n    this.workingData.previewFeature = new PointFeature(offsetCoord,{\n      id: `offset-preview-${Date.now()}`,\n      properties: {\n        type: 'offset-preview',\n        temporary: true,\n      },\n      style: this.options.previewSymbol,\n    });\n    \n    // Create preview line\n    this.workingData.offsetLine = new LineFeature([sourceCoord, offsetCoord],{\n      id: `offset-line-${Date.now()}`,\n      properties: {\n        type: 'offset-line',\n        temporary: true,\n      },\n      style: this.options.lineSymbol,\n    });\n    \n    // Add to working features\n    this.manager.workingFeatures.addFeature(this.workingData.previewFeature);\n    this.manager.workingFeatures.addFeature(this.workingData.offsetLine);\n    \n    // Emit preview update event\n    this.emit('previewUpdated', {\n      distance: this.workingData.offsetDistance,\n      bearing: this.workingData.offsetBearing,\n      sourceCoordinate: sourceCoord,\n      targetCoordinate: offsetCoord,\n    });\n  }\n  \n  /**\n   * Create the offset point from the current preview\n   * @private\n   */\n  _createOffsetPoint() {\n    if (!this.workingData.sourceFeature || !this.workingData.previewFeature) {\n      return;\n    }\n    \n    // Get preview coordinate\n    const offsetCoord = this.workingData.previewFeature.getCoordinate();\n    \n    // Create the actual offset point\n    const offsetPoint = new PointFeature(offsetCoord, {\n      id: `offset-target-${Date.now()}`,\n      properties: {\n        type: 'offset-target',\n        offsetDistance: this.workingData.offsetDistance,\n        offsetBearing: this.workingData.offsetBearing,\n        sourceFeatureId: this.workingData.sourceFeature.id,\n        temporary: false,\n      },\n      style: this.options.targetSymbol,\n    });\n    \n    // Add to features collection\n    this.manager.features.addFeature(offsetPoint);\n    \n    // Store as target feature\n    this.workingData.targetFeature = offsetPoint;\n    \n    // Clear preview\n    this._clearPreviewFeatures();\n    \n    // Reset source feature but keep distance and bearing\n    this.workingData.sourceFeature = null;\n    \n    // Emit event\n    this.emit('offsetPointCreated', {\n      sourceFeature: this.workingData.sourceFeature,\n      targetFeature: offsetPoint,\n      distance: this.workingData.offsetDistance,\n      bearing: this.workingData.offsetBearing,\n    });\n    \n    // Reset for next operation\n    this._reset();\n  }\n  \n  /**\n   * Start creating a source line for line-based offset\n   * @param {Object} coordinate - The first coordinate of the line\n   * @private\n   */\n  _startCreatingSourceLine(coordinate) {\n    // Create a new line feature\n    const sourceLine = new LineFeature([coordinate], {\n      id: `offset-source-line-${Date.now()}`,\n      properties: {\n        type: 'offset-source',\n        temporary: true,\n      },\n      style: this.options.sourceSymbol,\n    });\n    \n    // Apply 3D elevation if enabled\n    if (this.options.enable3D) {\n      this.manager.applyElevationData(sourceLine);\n    }\n    \n    // Add to working features collection\n    this.manager.workingFeatures.addFeature(sourceLine);\n    \n    // Set as source feature\n    this.workingData.sourceFeature = sourceLine;\n    \n    // Emit event\n    this.emit('sourceLineStarted', sourceLine);\n  }\n  \n  /**\n   * Add a point to the source line being created\n   * @param {Object} coordinate - The coordinate to add\n   * @private\n   */\n  _addPointToSourceLine(coordinate) {\n    if (!this.workingData.sourceFeature || this.workingData.sourceFeature.type !== 'line') {\n      return;\n    }\n    \n    // Get existing coordinates\n    const coordinates = this.workingData.sourceFeature.getCoordinates();\n    \n    // Add the new coordinate\n    coordinates.push(coordinate);\n    \n    // Update the line\n    this.workingData.sourceFeature.setCoordinates(coordinates);\n    \n    // Apply 3D elevation if enabled\n    if (this.options.enable3D) {\n      this.manager.applyElevationData(this.workingData.sourceFeature);\n    }\n    \n    // Update preview if this is the second point (first segment)\n    if (coordinates.length === 2) {\n      this._updateLineOffsetPreview();\n    }\n    \n    // Emit event\n    this.emit('sourceLinePointAdded', {\n      line: this.workingData.sourceFeature,\n      coordinate: coordinate,\n      pointIndex: coordinates.length - 1,\n    });\n  }\n  \n  /**\n   * Update the temporary source line with mouse position\n   * @private\n   */\n  _updateTemporarySourceLine() {\n    if (!this.workingData.sourceFeature || \n        this.workingData.sourceFeature.type !== 'line' ||\n        !this.workingData.sourceFeature.isTemporary ||\n        !this.workingData.mousePosition) {\n      return;\n    }\n    \n    // Get existing coordinates\n    const coordinates = this.workingData.sourceFeature.getCoordinates();\n    \n    // Need at least one point\n    if (coordinates.length === 0) {\n      return;\n    }\n    \n    // Create preview coordinates with mouse position as last point\n    const previewCoords = [...coordinates.slice(0, -1), this.workingData.mousePosition];\n    \n    // Update the line\n    this.workingData.sourceFeature.setCoordinates(previewCoords);\n    \n    // Update offset preview if we have at least one segment\n    if (previewCoords.length >= 2) {\n      this._updateLineOffsetPreview();\n    }\n  }\n  \n  /**\n   * Complete the source line creation\n   * @private\n   */\n  _completeSourceLine() {\n    if (!this.workingData.sourceFeature || \n        this.workingData.sourceFeature.type !== 'line' ||\n        !this.workingData.sourceFeature.isTemporary) {\n      return;\n    }\n    \n    // Get coordinates\n    const coordinates = this.workingData.sourceFeature.getCoordinates();\n    \n    // Need at least two points for a valid line\n    if (coordinates.length < 2) {\n      this._cancelSourceLine();\n      return;\n    }\n    \n    // Create the final line\n    const sourceLine = new LineFeature(coordinates, {\n      id: `offset-source-line-${Date.now()}`,\n      properties: {\n        type: 'offset-source',\n        temporary: false,\n      },\n      style: this.options.sourceSymbol,\n    });\n    \n    // Apply 3D elevation if enabled\n    if (this.options.enable3D) {\n      this.manager.applyElevationData(sourceLine);\n    }\n    \n    // Add to features collection\n    this.manager.features.addFeature(sourceLine);\n    \n    // Remove temporary line\n    this.manager.workingFeatures.removeFeature(this.workingData.sourceFeature);\n    \n    // Set as source feature\n    this.workingData.sourceFeature = sourceLine;\n    \n    // Update preview\n    this._updateLineOffsetPreview();\n    \n    // Emit event\n    this.emit('sourceLineCompleted', sourceLine);\n  }\n  \n  /**\n   * Cancel source line creation\n   * @private\n   */\n  _cancelSourceLine() {\n    if (!this.workingData.sourceFeature || !this.workingData.sourceFeature.isTemporary) {\n      return;\n    }\n    \n    // Remove temporary line\n    this.manager.workingFeatures.removeFeature(this.workingData.sourceFeature);\n    \n    // Clear working data\n    this.workingData.sourceFeature = null;\n    this._clearPreviewFeatures();\n    \n    // Emit event\n    this.emit('sourceLineCancelled');\n  }\n  \n  /**\n   * Update the line offset preview\n   * @private\n   */\n  _updateLineOffsetPreview() {\n    // Clear any existing preview\n    this._clearPreviewFeatures();\n    \n    if (!this.workingData.sourceFeature || this.workingData.sourceFeature.type !== 'line') {\n      return;\n    }\n    \n    // Get source line coordinates\n    const sourceCoords = this.workingData.sourceFeature.getCoordinates();\n    \n    // Need at least two points for a valid line\n    if (sourceCoords.length < 2) {\n      return;\n    }\n    \n    let offsetCoords;\n\n    if (this.options.mode === 'line') {\n      // Parallel offset line\n      offsetCoords = this.geometryEngine.createOffsetLine(\n        sourceCoords,\n        this.workingData.offsetDistance,\n        { enable3D: this.options.enable3D },\n      );\n      \n      // Create preview line\n      this.workingData.previewFeature = new LineFeature(offsetCoords,{\n        id: `offset-preview-${Date.now()}`,\n        properties: {\n          type: 'offset-preview',\n          temporary: true,\n        },\n        style: Object.assign({}, this.options.lineSymbol, {\n          dashArray: '5,5',\n        }),\n      });\n      \n    } else if (this.options.mode === 'perpendicular') {\n      // Find closest point on line to mouse position\n      if (this.workingData.mousePosition) {\n        // Find nearest point on line to mouse position\n        const nearestInfo = this.workingData.sourceFeature.nearest(this.workingData.mousePosition);\n        \n        if (nearestInfo) {\n          // Calculate perpendicular offset\n          const perpendicular = this.geometryEngine.calculatePerpendicularOffset(\n            sourceCoords,\n            nearestInfo.pointIndex,\n            nearestInfo.segmentPosition,\n            this.workingData.offsetDistance,\n            { enable3D: this.options.enable3D },\n          );\n          \n          // Create preview point\n          this.workingData.previewFeature = new PointFeature(perpendicular.offsetPoint,{\n            id: `offset-preview-${Date.now()}`,\n            properties: {\n              type: 'offset-preview',\n              temporary: true,\n            },\n            style: this.options.previewSymbol,\n          });\n          \n          // Create preview line (perpendicular segment)\n          this.workingData.offsetLine = new LineFeature([nearestInfo.nearestPoint, perpendicular.offsetPoint], {\n            id: `offset-line-${Date.now()}`,\n            properties: {\n              type: 'offset-line',\n              temporary: true,\n            },\n            style: this.options.lineSymbol,\n          });\n          \n          // Store segment info for offset creation\n          this.workingData.perpendicularInfo = {\n            pointIndex: nearestInfo.pointIndex,\n            segmentPosition: nearestInfo.segmentPosition,\n            nearestPoint: nearestInfo.nearestPoint,\n            offsetPoint: perpendicular.offsetPoint,\n          };\n        }\n      }\n    }\n    \n    // Add to working features\n    if (this.workingData.previewFeature) {\n      this.manager.workingFeatures.addFeature(this.workingData.previewFeature);\n    }\n    \n    if (this.workingData.offsetLine) {\n      this.manager.workingFeatures.addFeature(this.workingData.offsetLine);\n    }\n    \n    // Emit preview update event\n    this.emit('previewUpdated', {\n      distance: this.workingData.offsetDistance,\n      sourceFeature: this.workingData.sourceFeature,\n      previewFeature: this.workingData.previewFeature,\n    });\n  }\n  \n  /**\n   * Create the offset feature from the current preview\n   * @private\n   */\n  _createOffsetFromLine() {\n    if (!this.workingData.sourceFeature || !this.workingData.previewFeature) {\n      return;\n    }\n    \n    let offsetFeature;\n    \n    if (this.options.mode === 'line') {\n      // Get preview coordinates\n      const offsetCoords = this.workingData.previewFeature.getCoordinates();\n      \n      // Create the actual offset line\n      offsetFeature = new LineFeature(offsetCoords, {\n        id: `offset-target-${Date.now()}`,\n        properties: {\n          type: 'offset-target',\n          offsetDistance: this.workingData.offsetDistance,\n          sourceFeatureId: this.workingData.sourceFeature.id,\n          temporary: false,\n        },\n        style: Object.assign({}, this.options.lineSymbol, {\n          dashArray: null,\n        }),\n      });\n      \n    } else if (this.options.mode === 'perpendicular') {\n      // Get preview coordinate\n      const offsetCoord = this.workingData.previewFeature.getCoordinate();\n      \n      // Create the actual offset point\n      offsetFeature = new PointFeature(offsetCoord, {\n        id: `offset-target-${Date.now()}`,\n        properties: {\n          type: 'offset-target',\n          offsetDistance: this.workingData.offsetDistance,\n          sourceFeatureId: this.workingData.sourceFeature.id,\n          pointIndex: this.workingData.perpendicularInfo.pointIndex,\n          segmentPosition: this.workingData.perpendicularInfo.segmentPosition,\n          temporary: false,\n        },\n        style: this.options.targetSymbol,\n      });\n    }\n    \n    if (offsetFeature) {\n      // Add to features collection\n      this.manager.features.addFeature(offsetFeature);\n      \n      // Store as target feature\n      this.workingData.targetFeature = offsetFeature;\n      \n      // Emit event\n      this.emit('offsetFeatureCreated', {\n        sourceFeature: this.workingData.sourceFeature,\n        targetFeature: offsetFeature,\n        distance: this.workingData.offsetDistance,\n        mode: this.options.mode,\n      });\n    }\n    \n    // Clear preview\n    this._clearPreviewFeatures();\n    \n    // Reset source feature but keep distance\n    this.workingData.sourceFeature = null;\n    \n    // Reset for next operation\n    this._reset();\n  }\n  \n  /**\n   * Set the offset distance\n   * @param {number} distance - The offset distance\n   * @returns {number} The updated distance\n   */\n  setOffsetDistance(distance) {\n    // Validate distance\n    if (isNaN(distance) || distance <= 0) {\n      console.error('Invalid offset distance. Must be a positive number.');\n      return this.workingData.offsetDistance;\n    }\n    \n    // Update distance\n    this.workingData.offsetDistance = distance;\n    \n    // Update preview if active\n    if (this.workingData.sourceFeature) {\n      if (this.options.mode === 'point') {\n        this._updatePointOffsetPreview();\n      } else {\n        this._updateLineOffsetPreview();\n      }\n    }\n    \n    // Emit event\n    this.emit('offsetDistanceChanged', {\n      distance: this.workingData.offsetDistance,\n    });\n    \n    return this.workingData.offsetDistance;\n  }\n  \n  /**\n   * Set the offset bearing (for point mode)\n   * @param {number} bearing - The offset bearing in degrees\n   * @returns {number} The updated bearing\n   */\n  setOffsetBearing(bearing) {\n    // Validate bearing\n    if (isNaN(bearing)) {\n      console.error('Invalid offset bearing. Must be a number.');\n      return this.workingData.offsetBearing;\n    }\n    \n    // Normalize bearing to 0-360 range\n    bearing = (bearing % 360 + 360) % 360;\n    \n    // Update bearing\n    this.workingData.offsetBearing = bearing;\n    \n    // Update preview if active in point mode\n    if (this.workingData.sourceFeature && this.options.mode === 'point') {\n      this._updatePointOffsetPreview();\n    }\n    \n    // Emit event\n    this.emit('offsetBearingChanged', {\n      bearing: this.workingData.offsetBearing,\n    });\n    \n    return this.workingData.offsetBearing;\n  }\n  \n  /**\n   * Adjust the offset distance by the specified amount\n   * @param {number} amount - The amount to adjust the distance by\n   * @returns {number} The updated distance\n   */\n  adjustOffsetDistance(amount) {\n    // Calculate new distance with snap\n    const newDistance = Math.max(\n      1,\n      Math.round((this.workingData.offsetDistance + amount) / this.options.distanceSnap) * this.options.distanceSnap,\n    );\n    \n    return this.setOffsetDistance(newDistance);\n  }\n  \n  /**\n   * Adjust the offset bearing by the specified amount\n   * @param {number} amount - The amount to adjust the bearing by (in degrees)\n   * @returns {number} The updated bearing\n   */\n  adjustOffsetBearing(amount) {\n    // Calculate new bearing with snap\n    const newBearing = Math.round((this.workingData.offsetBearing + amount) / this.options.bearingSnap) * this.options.bearingSnap;\n    \n    return this.setOffsetBearing(newBearing);\n  }\n  \n  /**\n   * Toggle snapping functionality\n   * @param {boolean} [enable] - Whether to enable snapping\n   * @returns {boolean} The updated snap state\n   */\n  toggleSnap(enable) {\n    if (typeof enable === 'boolean') {\n      this.workingData.snapEnabled = enable;\n    } else {\n      this.workingData.snapEnabled = !this.workingData.snapEnabled;\n    }\n    \n    // Emit event\n    this.emit('snapToggled', {\n      snapEnabled: this.workingData.snapEnabled,\n    });\n    \n    return this.workingData.snapEnabled;\n  }\n  \n  /**\n   * Set the offset mode\n   * @param {string} mode - The offset mode (point, line, perpendicular)\n   * @returns {boolean} Success of mode change\n   */\n  setMode(mode) {\n    if (!['point', 'line', 'perpendicular'].includes(mode)) {\n      console.error(`Invalid offset mode: ${mode}`);\n      return false;\n    }\n    \n    // Set the mode\n    this._setOffsetMode(mode);\n    \n    return true;\n  }\n  \n  /**\n   * Get the current offset settings\n   * @returns {Object} Current offset settings\n   */\n  getSettings() {\n    return {\n      mode: this.options.mode,\n      distance: this.workingData.offsetDistance,\n      bearing: this.workingData.offsetBearing,\n      enable3D: this.options.enable3D,\n      snapEnabled: this.workingData.snapEnabled,\n    };\n  }\n}","/**\n * DrawingTool.js\n * Tool for drawing points, lines, and polygons\n * Part of the RTK Surveyor 3D-first implementation\n * \n * Usage Notes:\n * - Points are created with a single click\n * - Lines require at least 2 vertices and can be completed by:\n *   1. Double-clicking\n *   2. Pressing Enter\n *   3. Right-clicking\n *   4. Clicking the line tool button again\n * - Polygons require at least 3 vertices and can be completed by:\n *   1. Double-clicking\n *   2. Pressing Enter\n *   3. Right-clicking\n *   4. Clicking the polygon tool button again (recommended)\n * - Press Escape to cancel drawing\n * - Press Backspace/Delete to remove the last vertex\n */\n\nimport { ToolBase } from './ToolBase.js';\nimport { PointFeature } from '../features/PointFeature.js';\nimport { LineFeature } from '../features/LineFeature.js';\nimport { PolygonFeature } from '../features/PolygonFeature.js';\nimport { Coordinate } from '../core/Coordinate.js';\n\n/**\n * @typedef {Object} DrawingToolOptions\n * @property {string} [mode='point'] - Drawing mode (point, line, polygon, freehand)\n * @property {boolean} [enable3D=true] - Whether to enable 3D drawing\n * @property {boolean} [continuousDrawing=false] - Whether to continue drawing after feature completion\n * @property {number} [freehandSamplingInterval=5] - Meters between points in freehand mode\n * @property {Object} [pointSymbol] - Symbol for points\n * @property {Object} [lineSymbol] - Symbol for lines\n * @property {Object} [polygonSymbol] - Symbol for polygons\n * @property {Object} [vertexSymbol] - Symbol for vertices\n */\n\n/**\n * Tool for drawing survey features\n * Supports point, line, polygon, and freehand drawing modes\n */\nexport class DrawingTool extends ToolBase {\n  /**\n   * Create a new DrawingTool instance\n   * @param {Object} options - Tool configuration options\n   */\n  constructor(options = {}) {\n    super(options);\n    \n    // Initialize tool-specific options with defaults\n    this.options = Object.assign({\n      mode: 'point',\n      enable3D: true,\n      continuousDrawing: false,\n      freehandSamplingInterval: 5, // meters\n      pointSymbol: Object.assign({\n        size: 32, // Larger size for better visibility\n        color: '#FF5733', // Orange color\n        outlineWidth: 2,\n        outlineColor: 'white',\n        useDualMarker: true, // Use the pin+dot style for better positioning feedback\n      }, this.manager.settings.defaultPointSymbol || {}),\n      lineSymbol: this.manager.settings.defaultLineSymbol,\n      // Enhanced lineSymbol with style for preview line\n      previewLineSymbol: {\n        color: '#3388FF', \n        width: 2,\n        opacity: 0.8,\n        dashArray: [5, 5],  // Dashed line for preview\n      },\n      polygonSymbol: this.manager.settings.defaultPolygonSymbol,\n      // Enhanced polygonSymbol with style for preview polygon\n      previewPolygonSymbol: {\n        fillColor: 'rgba(51, 136, 255, 0.1)',  // More transparent fill\n        outlineColor: '#3388FF',\n        outlineWidth: 2,\n        dashArray: [5, 5],  // Dashed outline for preview\n      },\n      vertexSymbol: {\n        type: 'circle',\n        size: 8,\n        color: '#3388FF',\n        outlineWidth: 2,\n        outlineColor: 'white',\n        // Don't use dual marker for vertices - use centered circle for precision\n        useDualMarker: false,\n      },\n      // Enhanced vertexSymbol with style for active vertices\n      activeVertexSymbol: {\n        type: 'circle',\n        size: 10,\n        color: '#3388FF',\n        outlineWidth: 2,\n        outlineColor: 'white',\n        // Don't use dual marker for vertices - use centered circle for precision\n        useDualMarker: false,\n      },\n    }, options);\n    \n    // Initialize internal state\n    this.workingData = {\n      activeFeature: null,\n      vertices: [],\n      mousePosition: null,\n      isDragging: false,\n      lastFreehandPoint: null,\n    };\n    \n    // Bind event handlers to maintain 'this' context\n    this._handleMapClick = this._handleMapClick.bind(this);\n    this._handleMapMouseMove = this._handleMapMouseMove.bind(this);\n    this._handleMapDoubleClick = this._handleMapDoubleClick.bind(this);\n    this._handleMapRightClick = this._handleMapRightClick.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleMapMouseDown = this._handleMapMouseDown.bind(this);\n    this._handleMapMouseUp = this._handleMapMouseUp.bind(this);\n  }\n  \n  /**\n   * Set up tool-specific event listeners\n   * @protected\n   * @override\n   */\n  _setupEventListeners() {\n    // Implement specific event listeners if needed\n  }\n  \n  /**\n   * Tool-specific activation logic\n   * @protected\n   * @override\n   */\n  _activate() {\n    console.log(`Activating DrawingTool in ${this.options.mode} mode, continuousDrawing=${this.options.continuousDrawing}`);\n    \n    // Ensure workingData is properly initialized\n    if (!this.workingData || typeof this.workingData !== 'object') {\n      this.workingData = {\n        activeFeature: null,\n        vertices: [],\n        mousePosition: null,\n        isDragging: false,\n        lastFreehandPoint: null,\n      };\n    }\n    \n    try {\n      // Add map event listeners\n      this.mapInterface.addEventListener('click', this._handleMapClick);\n      this.mapInterface.addEventListener('mousemove', this._handleMapMouseMove);\n      this.mapInterface.addEventListener('dblclick', this._handleMapDoubleClick);\n      this.mapInterface.addEventListener('contextmenu', this._handleMapRightClick);\n      this.mapInterface.addEventListener('mousedown', this._handleMapMouseDown);\n      this.mapInterface.addEventListener('mouseup', this._handleMapMouseUp);\n      \n      // Add keyboard event listeners\n      document.addEventListener('keydown', this._handleKeyDown);\n      \n      // Create a new drawing based on the current mode\n      this._startNewDrawing();\n\n      // Emit activation event with mode\n      this.emit('activated', {\n        mode: this.options.mode,\n        continuousDrawing: this.options.continuousDrawing,\n      });\n    } catch (error) {\n      console.error('Error activating DrawingTool:', error);\n    }\n  }\n  \n  /**\n   * Tool-specific deactivation logic\n   * @protected\n   * @override\n   */\n  _deactivate() {\n    // Remove map event listeners\n    this.mapInterface.removeEventListener('click', this._handleMapClick);\n    this.mapInterface.removeEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.removeEventListener('dblclick', this._handleMapDoubleClick);\n    this.mapInterface.removeEventListener('contextmenu', this._handleMapRightClick);\n    this.mapInterface.removeEventListener('mousedown', this._handleMapMouseDown);\n    this.mapInterface.removeEventListener('mouseup', this._handleMapMouseUp);\n    \n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this._handleKeyDown);\n    \n    // Clear any active drawing\n    this._clearActiveDrawing();\n    \n    // Reset working data but preserve structure\n    this.workingData = {\n      activeFeature: null,\n      vertices: [],\n      mousePosition: null,\n      isDragging: false,\n      lastFreehandPoint: null,\n    };\n  }\n  \n  /**\n   * Tool-specific reset logic\n   * @protected\n   * @override\n   */\n  _reset() {\n    // Ensure workingData is initialized\n    if (!this.workingData) {\n      this.workingData = {\n        activeFeature: null,\n        vertices: [],\n        mousePosition: null,\n        isDragging: false,\n        lastFreehandPoint: null,\n      };\n    } else {\n      // Finish current drawing if any and start a new one\n      if (this.workingData.activeFeature) {\n        this._completeDrawing();\n      }\n    }\n    \n    // Start a new drawing\n    this._startNewDrawing();\n  }\n  \n  /**\n   * Start a new drawing based on current mode\n   * @private\n   */\n  _startNewDrawing() {\n    // Clear any existing drawing\n    this._clearActiveDrawing();\n    \n    // Create appropriate feature based on mode\n    switch (this.options.mode) {\n    case 'point':\n      // For points, we don't create a feature until click\n      break;\n        \n    case 'line':\n      // Fix: Pass empty array directly as first parameter, not in options\n      this.workingData.activeFeature = new LineFeature([], {\n        id: `drawing-${Date.now()}`,\n        properties: {\n          type: 'drawing',\n          drawingType: 'line',\n          temporary: true,\n          isPreview: true,\n        },\n        style: this.options.previewLineSymbol || this.options.lineSymbol,\n      });\n      break;\n        \n    case 'polygon':\n      try {\n        // Create a minimal polygon with initial vertices to avoid centroid calculation error\n        // Use a tiny \"invisible\" triangle as a starter polygon that will be replaced\n        const initialCoords = [\n          new Coordinate(0, 0, 0),\n          new Coordinate(0, 0.000001, 0),\n          new Coordinate(0.000001, 0, 0),\n          new Coordinate(0, 0, 0), // Close the polygon\n        ];\n          \n        this.workingData.activeFeature = new PolygonFeature(initialCoords, {\n          id: `drawing-${Date.now()}`,\n          properties: {\n            type: 'drawing',\n            drawingType: 'polygon',\n            temporary: true,\n            isPreview: true,\n          },\n          style: this.options.previewPolygonSymbol || this.options.polygonSymbol,\n        });\n      } catch (error) {\n        console.error('Error creating polygon feature:', error);\n        // If polygon creation fails, create a line instead as fallback\n        this.workingData.activeFeature = new LineFeature([], {\n          id: `drawing-${Date.now()}`,\n          properties: {\n            type: 'drawing',\n            drawingType: 'line',\n            temporary: true,\n            isPreview: true,\n          },\n          style: this.options.previewLineSymbol || this.options.lineSymbol,\n        });\n        console.warn('Fallback to LineFeature for drawing');\n      }\n      break;\n        \n    case 'freehand':\n      // Fix: Pass empty array directly as first parameter, not in options\n      this.workingData.activeFeature = new LineFeature([], {\n        id: `drawing-${Date.now()}`,\n        properties: {\n          type: 'drawing',\n          drawingType: 'freehand',\n          temporary: true,\n          isPreview: true,\n        },\n        style: this.options.previewLineSymbol || this.options.lineSymbol,\n      });\n      break;\n    }\n    \n    // Add feature to working features if created\n    if (this.workingData.activeFeature) {\n      this.manager.workingFeatures.addFeature(this.workingData.activeFeature);\n    }\n    \n    // Reset vertices array\n    this.workingData.vertices = [];\n    this.workingData.lastFreehandPoint = null;\n  }\n  \n  /**\n   * Clear the active drawing\n   * @private\n   */\n  _clearActiveDrawing() {\n    // Ensure workingData exists and has required properties\n    if (!this.workingData) {\n      this.workingData = {\n        activeFeature: null,\n        vertices: [],\n        mousePosition: null,\n        isDragging: false,\n        lastFreehandPoint: null,\n      };\n      return;\n    }\n    \n    // Remove active feature from working features\n    if (this.workingData.activeFeature) {\n      this.manager.workingFeatures.removeFeature(this.workingData.activeFeature);\n      this.workingData.activeFeature = null;\n    }\n    \n    // Remove vertex features - with defensive check for vertices array\n    if (Array.isArray(this.workingData.vertices)) {\n      this.workingData.vertices.forEach(vertex => {\n        this.manager.workingFeatures.removeFeature(vertex);\n      });\n      \n      // Reset vertices array\n      this.workingData.vertices = [];\n    } else {\n      // Initialize vertices if it doesn't exist\n      this.workingData.vertices = [];\n    }\n  }\n  \n  /**\n   * Handle map click events\n   * @param {Object} event - The map click event\n   * @private\n   */\n  _handleMapClick(event) {\n    // Enhanced logging for debugging click issues\n    console.log('======== MAP CLICK EVENT ========');\n    console.log(`DrawingTool._handleMapClick called in ${this.options.mode} mode`);\n    console.log('Click event object:', {\n      type: event.type,\n      hasCoordinate: !!event.coordinate,\n      hasLatLng: !!event.latLng,\n      hasOriginalEvent: !!event.originalEvent,\n      hasPixel: !!event.pixel,\n      pixel: event.pixel ? `[${event.pixel[0]}, ${event.pixel[1]}]` : 'N/A',\n    });\n\n    // Skip freehand mode (handled by mousedown/mouseup)\n    if (this.options.mode === 'freehand') {\n      console.log('Skipping click in freehand mode');\n      return;\n    }\n    \n    // Extract coordinate from the event with error handling\n    let coordinate;\n    \n    // Check if there's an active snap point from the snapping manager\n    if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n      // Use the snapped coordinate instead of the raw click coordinate\n      const snap = this.manager.snappingManager.getSnapPoint();\n      coordinate = snap.coordinate;\n    } else if (event.coordinate) {\n      coordinate = event.coordinate;\n    } else if (event.originalEvent && event.latLng) {\n      // Handle Google Maps native events if adapter didn't convert properly\n      coordinate = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        elevation: 0,\n      };\n    } else {\n      console.error('❌ ERROR: Invalid click event, no coordinate found', event);\n      return;\n    }\n    \n    try {\n      // Handle based on mode\n      switch (this.options.mode) {\n      case 'point':\n        // Create a point at the clicked location\n        this._createPoint(coordinate);\n        break;\n          \n      case 'line':\n      case 'polygon':\n        // Add vertex to the feature\n        this._addVertex(coordinate);\n        break;\n      }\n      \n    } catch (error) {\n      console.error(`❌ ERROR handling map click in ${this.options.mode} mode:`, error);\n      \n      // On error, try to recover by starting a new drawing\n      // This prevents the tool from getting stuck in a broken state\n      setTimeout(() => {\n        this._startNewDrawing();\n      }, 10);\n    }\n    \n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - The map mousemove event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    try {\n      let coordinate;\n      \n      // Check if there's an active snap point from the snapping manager\n      if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n        // Use the snapped coordinate\n        const snap = this.manager.snappingManager.getSnapPoint();\n        coordinate = snap.coordinate;\n      } else if (event.coordinate instanceof Coordinate) {\n        // Direct coordinate object\n        coordinate = event.coordinate;\n        \n      } else if (event.coordinate && typeof event.coordinate.lat === 'number' && typeof event.coordinate.lng === 'number') {\n        // Coordinate-like object\n        coordinate = new Coordinate(\n          event.coordinate.lat,\n          event.coordinate.lng,\n          event.coordinate.elevation !== undefined ? event.coordinate.elevation : 0,\n        );\n        \n      } else if (event.latLng && typeof event.latLng.lat === 'function' && typeof event.latLng.lng === 'function') {\n        // Google Maps LatLng object\n        coordinate = new Coordinate(\n          event.latLng.lat(),\n          event.latLng.lng(),\n          0,\n        );\n        \n      } else {\n        // Try to extract from raw event if available\n        const mapInterface = this.mapInterface;\n        if (event.originalEvent && mapInterface && typeof mapInterface.getCoordinateFromPixel === 'function') {\n          // Try to convert from pixel coordinates if map interface supports it\n          const pixel = {\n            x: event.originalEvent.clientX,\n            y: event.originalEvent.clientY,\n          };\n          coordinate = mapInterface.getCoordinateFromPixel(pixel);\n        }\n      }\n      \n      // Validate the coordinate\n      if (!coordinate || typeof coordinate.lat !== 'number' || typeof coordinate.lng !== 'number') {\n        console.error('Could not extract valid coordinate from mouse move event');\n        return;\n      }\n      \n      // Store the validated coordinate\n      this.workingData.mousePosition = coordinate;\n      \n      // Debug logging for tracking mouse position\n      if (this.options.mode === 'line' || this.options.mode === 'polygon') {\n        console.debug(`Mouse position: ${coordinate.lat.toFixed(6)}, ${coordinate.lng.toFixed(6)}`);\n      }\n      \n      // Handle freehand drawing\n      if (this.options.mode === 'freehand' && this.workingData.isDragging) {\n        this._handleFreehandDrawing(coordinate);\n      }\n      \n      // Update preview for line/polygon\n      if ((this.options.mode === 'line' || this.options.mode === 'polygon') && \n          this.workingData.activeFeature && \n          this.workingData.vertices.length > 0) {\n        // Call the enhanced _updatePreview method\n        this._updatePreview();\n      }\n    } catch (error) {\n      console.error('Error handling mouse move event:', error);\n    }\n  }\n  \n  /**\n   * Handle map double click events\n   * @param {Object} event - The map double click event\n   * @private\n   */\n  _handleMapDoubleClick(event) {\n    // Prevent default browser behavior if possible\n    if (event.originalEvent && typeof event.originalEvent.preventDefault === 'function') {\n      event.originalEvent.preventDefault();\n    }\n    \n    console.log(`Double click detected in ${this.options.mode} mode, continuousDrawing=${this.options.continuousDrawing}`);\n    \n    // Get coordinate, preferring snapped points if available\n    let coordinate;\n    if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n      // Use the snapped coordinate for the final vertex\n      const snap = this.manager.snappingManager.getSnapPoint();\n      coordinate = snap.coordinate;\n      console.log('Using snapped coordinate for final vertex:', coordinate);\n    } else if (event.coordinate) {\n      coordinate = event.coordinate;\n    }\n    \n    // Add the final vertex at the current location before completing the drawing\n    if (coordinate && (this.options.mode === 'line' || this.options.mode === 'polygon')) {\n      console.log('Adding final vertex at double-click location');\n      this._addVertex(coordinate);\n    }\n    \n    // Complete drawing for line/polygon if we have enough vertices\n    if ((this.options.mode === 'line' && this.workingData.vertices.length >= 2) ||\n        (this.options.mode === 'polygon' && this.workingData.vertices.length >= 3)) {\n      \n      console.log(`Completing ${this.options.mode} with ${this.workingData.vertices.length} vertices`);\n      \n      // Complete the current drawing, which will respect the continuousDrawing option\n      this._completeDrawing();\n    } else {\n      console.log(`Not enough vertices to complete ${this.options.mode} drawing`);\n    }\n  }\n  \n  /**\n   * Handle map right click events\n   * @param {Object} event - The map right click event\n   * @private\n   */\n  _handleMapRightClick(event) {\n    // Prevent default context menu if possible\n    if (event.originalEvent && typeof event.originalEvent.preventDefault === 'function') {\n      event.originalEvent.preventDefault();\n    }\n    \n    console.log(`Right click detected in ${this.options.mode} mode, continuousDrawing=${this.options.continuousDrawing}`);\n    \n    // For line/polygon mode in the right conditions, complete the drawing\n    if ((this.options.mode === 'line' && this.workingData.vertices.length >= 1) ||\n        (this.options.mode === 'polygon' && this.workingData.vertices.length >= 2)) {\n      \n      // Don't add the right-click point as a vertex, just finish with existing vertices\n      console.log(`Completing ${this.options.mode} with ${this.workingData.vertices.length} vertices via right-click`);\n      \n      // We only complete if we have enough vertices\n      if ((this.options.mode === 'line' && this.workingData.vertices.length >= 2) ||\n          (this.options.mode === 'polygon' && this.workingData.vertices.length >= 3)) {\n        this._completeDrawing();\n      } else {\n        // Not enough vertices yet, just cancel\n        console.log(`Not enough vertices to complete ${this.options.mode}, canceling drawing`);\n        this._startNewDrawing();\n      }\n    } else {\n      // Otherwise cancel the drawing\n      console.log(`Canceling drawing and starting new ${this.options.mode} feature`);\n      this._startNewDrawing();\n    }\n  }\n  \n  /**\n   * Handle map mouse down events\n   * @param {Object} event - The map mousedown event\n   * @private\n   */\n  _handleMapMouseDown(event) {\n    // Start freehand drawing - check if originalEvent exists and has a button property\n    if (this.options.mode === 'freehand' && \n        event.originalEvent && \n        typeof event.originalEvent.button === 'number' && \n        event.originalEvent.button === 0) {\n      this.workingData.isDragging = true;\n      \n      // Get coordinate, preferring snapped points if available\n      let coordinate;\n      if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n        // Use the snapped coordinate for the first point\n        const snap = this.manager.snappingManager.getSnapPoint();\n        coordinate = snap.coordinate;\n        console.log('Using snapped coordinate for freehand start:', coordinate);\n      } else if (event.coordinate) {\n        coordinate = event.coordinate;\n      }\n      \n      // Add the first point if coordinate is valid\n      if (coordinate) {\n        this._addFreehandPoint(coordinate);\n      }\n    }\n  }\n  \n  /**\n   * Handle map mouse up events\n   * @param {Object} event - The map mouseup event\n   * @private\n   */\n  _handleMapMouseUp(_event) {\n    // End freehand drawing\n    if (this.options.mode === 'freehand' && this.workingData.isDragging) {\n      this.workingData.isDragging = false;\n      \n      // Complete the drawing if we have enough points\n      if (this.workingData.activeFeature) {\n        const coordinates = this.workingData.activeFeature.getCoordinates();\n        if (coordinates.length >= 2) {\n          this._completeDrawing();\n        } else {\n          // Not enough points, reset\n          this._startNewDrawing();\n        }\n      }\n    }\n  }\n  \n  /**\n   * Handle keyboard events\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  _handleKeyDown(event) {\n    // Handle Escape key\n    if (event.key === 'Escape') {\n      console.log('Escape key pressed, canceling current drawing');\n      // Cancel drawing\n      this._startNewDrawing();\n    }\n    \n    // Handle Enter key\n    if (event.key === 'Enter') {\n      console.log(`Enter key pressed in ${this.options.mode} mode, continuousDrawing=${this.options.continuousDrawing}`);\n      \n      // Add current mouse position as final vertex if available and in appropriate mode\n      if ((this.options.mode === 'line' || this.options.mode === 'polygon') && \n          this.workingData.vertices.length > 0) {\n          \n        // Get coordinate, preferring snapped points if available\n        let finalCoordinate = this.workingData.mousePosition;\n        if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n          // Use the snapped coordinate for the final vertex\n          const snap = this.manager.snappingManager.getSnapPoint();\n          finalCoordinate = snap.coordinate;\n          console.log('Using snapped coordinate for final vertex (Enter key):', finalCoordinate);\n        }\n        \n        if (finalCoordinate) {\n          console.log('Adding final vertex at current position');\n          this._addVertex(finalCoordinate);\n        }\n      }\n      \n      // Complete drawing if possible\n      if ((this.options.mode === 'line' && this.workingData.vertices.length >= 2) ||\n          (this.options.mode === 'polygon' && this.workingData.vertices.length >= 3)) {\n        console.log(`Completing ${this.options.mode} with ${this.workingData.vertices.length} vertices via Enter key`);\n        this._completeDrawing();\n      } else {\n        console.log(`Not enough vertices to complete ${this.options.mode} drawing`);\n      }\n    }\n    \n    // Handle Backspace/Delete key\n    if (event.key === 'Backspace' || event.key === 'Delete') {\n      console.log('Backspace/Delete key pressed, removing last vertex');\n      // Remove the last vertex\n      this._removeLastVertex();\n    }\n  }\n  \n  /**\n   * Create a point feature at the specified coordinate\n   * @param {Object} coordinate - The coordinate for the point\n   * @private\n   */\n  _createPoint(coordinate) {\n    try {\n      // Create point feature - ensure coordinate is properly formatted\n      // Import the Coordinate class from Survey.Core - available from the module import\n      let validCoord;\n      \n      // Check if coordinate is already a Coordinate instance\n      if (coordinate instanceof Coordinate) {\n        validCoord = coordinate;\n      } else if (coordinate && typeof coordinate.lat === 'number' && typeof coordinate.lng === 'number') {\n        // Create a proper Coordinate object from coordinate-like object\n        validCoord = new Coordinate(\n          coordinate.lat,\n          coordinate.lng,\n          coordinate.elevation !== undefined ? coordinate.elevation : 0,\n        );\n      } else {\n        console.error('Invalid coordinate provided:', coordinate);\n        throw new Error('Invalid coordinate');\n      }\n      \n      // Create the point style object\n      const pointStyle = {\n        ...this.options.pointSymbol,\n        // Use dual marker for points by default for better visual cues\n        // This shows both a pin and a dot at the exact location\n        useDualMarker: true,\n      };\n      \n      // Create a unique ID for debugging purposes\n      const pointId = `point-${Date.now()}`;\n\n      const pointFeature = new PointFeature(validCoord, {\n        id: pointId,\n        properties: {\n          type: 'drawing',\n          drawingType: 'point',\n          temporary: false,\n        },\n        style: pointStyle,\n      });\n\n      // Enhanced debugging for point creation\n      console.log('---------- POINT CREATION ----------');\n      console.log(`Created point with ID: ${pointId}`);\n      console.log(`At exact coordinate: ${validCoord.lat.toFixed(8)}, ${validCoord.lng.toFixed(8)}`);\n      console.log(`Using style: ${JSON.stringify(pointStyle)}`);\n      console.log('------------------------------------');\n      \n      // Apply 3D elevation if enabled\n      if (this.options.enable3D) {\n        this.manager.applyElevationData(pointFeature);\n      }\n      \n      // Add to features collection\n      this.manager.features.addFeature(pointFeature);\n      \n      // Emit event\n      this.emit('pointCreated', pointFeature);\n      \n      // Always maintain the tool active if continuous drawing is enabled\n      if (this.options.continuousDrawing) {\n        console.log('Continuous drawing enabled, keeping tool active - NO deactivation will occur');\n        // We don't need to do anything here - tool remains active\n      } else {\n        console.log('Continuous drawing disabled, tool will be deactivated');\n        // Schedule deactivation for a bit later to avoid race conditions\n        // Using a slightly longer timeout to ensure any event propagation completes\n        setTimeout(() => {\n          console.log('Now deactivating tool (continuousDrawing=false)');\n          this.manager.deactivateActiveTool();\n        }, 50);\n      }\n      \n      return pointFeature;\n    } catch (error) {\n      console.error('Error creating point feature:', error);\n      \n      // Avoid deactivating the tool on error to allow retrying\n      return null;\n    }\n  }\n  \n  /**\n   * Add a vertex to the active line or polygon\n   * @param {Object} coordinate - The coordinate to add\n   * @private\n   */\n  _addVertex(coordinate) {\n    try {\n      if (!this.workingData.activeFeature) {\n        console.log('No active feature found when trying to add vertex');\n        // Start a new drawing if there's no active feature\n        this._startNewDrawing();\n        if (!this.workingData.activeFeature) {\n          console.error('Failed to create new feature for drawing');\n          return;\n        }\n      }\n      \n      // Process coordinate to ensure it's usable\n      let validCoord;\n      \n      // Check if coordinate is already a proper Coordinate instance\n      if (coordinate instanceof Coordinate) {\n        validCoord = coordinate;\n      } else if (coordinate && typeof coordinate.lat === 'number' && typeof coordinate.lng === 'number') {\n        // Create a proper Coordinate object from coordinate-like object\n        validCoord = new Coordinate(\n          coordinate.lat,\n          coordinate.lng,\n          coordinate.elevation !== undefined ? coordinate.elevation : 0,\n        );\n      } else {\n        console.error('Invalid coordinate provided:', coordinate);\n        throw new Error('Invalid coordinate');\n      }\n      \n      console.log(`Adding vertex at ${validCoord.lat}, ${validCoord.lng} to ${this.options.mode} feature`);\n      \n      // Create enhanced vertex style that's more visible\n      const enhancedVertexStyle = {\n        ...this.options.vertexSymbol,\n        size: this.options.vertexSymbol.size || 8,\n        color: this.options.vertexSymbol.color || '#3388FF',\n        outlineWidth: this.options.vertexSymbol.outlineWidth || 2,\n        outlineColor: this.options.vertexSymbol.outlineColor || 'white',\n      };\n      \n      // Create vertex feature for visual feedback\n      const vertexFeature = new PointFeature(validCoord, {\n        id: `vertex-${Date.now()}-${this.workingData.vertices.length}`,\n        properties: {\n          type: 'vertex',\n          drawingId: this.workingData.activeFeature.id,\n          vertexIndex: this.workingData.vertices.length,\n          temporary: true,\n        },\n        style: enhancedVertexStyle,\n      });\n      \n      // Apply 3D elevation if enabled\n      if (this.options.enable3D) {\n        this.manager.applyElevationData(vertexFeature);\n      }\n      \n      // Add vertex to working features and vertices array\n      this.manager.workingFeatures.addFeature(vertexFeature);\n      this.workingData.vertices.push(vertexFeature);\n      \n      // Update feature geometry based on type\n      if (this.options.mode === 'line') {\n        const coordinates = this.workingData.vertices.map(v => v.getCoordinate());\n        console.log(`Setting line coordinates with ${coordinates.length} vertices`);\n        this.workingData.activeFeature.setCoordinates(coordinates);\n        \n        // Make sure the feature is properly triggering an update event\n        this.workingData.activeFeature.properties.lastUpdate = Date.now();\n        \n        // Notify the feature collection that this feature has been updated\n        this.manager.workingFeatures.updateFeature(this.workingData.activeFeature);\n        \n      } else if (this.options.mode === 'polygon') {\n        const coordinates = this.workingData.vertices.map(v => v.getCoordinate());\n        console.log(`Setting polygon coordinates with ${coordinates.length} vertices`);\n        \n        try {\n          // First try using setRings method (the preferred approach)\n          if (typeof this.workingData.activeFeature.setRings === 'function') {\n            this.workingData.activeFeature.setRings([coordinates]);\n          } \n          // Fall back to setCoordinates if setRings is not available\n          else if (typeof this.workingData.activeFeature.setCoordinates === 'function') {\n            console.log('Falling back to setCoordinates for polygon');\n            this.workingData.activeFeature.setCoordinates(coordinates);\n          }\n          else {\n            console.error('Polygon feature has neither setRings nor setCoordinates methods');\n          }\n        } catch (error) {\n          console.error('Error updating polygon coordinates:', error);\n        }\n        \n        // Make sure the feature is properly triggering an update event\n        this.workingData.activeFeature.properties.lastUpdate = Date.now();\n        \n        // Notify the feature collection that this feature has been updated\n        this.manager.workingFeatures.updateFeature(this.workingData.activeFeature);\n      }\n      \n      // After adding a vertex, ensure the preview is immediately updated\n      this._updatePreview();\n      \n      // Emit event\n      this.emit('vertexAdded', {\n        feature: this.workingData.activeFeature,\n        coordinate: validCoord,\n        vertexIndex: this.workingData.vertices.length - 1,\n      });\n      \n      // Log the current state of feature collection for debugging\n      setTimeout(() => {\n        const workingFeatureCount = this.manager.workingFeatures.getFeatureCount();\n        console.log(`Working features count after adding vertex: ${workingFeatureCount}`);\n        \n        const lineFeatures = this.manager.workingFeatures.getFeaturesByType('line');\n        const pointFeatures = this.manager.workingFeatures.getFeaturesByType('point');\n        console.log(`Working features by type - Lines: ${lineFeatures.length}, Points: ${pointFeatures.length}`);\n      }, 10);\n      \n    } catch (error) {\n      console.error('Error adding vertex:', error);\n      \n      // Try to recover by starting a new drawing\n      console.log('Attempting to recover by restarting the drawing');\n      setTimeout(() => {\n        this._startNewDrawing();\n      }, 10);\n    }\n  }\n  \n  /**\n   * Handle freehand drawing\n   * @param {Object} coordinate - The current mouse coordinate\n   * @private\n   */\n  _addFreehandPoint(coordinate) {\n    if (!this.workingData.activeFeature) {\n      return;\n    }\n    \n    // Only add points that are a certain distance apart\n    if (this.workingData.lastFreehandPoint) {\n      const distance = this.geometryEngine.calculateDistance(\n        this.workingData.lastFreehandPoint, \n        coordinate,\n      );\n      \n      // Skip if too close to the last point\n      if (distance < this.options.freehandSamplingInterval) {\n        return;\n      }\n    }\n    \n    // Create a proper Coordinate object if needed\n    let validCoord;\n    if (coordinate instanceof Coordinate) {\n      validCoord = coordinate;\n    } else if (coordinate && typeof coordinate.lat === 'number' && typeof coordinate.lng === 'number') {\n      validCoord = new Coordinate(\n        coordinate.lat,\n        coordinate.lng,\n        coordinate.elevation !== undefined ? coordinate.elevation : 0,\n      );\n    } else {\n      console.error('Invalid coordinate for freehand drawing:', coordinate);\n      return;\n    }\n    \n    // Add the point to the feature\n    const coordinates = this.workingData.activeFeature.getCoordinates();\n    coordinates.push(validCoord);\n    this.workingData.activeFeature.setCoordinates(coordinates);\n    \n    // Update the last freehand point with the validated coordinate\n    this.workingData.lastFreehandPoint = validCoord;\n    \n    // Apply 3D elevation if enabled (periodically to avoid too many requests)\n    if (this.options.enable3D && coordinates.length % 5 === 0) {\n      this.manager.applyElevationData(this.workingData.activeFeature);\n    }\n  }\n  \n  /**\n   * Handle ongoing freehand drawing\n   * @param {Object} coordinate - The current mouse coordinate\n   * @private\n   */\n  _handleFreehandDrawing(coordinate) {\n    // Check if there's an active snap point before using raw coordinate\n    let pointCoordinate = coordinate;\n    if (this.manager.snappingManager && this.manager.snappingManager.getSnapPoint()) {\n      // Use the snapped coordinate for the freehand point\n      const snap = this.manager.snappingManager.getSnapPoint();\n      pointCoordinate = snap.coordinate;\n    }\n    \n    // Add the freehand point\n    this._addFreehandPoint(pointCoordinate);\n  }\n  \n  /**\n   * Update the preview with the current mouse position\n   * This ensures that the line or polygon being drawn shows a preview\n   * that follows the mouse cursor in real-time\n   * @private\n   */\n  _updatePreview() {\n    if (!this.workingData.activeFeature || !this.workingData.mousePosition) {\n      return;\n    }\n    \n    // Get the coordinates of all existing vertices\n    const vertices = this.workingData.vertices.map(v => v.getCoordinate());\n    \n    // Ensure the mousePosition is a proper Coordinate object\n    const mouseCoordinate = this.workingData.mousePosition;\n    \n    // Handle line preview\n    if (this.options.mode === 'line' && vertices.length > 0) {\n      // For lines, show a preview from the last vertex to the mouse position\n      const previewCoords = [...vertices, mouseCoordinate];\n      \n      console.log(`Updating line preview with ${previewCoords.length} points, last point: ${mouseCoordinate.lat}, ${mouseCoordinate.lng}`);\n      \n      // Apply the new coordinates to the feature\n      this.workingData.activeFeature.setCoordinates(previewCoords);\n      \n      // Make sure the feature is properly triggering an update event\n      // by modifying a property to force an update if the coordinates didn't change\n      this.workingData.activeFeature.properties.lastPreviewUpdate = Date.now();\n      \n      // Notify the feature collection that this feature has been updated\n      this.manager.workingFeatures.updateFeature(this.workingData.activeFeature);\n    } \n    // Handle polygon preview\n    else if (this.options.mode === 'polygon' && vertices.length > 1) {\n      // For polygons, show a preview loop from last vertex to mouse position and back to first vertex\n      let previewCoords = [...vertices, mouseCoordinate];\n      \n      // Explicitly close the polygon by adding the first vertex at the end\n      // This ensures Google Maps won't add an extra segment automatically\n      if (vertices.length > 0) {\n        previewCoords = [...previewCoords, vertices[0]];\n      }\n      \n      console.log(`Updating polygon preview with ${previewCoords.length} points, explicitly closed, last point: ${mouseCoordinate.lat}, ${mouseCoordinate.lng}`);\n      \n      // Apply the new coordinates to the feature\n      this.workingData.activeFeature.setRings([previewCoords]);\n      \n      // Make sure the feature is properly triggering an update event\n      this.workingData.activeFeature.properties.lastPreviewUpdate = Date.now();\n      \n      // Notify the feature collection that this feature has been updated\n      this.manager.workingFeatures.updateFeature(this.workingData.activeFeature);\n    }\n  }\n  \n  /**\n   * Remove the last vertex from the drawing\n   * @private\n   */\n  _removeLastVertex() {\n    if (this.workingData.vertices.length === 0) {\n      return;\n    }\n    \n    // Remove the last vertex\n    const lastVertex = this.workingData.vertices.pop();\n    this.manager.workingFeatures.removeFeature(lastVertex);\n    \n    // Update feature geometry\n    if (this.options.mode === 'line') {\n      const coordinates = this.workingData.vertices.map(v => v.getCoordinate());\n      this.workingData.activeFeature.setCoordinates(coordinates);\n    } else if (this.options.mode === 'polygon') {\n      let coordinates = this.workingData.vertices.map(v => v.getCoordinate());\n      \n      // For polygons, explicitly close the ring by adding the first vertex at the end\n      // if we have at least one vertex\n      if (coordinates.length > 0) {\n        coordinates = [...coordinates, coordinates[0]];\n      }\n      \n      this.workingData.activeFeature.setRings([coordinates]);\n    }\n    \n    // Update preview\n    this._updatePreview();\n    \n    // Emit event\n    this.emit('vertexRemoved', {\n      feature: this.workingData.activeFeature,\n      vertexCount: this.workingData.vertices.length,\n    });\n  }\n  \n  /**\n   * Complete the current drawing\n   * @private\n   */\n  _completeDrawing() {\n    if (!this.workingData.activeFeature) {\n      console.log('No active feature to complete');\n      return;\n    }\n    \n    let finalFeature;\n    \n    switch (this.options.mode) {\n    case 'line':\n      // Need at least 2 vertices for a valid line\n      if (this.workingData.vertices.length < 2) {\n        console.log('Not enough vertices for a line (need at least 2)');\n        this._startNewDrawing();\n        return;\n      }\n        \n      // Create final line feature\n      const lineCoordinates = this.workingData.vertices.map(v => v.getCoordinate());\n      console.log(`Creating final line feature with ${lineCoordinates.length} vertices`);\n        \n      try {\n        // Using the existing feature to create the final one\n        this.workingData.activeFeature.properties.temporary = false;\n        this.workingData.activeFeature.properties.isPreview = false;\n        this.workingData.activeFeature.setCoordinates(lineCoordinates);\n          \n        // Change from preview style to final style\n        this.workingData.activeFeature.style = this.options.lineSymbol;\n          \n        // Set a more descriptive name for the line\n        const firstCoord = lineCoordinates[0];\n        const lastCoord = lineCoordinates[lineCoordinates.length - 1];\n          \n        // Format the coordinates for the name (rounded to 5 decimal places)\n        const startLat = firstCoord.lat.toFixed(5);\n        const startLng = firstCoord.lng.toFixed(5);\n        const endLat = lastCoord.lat.toFixed(5);\n        const endLng = lastCoord.lng.toFixed(5);\n          \n        this.workingData.activeFeature.setName(`Line from (${startLat}, ${startLng}) to (${endLat}, ${endLng})`);\n          \n        finalFeature = this.workingData.activeFeature;\n          \n        // Remove this feature from working features since we'll add it to permanent features\n        this.manager.workingFeatures.removeFeature(finalFeature);\n      } catch (error) {\n        console.error('Error finalizing line feature:', error);\n        this._startNewDrawing();\n        return;\n      }\n      break;\n        \n    case 'polygon':\n      // Need at least 3 vertices for a valid polygon\n      if (this.workingData.vertices.length < 3) {\n        console.log('Not enough vertices for a polygon (need at least 3)');\n        this._startNewDrawing();\n        return;\n      }\n        \n      // Create final polygon feature\n      let polygonCoordinates = this.workingData.vertices.map(v => v.getCoordinate());\n        \n      // Ensure the polygon is closed (first vertex is the same as last vertex)\n      if (polygonCoordinates.length > 0) {\n        // Explicitly close the polygon by adding the first vertex again\n        polygonCoordinates = [...polygonCoordinates, polygonCoordinates[0]];\n      }\n        \n      console.log(`Creating final polygon feature with ${polygonCoordinates.length} vertices (including closing vertex)`);\n        \n      try {\n        // Create a new polygon instance with the collected coordinates\n        finalFeature = new PolygonFeature(polygonCoordinates, {\n          id: `polygon-${Date.now()}`,\n          properties: {\n            type: 'drawing',\n            drawingType: 'polygon',\n            temporary: false,\n            isPreview: false,\n          },\n          style: this.options.polygonSymbol,\n        });\n          \n        // Set a descriptive name for the polygon\n        try {\n          const center = finalFeature.getCenter();\n          if (center) {\n            const centerLat = center.lat.toFixed(5);\n            const centerLng = center.lng.toFixed(5);\n            finalFeature.setName(`Polygon at (${centerLat}, ${centerLng})`);\n          } else {\n            finalFeature.setName(`Polygon with ${polygonCoordinates.length} vertices`);\n          }\n        } catch (/* eslint-disable-line no-unused-vars */ error) {\n          // Fallback naming if there's any issue getting the center\n          finalFeature.setName(`Polygon with ${polygonCoordinates.length} vertices`);\n        }\n          \n        // Remove the preview features from working features collection\n        this.manager.workingFeatures.removeFeature(this.workingData.activeFeature);\n          \n        // Also remove all vertex features from working features\n        this.workingData.vertices.forEach(vertex => {\n          this.manager.workingFeatures.removeFeature(vertex);\n        });\n      } catch (error) {\n        console.error('Error finalizing polygon feature:', error);\n        this._startNewDrawing();\n        return;\n      }\n      break;\n        \n    case 'freehand':\n      // Need at least 2 points for a valid freehand line\n      const freehandCoords = this.workingData.activeFeature.getCoordinates();\n      if (freehandCoords.length < 2) {\n        console.log('Not enough points for a freehand line (need at least 2)');\n        this._startNewDrawing();\n        return;\n      }\n        \n      // Create final feature based on geometry\n      console.log(`Creating final freehand feature with ${freehandCoords.length} vertices`);\n        \n      try {\n        // Using the existing feature for the final feature\n        this.workingData.activeFeature.properties.temporary = false;\n        this.workingData.activeFeature.properties.isPreview = false;\n          \n        // Change from preview style to final style\n        this.workingData.activeFeature.style = this.options.lineSymbol;\n          \n        // Set a descriptive name for the freehand line\n        const firstCoord = freehandCoords[0];\n        const lastCoord = freehandCoords[freehandCoords.length - 1];\n          \n        const startLat = firstCoord.lat.toFixed(5);\n        const startLng = firstCoord.lng.toFixed(5);\n        const endLat = lastCoord.lat.toFixed(5);\n        const endLng = lastCoord.lng.toFixed(5);\n          \n        this.workingData.activeFeature.setName(`Freehand line from (${startLat}, ${startLng}) to (${endLat}, ${endLng})`);\n          \n        finalFeature = this.workingData.activeFeature;\n          \n        // Remove this feature from working features since we'll add it to permanent features\n        this.manager.workingFeatures.removeFeature(finalFeature);\n      } catch (error) {\n        console.error('Error finalizing freehand feature:', error);\n        this._startNewDrawing();\n        return;\n      }\n      break;\n    }\n    \n    if (finalFeature) {\n      // Apply 3D elevation if enabled\n      if (this.options.enable3D) {\n        this.manager.applyElevationData(finalFeature);\n      }\n      \n      // Make sure the feature is no longer temporary\n      finalFeature.properties.temporary = false;\n      \n      // Set the feature ID to be a specific type\n      const featureType = this.options.mode === 'freehand' ? 'line' : this.options.mode;\n      finalFeature.id = `${featureType}-${Date.now()}`;\n      \n      // Add to features collection and log success\n      console.log(`Adding completed ${this.options.mode} feature to collection with ID ${finalFeature.id}`);\n      console.log('Feature details:', {\n        type: finalFeature.type,\n        id: finalFeature.id,\n        coordinates: finalFeature.getCoordinates ? finalFeature.getCoordinates() : null,\n        name: finalFeature.name,\n        properties: finalFeature.properties,\n      });\n      \n      this.manager.features.addFeature(finalFeature);\n      \n      // Verify the feature was added correctly\n      setTimeout(() => {\n        const featureCount = this.manager.features.getFeatureCount();\n        const lineFeatures = this.manager.features.getFeaturesByType('line');\n        console.log(`Total features after adding: ${featureCount}, Line features: ${lineFeatures.length}`);\n      }, 100);\n      \n      // Emit event\n      this.emit('drawingCompleted', finalFeature);\n      \n      // Handle tool state based on continuousDrawing setting\n      if (!this.options.continuousDrawing) {\n        console.log('Continuous drawing disabled, scheduling tool deactivation');\n        // Use setTimeout with longer delay to avoid race conditions with event handling\n        setTimeout(() => {\n          console.log('Now deactivating tool after completing drawing (continuousDrawing=false)');\n          this.manager.deactivateActiveTool();\n        }, 50);\n      } else {\n        // Start a new drawing immediately if in continuous mode\n        console.log('Continuous drawing enabled, starting new drawing');\n        // Use setTimeout to ensure other events are processed first\n        setTimeout(() => {\n          this._startNewDrawing();\n          console.log('New drawing started in continuous mode');\n        }, 10);\n      }\n    } else {\n      console.error('Failed to create final feature');\n      // Start a new drawing to recover from the error\n      this._startNewDrawing();\n    }\n  }\n  \n  /**\n   * Set the drawing mode\n   * @param {string} mode - The drawing mode (point, line, polygon, freehand)\n   * @returns {boolean} Success of mode change\n   */\n  setMode(mode) {\n    if (!['point', 'line', 'polygon', 'freehand'].includes(mode)) {\n      console.error(`Invalid drawing mode: ${mode}`);\n      return false;\n    }\n    \n    // If we're already in the same mode, complete the current drawing if possible\n    if (this.options.mode === mode) {\n      return this.tryCompleteCurrentDrawing();\n    }\n    \n    // Finish current drawing if any\n    if (this.workingData.activeFeature) {\n      if ((this.options.mode === 'line' && this.workingData.vertices.length >= 2) ||\n          (this.options.mode === 'polygon' && this.workingData.vertices.length >= 3) ||\n          (this.options.mode === 'freehand' && this.workingData.activeFeature.getCoordinates().length >= 2)) {\n        this._completeDrawing();\n      } else {\n        this._clearActiveDrawing();\n      }\n    }\n    \n    // Update mode\n    this.options.mode = mode;\n    \n    // Start new drawing with new mode\n    this._startNewDrawing();\n    \n    // Emit event\n    this.emit('modeChanged', { mode });\n    \n    return true;\n  }\n  \n  /**\n   * Try to complete the current drawing if there are enough vertices\n   * This is useful for finalizing a polygon or line when the user clicks the tool again\n   * @returns {boolean} True if a drawing was completed, false otherwise\n   */\n  tryCompleteCurrentDrawing() {\n    // Check if we have an active drawing with enough vertices\n    if (this.workingData.activeFeature) {\n      if ((this.options.mode === 'line' && this.workingData.vertices.length >= 2) ||\n          (this.options.mode === 'polygon' && this.workingData.vertices.length >= 3) ||\n          (this.options.mode === 'freehand' && this.workingData.activeFeature.getCoordinates().length >= 2)) {\n        console.log(`Completing ${this.options.mode} drawing with ${this.workingData.vertices.length} vertices via tool button click`);\n        this._completeDrawing();\n        return true;\n      } else {\n        console.log(`Not enough vertices to complete ${this.options.mode} drawing`);\n        // Not enough vertices, just start over\n        this._startNewDrawing();\n      }\n    } else {\n      // No active feature, create a new one\n      this._startNewDrawing();\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Set continuous drawing mode\n   * @param {boolean} enable - Whether to enable continuous drawing\n   * @returns {boolean} New state of continuous drawing mode\n   */\n  setContinuousDrawing(enable) {\n    this.options.continuousDrawing = !!enable;\n    \n    // Emit event\n    this.emit('continuousDrawingChanged', {\n      continuousDrawing: this.options.continuousDrawing,\n    });\n    \n    return this.options.continuousDrawing;\n  }\n  \n  /**\n   * Set 3D drawing mode\n   * @param {boolean} enable - Whether to enable 3D drawing\n   * @returns {boolean} New state of 3D drawing mode\n   */\n  setEnable3D(enable) {\n    this.options.enable3D = !!enable;\n    \n    // Emit event\n    this.emit('enable3DChanged', {\n      enable3D: this.options.enable3D,\n    });\n    \n    return this.options.enable3D;\n  }\n  \n  /**\n   * Set the freehand sampling interval\n   * @param {number} interval - The interval in meters\n   * @returns {number} The updated interval\n   */\n  setFreehandSamplingInterval(interval) {\n    if (isNaN(interval) || interval <= 0) {\n      console.error('Invalid sampling interval. Must be a positive number.');\n      return this.options.freehandSamplingInterval;\n    }\n    \n    this.options.freehandSamplingInterval = interval;\n    \n    // Emit event\n    this.emit('freehandSamplingIntervalChanged', {\n      interval: this.options.freehandSamplingInterval,\n    });\n    \n    return this.options.freehandSamplingInterval;\n  }\n  \n  /**\n   * Get the current drawing settings\n   * @returns {Object} Current drawing settings\n   */\n  getSettings() {\n    return {\n      mode: this.options.mode,\n      enable3D: this.options.enable3D,\n      continuousDrawing: this.options.continuousDrawing,\n      freehandSamplingInterval: this.options.freehandSamplingInterval,\n    };\n  }\n}","/**\n * EditingTool.js\n * Tool for editing features with 3D vertex manipulation\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { ToolBase } from './ToolBase.js';\nimport { PointFeature } from '../features/PointFeature.js';\nimport { LineFeature as _LineFeature } from '../features/LineFeature.js';\nimport { PolygonFeature as _PolygonFeature } from '../features/PolygonFeature.js';\n\n/**\n * @typedef {Object} EditingToolOptions\n * @property {boolean} [enable3D=true] - Whether to enable 3D editing\n * @property {number} [vertexDistanceTolerance=10] - Pixel distance tolerance for selecting vertices\n * @property {boolean} [allowVertexAddition=true] - Whether to allow adding new vertices to lines/polygons\n * @property {boolean} [allowVertexDeletion=true] - Whether to allow deleting vertices from lines/polygons\n * @property {Object} [vertexSymbol] - Symbol for regular vertices\n * @property {Object} [selectedVertexSymbol] - Symbol for selected vertices\n * @property {Object} [insertionVertexSymbol] - Symbol for insertion points\n * @property {Object} [lineSymbol] - Symbol for selected lines\n * @property {Object} [polygonSymbol] - Symbol for selected polygons\n */\n\n/**\n * Tool for editing survey features\n * Supports full 3D vertex manipulation and geometry editing\n */\nexport class EditingTool extends ToolBase {\n  /**\n   * Create a new EditingTool instance\n   * @param {Object} options - Tool configuration options\n   */\n  constructor(options = {}) {\n    super(options);\n    \n    // Initialize tool-specific options with defaults\n    this.options = Object.assign({\n      enable3D: true,\n      vertexDistanceTolerance: 10, // pixels\n      allowVertexAddition: true,\n      allowVertexDeletion: true,\n      snapToTerrain: true,\n      dragDistanceThreshold: 3, // pixels\n      vertexSymbol: {\n        type: 'circle',\n        size: 8,\n        color: '#3388FF',\n        outlineWidth: 1,\n        outlineColor: 'white',\n      },\n      selectedVertexSymbol: {\n        type: 'circle',\n        size: 10,\n        color: '#FF5733',\n        outlineWidth: 2,\n        outlineColor: 'white',\n      },\n      insertionVertexSymbol: {\n        type: 'circle',\n        size: 6,\n        color: 'rgba(51, 136, 255, 0.5)',\n        outlineWidth: 1,\n        outlineColor: '#3388FF',\n      },\n      lineSymbol: Object.assign({}, this.manager.settings.defaultLineSymbol, {\n        width: 4,\n        color: '#3388FF',\n      }),\n      polygonSymbol: Object.assign({}, this.manager.settings.defaultPolygonSymbol, {\n        outlineWidth: 3,\n        outlineColor: '#3388FF',\n      }),\n    }, options);\n    \n    // Initialize internal state\n    this.workingData = {\n      targetFeature: null,\n      originalFeature: null,\n      vertices: [],\n      insertionVertices: [],\n      selectedVertex: null,\n      isDragging: false,\n      dragStartPosition: null,\n      mousePosition: null,\n      operationMode: 'none', // none, move, add, delete\n      operationComplete: false,\n      draggedDistance: 0,\n      snapTargets: [],\n    };\n    \n    // Bind event handlers to maintain 'this' context\n    this._handleMapClick = this._handleMapClick.bind(this);\n    this._handleMapMouseMove = this._handleMapMouseMove.bind(this);\n    this._handleMapDoubleClick = this._handleMapDoubleClick.bind(this);\n    this._handleMapRightClick = this._handleMapRightClick.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleMapMouseDown = this._handleMapMouseDown.bind(this);\n    this._handleMapMouseUp = this._handleMapMouseUp.bind(this);\n    this._handleFeatureSelected = this._handleFeatureSelected.bind(this);\n  }\n  \n  /**\n   * Set up tool-specific event listeners\n   * @protected\n   * @override\n   */\n  _setupEventListeners() {\n    // Listen for feature selection from the manager\n    this.manager.on('featureSelected', this._handleFeatureSelected);\n    \n    // Listen for feature changes\n    this.manager.features.on('featureUpdated', feature => {\n      // If we're editing this feature, update our vertex controls\n      if (this.workingData.targetFeature && \n          this.workingData.targetFeature.id === feature.id) {\n        this._updateVertexControls();\n      }\n    });\n  }\n  \n  /**\n   * Tool-specific activation logic\n   * @protected\n   * @override\n   */\n  _activate() {\n    // Add map event listeners\n    this.mapInterface.addEventListener('click', this._handleMapClick);\n    this.mapInterface.addEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.addEventListener('dblclick', this._handleMapDoubleClick);\n    this.mapInterface.addEventListener('contextmenu', this._handleMapRightClick);\n    this.mapInterface.addEventListener('mousedown', this._handleMapMouseDown);\n    this.mapInterface.addEventListener('mouseup', this._handleMapMouseUp);\n    \n    // Add keyboard event listeners\n    document.addEventListener('keydown', this._handleKeyDown);\n    \n    // Set initial state\n    this.workingData.operationMode = 'none';\n    \n    // Look for currently selected feature\n    const selectedFeatures = this.manager.getSelectedFeatures();\n    if (selectedFeatures.length === 1) {\n      this._startEditingFeature(selectedFeatures[0]);\n    }\n    \n    // Emit activation event\n    this.emit('activated', {\n      enable3D: this.options.enable3D,\n      targetFeature: this.workingData.targetFeature,\n    });\n  }\n  \n  /**\n   * Tool-specific deactivation logic\n   * @protected\n   * @override\n   */\n  _deactivate() {\n    // Remove map event listeners\n    this.mapInterface.removeEventListener('click', this._handleMapClick);\n    this.mapInterface.removeEventListener('mousemove', this._handleMapMouseMove);\n    this.mapInterface.removeEventListener('dblclick', this._handleMapDoubleClick);\n    this.mapInterface.removeEventListener('contextmenu', this._handleMapRightClick);\n    this.mapInterface.removeEventListener('mousedown', this._handleMapMouseDown);\n    this.mapInterface.removeEventListener('mouseup', this._handleMapMouseUp);\n    \n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this._handleKeyDown);\n    \n    // Complete any in-progress editing\n    this._completeEditing();\n    \n    // Clear vertex controls\n    this._clearVertexControls();\n    \n    // Reset state\n    this.workingData.targetFeature = null;\n    this.workingData.originalFeature = null;\n    this.workingData.operationMode = 'none';\n  }\n  \n  /**\n   * Tool-specific reset logic\n   * @protected\n   * @override\n   */\n  _reset() {\n    // Complete any in-progress editing\n    this._completeEditing();\n    \n    // Reset for next operation\n    this.workingData.operationMode = 'none';\n    this.workingData.selectedVertex = null;\n    this.workingData.isDragging = false;\n    this.workingData.operationComplete = false;\n    \n    // Keep the target feature, just update the vertex controls\n    if (this.workingData.targetFeature) {\n      this._updateVertexControls();\n    }\n  }\n  \n  /**\n   * Handle map click events\n   * @param {Object} event - The map click event\n   * @private\n   */\n  _handleMapClick(event) {\n    // Skip if already dragging\n    if (this.workingData.isDragging) {\n      return;\n    }\n    \n    const coordinate = event.coordinate;\n    const screenPosition = event.pixel;\n    \n    // If we don't have a target feature, try to select one\n    if (!this.workingData.targetFeature) {\n      this._selectFeatureAtPosition(coordinate, screenPosition);\n      return;\n    }\n    \n    // If we have a target but no operation mode, check if we're clicking a vertex\n    if (this.workingData.operationMode === 'none') {\n      // Check for vertex selection first\n      const vertex = this._findVertexAtPosition(screenPosition);\n      if (vertex) {\n        this._selectVertex(vertex);\n        return;\n      }\n      \n      // Check for insertion point selection\n      if (this.options.allowVertexAddition) {\n        const insertionVertex = this._findInsertionVertexAtPosition(screenPosition);\n        if (insertionVertex) {\n          this._addVertexAtInsertion(insertionVertex);\n          return;\n        }\n      }\n      \n      // If we clicked the feature but not on a vertex, select for move\n      if (this._isPositionOnFeature(coordinate, screenPosition)) {\n        // Set mode to move the entire feature\n        this.workingData.operationMode = 'move';\n        this.workingData.dragStartPosition = coordinate;\n        \n        // Emit event\n        this.emit('featureMoveStarted', {\n          feature: this.workingData.targetFeature,\n          coordinate: coordinate,\n        });\n        \n        return;\n      }\n      \n      // If we clicked elsewhere, deselect the feature\n      this._stopEditingFeature();\n    }\n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - The map mousemove event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    // Store mouse position\n    this.workingData.mousePosition = event.coordinate;\n    const screenPosition = event.pixel;\n    \n    // Handle drag operations\n    if (this.workingData.isDragging) {\n      this._handleDrag(event.coordinate, screenPosition);\n      return;\n    }\n    \n    // Update UI feedback based on what's under the cursor\n    if (this.workingData.targetFeature) {\n      // Check for hover over vertices\n      const vertex = this._findVertexAtPosition(screenPosition);\n      if (vertex) {\n        // Highlight the vertex\n        this._highlightVertex(vertex);\n        this.mapInterface.setCursor('pointer');\n        return;\n      }\n      \n      // Check for hover over insertion points\n      if (this.options.allowVertexAddition) {\n        const insertionVertex = this._findInsertionVertexAtPosition(screenPosition);\n        if (insertionVertex) {\n          // Highlight the insertion point\n          this._highlightInsertionVertex(insertionVertex);\n          this.mapInterface.setCursor('pointer');\n          return;\n        }\n      }\n      \n      // Check if we're over the feature itself\n      if (this._isPositionOnFeature(event.coordinate, screenPosition)) {\n        this.mapInterface.setCursor('move');\n        return;\n      }\n    }\n    \n    // Default cursor\n    this.mapInterface.setCursor('default');\n  }\n  \n  /**\n   * Handle map double click events\n   * @param {Object} event - The map double click event\n   * @private\n   */\n  _handleMapDoubleClick(event) {\n    // Prevent default browser behavior\n    if (event.originalEvent) {\n      event.originalEvent.preventDefault();\n    }\n    \n    // Currently no special behavior for double-click in the editing tool\n  }\n  \n  /**\n   * Handle map right click events\n   * @param {Object} event - The map right click event\n   * @private\n   */\n  _handleMapRightClick(event) {\n    // Prevent default context menu\n    if (event.originalEvent) {\n      event.originalEvent.preventDefault();\n    }\n    \n    // If we have a selected vertex and deletion is allowed, delete it\n    if (this.workingData.selectedVertex && this.options.allowVertexDeletion) {\n      this._deleteSelectedVertex();\n      return;\n    }\n    \n    // If we right-click on the feature, complete editing\n    if (this.workingData.targetFeature && \n        this._isPositionOnFeature(event.coordinate, event.pixel)) {\n      this._completeEditing();\n      return;\n    }\n    \n    // Right-click elsewhere, stop editing\n    this._stopEditingFeature();\n  }\n  \n  /**\n   * Handle map mouse down events\n   * @param {Object} event - The map mousedown event\n   * @private\n   */\n  _handleMapMouseDown(event) {\n    // Only handle left mouse button\n    if (event.originalEvent.button !== 0) {\n      return;\n    }\n    \n    // Start potential drag\n    if (this.workingData.targetFeature) {\n      const screenPosition = event.pixel;\n      const coordinate = event.coordinate;\n      \n      // Check if we're on a vertex\n      const vertex = this._findVertexAtPosition(screenPosition);\n      if (vertex) {\n        this._selectVertex(vertex);\n        this.workingData.isDragging = true;\n        this.workingData.dragStartPosition = coordinate;\n        this.workingData.operationMode = 'moveVertex';\n        this.workingData.draggedDistance = 0;\n        \n        // Emit event\n        this.emit('vertexMoveStarted', {\n          feature: this.workingData.targetFeature,\n          vertexIndex: vertex.vertexIndex,\n          coordinate: coordinate,\n        });\n        \n        return;\n      }\n      \n      // Check if we're on an insertion point\n      if (this.options.allowVertexAddition) {\n        const insertionVertex = this._findInsertionVertexAtPosition(screenPosition);\n        if (insertionVertex) {\n          // For insertion points, we add the vertex on click, not drag\n          return;\n        }\n      }\n      \n      // Check if we're on the feature itself\n      if (this._isPositionOnFeature(coordinate, screenPosition)) {\n        this.workingData.isDragging = true;\n        this.workingData.dragStartPosition = coordinate;\n        this.workingData.operationMode = 'move';\n        this.workingData.draggedDistance = 0;\n        \n        // Emit event\n        this.emit('featureMoveStarted', {\n          feature: this.workingData.targetFeature,\n          coordinate: coordinate,\n        });\n      }\n    }\n  }\n  \n  /**\n   * Handle map mouse up events\n   * @param {Object} event - The map mouseup event\n   * @private\n   */\n  _handleMapMouseUp(event) {\n    // End any drag operation\n    if (this.workingData.isDragging) {\n      this.workingData.isDragging = false;\n      \n      // If we didn't drag far enough, treat it as a click\n      if (this.workingData.draggedDistance < this.options.dragDistanceThreshold) {\n        // For vertex, just keep it selected\n        if (this.workingData.operationMode === 'moveVertex') {\n          // Keep vertex selected, but clear drag state\n          this.workingData.dragStartPosition = null;\n        } else if (this.workingData.operationMode === 'move') {\n          // For feature move, just clear drag state\n          this.workingData.dragStartPosition = null;\n        }\n      } else {\n        // Complete the drag operation\n        if (this.workingData.operationMode === 'moveVertex') {\n          // Emit event\n          this.emit('vertexMoveCompleted', {\n            feature: this.workingData.targetFeature,\n            vertexIndex: this.workingData.selectedVertex.vertexIndex,\n            coordinate: event.coordinate,\n          });\n        } else if (this.workingData.operationMode === 'move') {\n          // Emit event\n          this.emit('featureMoveCompleted', {\n            feature: this.workingData.targetFeature,\n            coordinate: event.coordinate,\n          });\n        }\n        \n        // Reset operation mode\n        this.workingData.operationMode = 'none';\n        this.workingData.dragStartPosition = null;\n      }\n    }\n  }\n  \n  /**\n   * Handle keyboard events\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  _handleKeyDown(event) {\n    // Handle Escape key\n    if (event.key === 'Escape') {\n      if (this.workingData.isDragging) {\n        // Cancel drag operation\n        this._cancelDrag();\n      } else if (this.workingData.selectedVertex) {\n        // Deselect vertex\n        this._deselectVertex();\n      } else if (this.workingData.targetFeature) {\n        // Cancel editing\n        this._cancelEditing();\n      }\n    }\n    \n    // Handle Delete key\n    if ((event.key === 'Delete' || event.key === 'Backspace') && \n        this.workingData.selectedVertex && \n        this.options.allowVertexDeletion) {\n      this._deleteSelectedVertex();\n    }\n    \n    // Handle Enter key\n    if (event.key === 'Enter') {\n      if (this.workingData.targetFeature) {\n        this._completeEditing();\n      }\n    }\n  }\n  \n  /**\n   * Handle feature selection events\n   * @param {Object} feature - The selected feature\n   * @private\n   */\n  _handleFeatureSelected(feature) {\n    if (!this.isActive) {\n      return;\n    }\n    \n    // If we're already editing a different feature, complete that edit first\n    if (this.workingData.targetFeature && \n        this.workingData.targetFeature.id !== feature.id) {\n      this._completeEditing();\n    }\n    \n    // Start editing the selected feature\n    this._startEditingFeature(feature);\n  }\n  \n  /**\n   * Start editing a feature\n   * @param {Object} feature - The feature to edit\n   * @private\n   */\n  _startEditingFeature(feature) {\n    // Only allow editing certain feature types\n    if (!['point', 'line', 'polygon'].includes(feature.type)) {\n      console.warn('Cannot edit feature of type:', feature.type);\n      return;\n    }\n    \n    // Store original feature state for undo\n    this.workingData.originalFeature = {\n      id: feature.id,\n      type: feature.type,\n      data: feature.toGeoJSON(),\n    };\n    \n    // Set as target feature\n    this.workingData.targetFeature = feature;\n    \n    // Create vertex controls\n    this._createVertexControls();\n    \n    // Reset operation state\n    this.workingData.operationMode = 'none';\n    this.workingData.selectedVertex = null;\n    this.workingData.isDragging = false;\n    \n    // Apply editing styles to feature\n    this._applyEditingStyle();\n    \n    // Emit event\n    this.emit('editingStarted', {\n      feature: feature,\n      featureType: feature.type,\n    });\n  }\n  \n  /**\n   * Stop editing the current feature\n   * @private\n   */\n  _stopEditingFeature() {\n    if (!this.workingData.targetFeature) {\n      return;\n    }\n    \n    // Clear vertex controls\n    this._clearVertexControls();\n    \n    // Restore original style\n    this._restoreOriginalStyle();\n    \n    // Get feature for event\n    const feature = this.workingData.targetFeature;\n    \n    // Clear target feature\n    this.workingData.targetFeature = null;\n    this.workingData.originalFeature = null;\n    this.workingData.selectedVertex = null;\n    this.workingData.operationMode = 'none';\n    \n    // Emit event\n    this.emit('editingStopped', {\n      feature: feature,\n    });\n  }\n  \n  /**\n   * Apply editing style to the target feature\n   * @private\n   */\n  _applyEditingStyle() {\n    if (!this.workingData.targetFeature) {\n      return;\n    }\n    \n    // Store original style\n    this.workingData.originalStyle = this.workingData.targetFeature.getStyle();\n    \n    // Apply appropriate style based on feature type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // For points, we don't change the style\n      break;\n        \n    case 'line':\n      this.workingData.targetFeature.setStyle(this.options.lineSymbol);\n      break;\n        \n    case 'polygon':\n      this.workingData.targetFeature.setStyle(this.options.polygonSymbol);\n      break;\n    }\n  }\n  \n  /**\n   * Restore original style to the edited feature\n   * @private\n   */\n  _restoreOriginalStyle() {\n    if (!this.workingData.targetFeature || !this.workingData.originalStyle) {\n      return;\n    }\n    \n    // Restore the original style\n    this.workingData.targetFeature.setStyle(this.workingData.originalStyle);\n    this.workingData.originalStyle = null;\n  }\n  \n  /**\n   * Create vertex control points for the target feature\n   * @private\n   */\n  _createVertexControls() {\n    if (!this.workingData.targetFeature) {\n      return;\n    }\n    \n    // Clear any existing controls\n    this._clearVertexControls();\n    \n    let vertices = [];\n    \n    // Create vertices based on feature type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // For points, create a single vertex\n      const coordinate = this.workingData.targetFeature.getCoordinate();\n      vertices.push(this._createVertexFeature(coordinate, 0));\n      break;\n        \n    case 'line':\n      // For lines, create vertices for each point\n      const lineCoordinates = this.workingData.targetFeature.getCoordinates();\n      vertices = lineCoordinates.map((coord, index) => \n        this._createVertexFeature(coord, index),\n      );\n        \n      // Create insertion vertices for potential new points\n      if (this.options.allowVertexAddition) {\n        this._createInsertionVertices(lineCoordinates);\n      }\n      break;\n        \n    case 'polygon':\n      // For polygons, create vertices for each point in each ring\n      const rings = this.workingData.targetFeature.getRings();\n      let vertexIndex = 0;\n        \n      rings.forEach((ring, ringIndex) => {\n        // Don't create a vertex for the closing point (it's the same as the first)\n        const ringVertices = ring.slice(0, -1).map((coord, pointIndex) => {\n          const vertex = this._createVertexFeature(coord, vertexIndex, {\n            ringIndex: ringIndex,\n            pointIndex: pointIndex,\n          });\n          vertexIndex++;\n          return vertex;\n        });\n          \n        vertices = vertices.concat(ringVertices);\n          \n        // Create insertion vertices for potential new points\n        if (this.options.allowVertexAddition) {\n          this._createInsertionVertices(ring, ringIndex);\n        }\n      });\n      break;\n    }\n    \n    // Store vertices\n    this.workingData.vertices = vertices;\n    \n    // Add vertices to the map\n    vertices.forEach(vertex => {\n      this.manager.workingFeatures.addFeature(vertex);\n    });\n    \n    // Add insertion vertices to the map\n    this.workingData.insertionVertices.forEach(vertex => {\n      this.manager.workingFeatures.addFeature(vertex);\n    });\n  }\n  \n  /**\n   * Update vertex control points for the target feature\n   * @private\n   */\n  _updateVertexControls() {\n    // Just recreate them\n    this._createVertexControls();\n  }\n  \n  /**\n   * Clear all vertex control points\n   * @private\n   */\n  _clearVertexControls() {\n    // Remove all vertices from the map\n    this.workingData.vertices.forEach(vertex => {\n      this.manager.workingFeatures.removeFeature(vertex);\n    });\n    \n    // Remove all insertion vertices from the map\n    this.workingData.insertionVertices.forEach(vertex => {\n      this.manager.workingFeatures.removeFeature(vertex);\n    });\n    \n    // Clear arrays\n    this.workingData.vertices = [];\n    this.workingData.insertionVertices = [];\n    this.workingData.selectedVertex = null;\n  }\n  \n  /**\n   * Create a vertex feature at the specified coordinate\n   * @param {Object} coordinate - The coordinate for the vertex\n   * @param {number} index - The index of the vertex\n   * @param {Object} [metadata] - Additional metadata for the vertex\n   * @returns {Object} The created vertex feature\n   * @private\n   */\n  _createVertexFeature(coordinate, index, metadata = {}) {\n    const vertexFeature = new PointFeature(coordinate, {\n      id: `vertex-${this.workingData.targetFeature.id}-${index}`,\n      properties: Object.assign({\n        type: 'vertex',\n        featureId: this.workingData.targetFeature.id,\n        vertexIndex: index,\n        isSelected: false,\n        temporary: true,\n      }, metadata),\n      style: this.options.vertexSymbol,\n    });\n    \n    return vertexFeature;\n  }\n  \n  /**\n   * Create insertion vertex features between existing vertices\n   * @param {Array} coordinates - The coordinates to create insertion vertices for\n   * @param {number} [ringIndex] - The ring index for polygon features\n   * @private\n   */\n  _createInsertionVertices(coordinates, ringIndex = 0) {\n    if (coordinates.length < 2) {\n      return;\n    }\n    \n    const insertionVertices = [];\n    \n    // For polygons, we need to include the closing segment\n    const isClosed = this.workingData.targetFeature.type === 'polygon';\n    const segmentCount = isClosed ? coordinates.length : coordinates.length - 1;\n    \n    for (let i = 0; i < segmentCount; i++) {\n      const start = coordinates[i];\n      const end = coordinates[(i + 1) % coordinates.length];\n      \n      // Calculate midpoint\n      const midpoint = this.geometryEngine.interpolate(start, end, 0.5);\n      \n      // Create insertion vertex\n      const insertionVertex = new PointFeature(midpoint, {\n        id: `insertion-${this.workingData.targetFeature.id}-${ringIndex}-${i}`,\n        properties: {\n          type: 'insertionVertex',\n          featureId: this.workingData.targetFeature.id,\n          segmentIndex: i,\n          ringIndex: ringIndex,\n          startVertex: i,\n          endVertex: (i + 1) % coordinates.length,\n          temporary: true,\n        },\n        style: this.options.insertionVertexSymbol,\n      });\n      \n      insertionVertices.push(insertionVertex);\n    }\n    \n    // Add to insertion vertices array\n    this.workingData.insertionVertices = this.workingData.insertionVertices.concat(insertionVertices);\n  }\n  \n  /**\n   * Find a vertex at the specified screen position\n   * @param {Array} screenPosition - The screen position [x, y]\n   * @returns {Object|null} The vertex feature or null if none found\n   * @private\n   */\n  _findVertexAtPosition(screenPosition) {\n    if (!this.workingData.targetFeature || this.workingData.vertices.length === 0) {\n      return null;\n    }\n    \n    // Find the closest vertex\n    let closestVertex = null;\n    let closestDistance = Infinity;\n    \n    for (const vertex of this.workingData.vertices) {\n      try {\n        const vertexScreenPos = this.mapInterface.coordinateToPixel(vertex.getCoordinate());\n        \n        // Check if vertexScreenPos is valid (not undefined or null)\n        if (!vertexScreenPos || vertexScreenPos.length < 2) {\n          console.warn('Invalid screen position for vertex:', vertex.id);\n          continue;\n        }\n        \n        const distance = Math.sqrt(\n          Math.pow(vertexScreenPos[0] - screenPosition[0], 2) +\n          Math.pow(vertexScreenPos[1] - screenPosition[1], 2),\n        );\n        \n        if (distance <= this.options.vertexDistanceTolerance && distance < closestDistance) {\n          closestVertex = vertex;\n          closestDistance = distance;\n        }\n      } catch (error) {\n        console.warn('Error calculating vertex screen position:', error);\n      }\n    }\n    \n    return closestVertex;\n  }\n  \n  /**\n   * Find an insertion vertex at the specified screen position\n   * @param {Array} screenPosition - The screen position [x, y]\n   * @returns {Object|null} The insertion vertex or null if none found\n   * @private\n   */\n  _findInsertionVertexAtPosition(screenPosition) {\n    if (!this.workingData.targetFeature || this.workingData.insertionVertices.length === 0) {\n      return null;\n    }\n    \n    // Find the closest insertion vertex\n    let closestVertex = null;\n    let closestDistance = Infinity;\n    \n    for (const vertex of this.workingData.insertionVertices) {\n      try {\n        const vertexScreenPos = this.mapInterface.coordinateToPixel(vertex.getCoordinate());\n        \n        // Check if vertexScreenPos is valid (not undefined or null)\n        if (!vertexScreenPos || vertexScreenPos.length < 2) {\n          console.warn('Invalid screen position for insertion vertex:', vertex.id);\n          continue;\n        }\n        \n        const distance = Math.sqrt(\n          Math.pow(vertexScreenPos[0] - screenPosition[0], 2) +\n          Math.pow(vertexScreenPos[1] - screenPosition[1], 2),\n        );\n        \n        if (distance <= this.options.vertexDistanceTolerance && distance < closestDistance) {\n          closestVertex = vertex;\n          closestDistance = distance;\n        }\n      } catch (error) {\n        console.warn('Error calculating insertion vertex screen position:', error);\n      }\n    }\n    \n    return closestVertex;\n  }\n  \n  /**\n   * Check if a position is on the target feature\n   * @param {Object} coordinate - The world coordinate\n   * @param {Array} screenPosition - The screen position [x, y]\n   * @returns {boolean} Whether the position is on the feature\n   * @private\n   */\n  _isPositionOnFeature(coordinate, screenPosition) {\n    if (!this.workingData.targetFeature) {\n      return false;\n    }\n    \n    // Different hit test based on feature type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // For points, use the vertex hit test\n      return !!this._findVertexAtPosition(screenPosition);\n        \n    case 'line':\n      // For lines, check if we're close to any segment\n      const lineCoords = this.workingData.targetFeature.getCoordinates();\n        \n      // Need at least two points for a line\n      if (lineCoords.length < 2) {\n        return false;\n      }\n        \n      // Check each segment\n      for (let i = 0; i < lineCoords.length - 1; i++) {\n        const nearestInfo = this.geometryEngine.nearestPointOnSegment(\n          lineCoords[i],\n          lineCoords[i + 1],\n          coordinate,\n        );\n          \n        if (nearestInfo) {\n          try {\n            // Convert nearest point to screen coordinates\n            const nearestScreenPos = this.mapInterface.coordinateToPixel(nearestInfo.point);\n              \n            // Ensure the screen position is valid\n            if (!nearestScreenPos || nearestScreenPos.length < 2) {\n              console.warn('Invalid screen position for nearest point on segment');\n              continue;\n            }\n            \n            // Check distance in screen space\n            const distance = Math.sqrt(\n              Math.pow(nearestScreenPos[0] - screenPosition[0], 2) +\n              Math.pow(nearestScreenPos[1] - screenPosition[1], 2),\n            );\n            \n            if (distance <= this.options.vertexDistanceTolerance) {\n              return true;\n            }\n          } catch (error) {\n            console.warn('Error calculating screen distance for line segment:', error);\n          }\n        }\n      }\n      return false;\n        \n    case 'polygon':\n      // For polygons, check if the point is inside\n      return this.workingData.targetFeature.containsPoint(coordinate);\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Select a feature at the specified position\n   * @param {Object} coordinate - The world coordinate\n   * @param {Array} screenPosition - The screen position [x, y]\n   * @private\n   */\n  _selectFeatureAtPosition(coordinate, screenPosition) {\n    // Find features at this position\n    const features = this.manager.features.getFeaturesAtPosition(coordinate, {\n      tolerance: this.options.vertexDistanceTolerance,\n      screenPosition: screenPosition,\n      mapInterface: this.mapInterface,\n    });\n    \n    // Filter to editable feature types\n    const editableFeatures = features.filter(f => \n      ['point', 'line', 'polygon'].includes(f.type),\n    );\n    \n    if (editableFeatures.length > 0) {\n      // Select the first editable feature\n      this.manager.selectFeature(editableFeatures[0]);\n      this._startEditingFeature(editableFeatures[0]);\n    }\n  }\n  \n  /**\n   * Select a vertex for editing\n   * @param {Object} vertex - The vertex feature to select\n   * @private\n   */\n  _selectVertex(vertex) {\n    // Deselect current vertex if any\n    this._deselectVertex();\n    \n    // Set as selected vertex\n    this.workingData.selectedVertex = vertex;\n    \n    // Update vertex style\n    vertex.setStyle(this.options.selectedVertexSymbol);\n    \n    // Update vertex property\n    vertex.setProperty('isSelected', true);\n    \n    // Emit event\n    this.emit('vertexSelected', {\n      feature: this.workingData.targetFeature,\n      vertexIndex: vertex.getProperty('vertexIndex'),\n    });\n  }\n  \n  /**\n   * Deselect the currently selected vertex\n   * @private\n   */\n  _deselectVertex() {\n    if (!this.workingData.selectedVertex) {\n      return;\n    }\n    \n    // Restore vertex style\n    this.workingData.selectedVertex.setStyle(this.options.vertexSymbol);\n    \n    // Update vertex property\n    this.workingData.selectedVertex.setProperty('isSelected', false);\n    \n    // Emit event\n    this.emit('vertexDeselected', {\n      feature: this.workingData.targetFeature,\n      vertexIndex: this.workingData.selectedVertex.getProperty('vertexIndex'),\n    });\n    \n    // Clear selected vertex\n    this.workingData.selectedVertex = null;\n  }\n  \n  /**\n   * Highlight a vertex on hover\n   * @param {Object} vertex - The vertex to highlight\n   * @private\n   */\n  _highlightVertex(vertex) {\n    // Skip if this is already the selected vertex\n    if (this.workingData.selectedVertex && \n        this.workingData.selectedVertex.id === vertex.id) {\n      return;\n    }\n    \n    // Temporarily adjust style\n    const currentStyle = vertex.getStyle();\n    vertex.setStyle(Object.assign({}, currentStyle, {\n      size: currentStyle.size * 1.2,\n    }));\n    \n    // Reset other vertex styles\n    this.workingData.vertices.forEach(v => {\n      if (v.id !== vertex.id && !v.getProperty('isSelected')) {\n        v.setStyle(this.options.vertexSymbol);\n      }\n    });\n  }\n  \n  /**\n   * Highlight an insertion vertex on hover\n   * @param {Object} vertex - The insertion vertex to highlight\n   * @private\n   */\n  _highlightInsertionVertex(vertex) {\n    // Temporarily adjust style\n    const currentStyle = vertex.getStyle();\n    vertex.setStyle(Object.assign({}, currentStyle, {\n      size: currentStyle.size * 1.5,\n      color: 'rgba(255, 87, 51, 0.5)',\n    }));\n    \n    // Reset other insertion vertex styles\n    this.workingData.insertionVertices.forEach(v => {\n      if (v.id !== vertex.id) {\n        v.setStyle(this.options.insertionVertexSymbol);\n      }\n    });\n  }\n  \n  /**\n   * Add a new vertex at an insertion point\n   * @param {Object} insertionVertex - The insertion vertex\n   * @private\n   */\n  _addVertexAtInsertion(insertionVertex) {\n    if (!this.workingData.targetFeature || !insertionVertex) {\n      return;\n    }\n    \n    const startIndex = insertionVertex.getProperty('startVertex');\n    const endIndex = insertionVertex.getProperty('endVertex');\n    const ringIndex = insertionVertex.getProperty('ringIndex') || 0;\n    const coordinate = insertionVertex.getCoordinate();\n    \n    // Different approach based on feature type\n    switch (this.workingData.targetFeature.type) {\n    case 'line':\n      // For lines, insert between two vertices\n      const lineCoords = this.workingData.targetFeature.getCoordinates();\n        \n      // Insert at proper position\n      lineCoords.splice(endIndex, 0, coordinate);\n        \n      // Update line coordinates\n      this.workingData.targetFeature.setCoordinates(lineCoords);\n      break;\n        \n    case 'polygon':\n      // For polygons, insert in the appropriate ring\n      const rings = this.workingData.targetFeature.getRings();\n        \n      // Make sure ring exists\n      if (ringIndex >= 0 && ringIndex < rings.length) {\n        const ring = rings[ringIndex];\n          \n        // For polygons, the last point is the same as the first,\n        // so we need to handle insertion differently\n        if (endIndex === 0) {\n          // Inserting between last and first point (wrapping around)\n          ring.splice(ring.length - 1, 0, coordinate);\n          // Also update the closing point\n          ring[ring.length - 1] = ring[0];\n        } else {\n          // Normal insertion\n          ring.splice(endIndex, 0, coordinate);\n        }\n          \n        // Update polygon rings\n        this.workingData.targetFeature.setRings(rings);\n      }\n      break;\n    }\n    \n    // Update vertex controls\n    this._updateVertexControls();\n    \n    // Emit event\n    this.emit('vertexAdded', {\n      feature: this.workingData.targetFeature,\n      coordinate: coordinate,\n      beforeIndex: startIndex,\n      afterIndex: endIndex,\n    });\n  }\n  \n  /**\n   * Delete the currently selected vertex\n   * @private\n   */\n  _deleteSelectedVertex() {\n    if (!this.workingData.targetFeature || !this.workingData.selectedVertex) {\n      return;\n    }\n    \n    const vertexIndex = this.workingData.selectedVertex.getProperty('vertexIndex');\n    const ringIndex = this.workingData.selectedVertex.getProperty('ringIndex') || 0;\n    \n    // Different approach based on feature type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // Can't delete the only vertex of a point\n      console.warn('Cannot delete the vertex of a point feature');\n      return;\n        \n    case 'line':\n      // For lines, remove the vertex\n      const lineCoords = this.workingData.targetFeature.getCoordinates();\n        \n      // Ensure we have enough vertices left\n      if (lineCoords.length <= 2) {\n        console.warn('Cannot delete vertex: Line must have at least 2 vertices');\n        return;\n      }\n        \n      // Remove the vertex\n      lineCoords.splice(vertexIndex, 1);\n        \n      // Update line coordinates\n      this.workingData.targetFeature.setCoordinates(lineCoords);\n      break;\n        \n    case 'polygon':\n      // For polygons, remove from the appropriate ring\n      const rings = this.workingData.targetFeature.getRings();\n        \n      // Make sure ring exists\n      if (ringIndex >= 0 && ringIndex < rings.length) {\n        const ring = rings[ringIndex];\n          \n        // Ensure we have enough vertices left\n        if (ring.length <= 4) { // 3 real vertices + closing point\n          console.warn('Cannot delete vertex: Polygon must have at least 3 vertices');\n          return;\n        }\n          \n        // Get the point index within the ring\n        const pointIndex = this.workingData.selectedVertex.getProperty('pointIndex');\n          \n        // Remove the vertex\n        ring.splice(pointIndex, 1);\n          \n        // If we removed the first point, update the closing point\n        if (pointIndex === 0) {\n          ring[ring.length - 1] = ring[0];\n        }\n          \n        // Update polygon rings\n        this.workingData.targetFeature.setRings(rings);\n      }\n      break;\n    }\n    \n    // Clear selected vertex\n    this.workingData.selectedVertex = null;\n    \n    // Update vertex controls\n    this._updateVertexControls();\n    \n    // Emit event\n    this.emit('vertexDeleted', {\n      feature: this.workingData.targetFeature,\n      vertexIndex: vertexIndex,\n    });\n  }\n  \n  /**\n   * Handle drag operations\n   * @param {Object} coordinate - The current mouse coordinate\n   * @param {Array} screenPosition - The current screen position\n   * @private\n   */\n  _handleDrag(coordinate, screenPosition) {\n    if (!this.workingData.isDragging || !this.workingData.dragStartPosition) {\n      return;\n    }\n    \n    // Calculate drag distance in screen pixels\n    const startScreenPos = this.mapInterface.coordinateToPixel(this.workingData.dragStartPosition);\n    const distance = Math.sqrt(\n      Math.pow(startScreenPos[0] - screenPosition[0], 2) +\n      Math.pow(startScreenPos[1] - screenPosition[1], 2),\n    );\n    \n    // Update tracked distance\n    this.workingData.draggedDistance = distance;\n    \n    // Handle based on operation mode\n    switch (this.workingData.operationMode) {\n    case 'moveVertex':\n      this._moveSelectedVertex(coordinate);\n      break;\n        \n    case 'move':\n      this._moveFeature(coordinate);\n      break;\n    }\n  }\n  \n  /**\n   * Move the selected vertex to a new position\n   * @param {Object} coordinate - The new coordinate\n   * @private\n   */\n  _moveSelectedVertex(coordinate) {\n    if (!this.workingData.targetFeature || !this.workingData.selectedVertex) {\n      return;\n    }\n    \n    const vertexIndex = this.workingData.selectedVertex.getProperty('vertexIndex');\n    const ringIndex = this.workingData.selectedVertex.getProperty('ringIndex') || 0;\n    \n    // Update the vertex control position\n    this.workingData.selectedVertex.setCoordinate(coordinate);\n    \n    // Apply 3D elevation data if enabled\n    if (this.options.enable3D && this.options.snapToTerrain) {\n      this.manager.applyElevationData(this.workingData.selectedVertex);\n      \n      // Get the updated coordinate with elevation\n      coordinate = this.workingData.selectedVertex.getCoordinate();\n    }\n    \n    // Update feature geometry based on type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // For points, just update the coordinate\n      this.workingData.targetFeature.setCoordinate(coordinate);\n      break;\n        \n    case 'line':\n      // For lines, update the specific vertex\n      const lineCoords = this.workingData.targetFeature.getCoordinates();\n      lineCoords[vertexIndex] = coordinate;\n      this.workingData.targetFeature.setCoordinates(lineCoords);\n      break;\n        \n    case 'polygon':\n      // For polygons, update in the appropriate ring\n      const rings = this.workingData.targetFeature.getRings();\n        \n      // Make sure ring exists\n      if (ringIndex >= 0 && ringIndex < rings.length) {\n        const ring = rings[ringIndex];\n          \n        // Get the point index within the ring\n        const pointIndex = this.workingData.selectedVertex.getProperty('pointIndex');\n          \n        // Update the vertex\n        ring[pointIndex] = coordinate;\n          \n        // If we updated the first point, also update the closing point\n        if (pointIndex === 0) {\n          ring[ring.length - 1] = coordinate;\n        }\n          \n        // Update polygon rings\n        this.workingData.targetFeature.setRings(rings);\n      }\n      break;\n    }\n    \n    // Update insertion vertices\n    this._updateVertexControls();\n    \n    // Emit event\n    this.emit('vertexMoved', {\n      feature: this.workingData.targetFeature,\n      vertexIndex: vertexIndex,\n      coordinate: coordinate,\n    });\n  }\n  \n  /**\n   * Move the entire feature to a new position\n   * Handles both lat/lng and x/y coordinate formats for compatibility\n   * @param {Object} coordinate - The new coordinate\n   * @returns {void}\n   * @private\n   */\n  _moveFeature(coordinate) {\n    if (!this.workingData.targetFeature || !this.workingData.dragStartPosition) {\n      return;\n    }\n    \n    // Handle different coordinate formats and calculate offset\n    const startLat = this.workingData.dragStartPosition.lat !== undefined ? this.workingData.dragStartPosition.lat : this.workingData.dragStartPosition.y;\n    const startLng = this.workingData.dragStartPosition.lng !== undefined ? this.workingData.dragStartPosition.lng : this.workingData.dragStartPosition.x;\n    const startElevation = this.workingData.dragStartPosition.elevation !== undefined ? this.workingData.dragStartPosition.elevation : \n      (this.workingData.dragStartPosition.z !== undefined ? this.workingData.dragStartPosition.z : 0);\n    \n    const currentLat = coordinate.lat !== undefined ? coordinate.lat : coordinate.y;\n    const currentLng = coordinate.lng !== undefined ? coordinate.lng : coordinate.x;\n    const currentElevation = coordinate.elevation !== undefined ? coordinate.elevation : \n      (coordinate.z !== undefined ? coordinate.z : 0);\n    \n    // Calculate offset using standard lat/lng/elevation properties\n    const offset = {\n      lat: currentLat - startLat,\n      lng: currentLng - startLng,\n      elevation: this.options.enable3D ? currentElevation - startElevation : 0,\n    };\n    \n    // Move the feature based on type\n    switch (this.workingData.targetFeature.type) {\n    case 'point':\n      // For points, just update the coordinate\n      const pointCoord = this.workingData.targetFeature.getCoordinate();\n      const pointLat = pointCoord.lat !== undefined ? pointCoord.lat : pointCoord.y;\n      const pointLng = pointCoord.lng !== undefined ? pointCoord.lng : pointCoord.x;\n      const pointElevation = pointCoord.elevation !== undefined ? pointCoord.elevation : \n        (pointCoord.z !== undefined ? pointCoord.z : 0);\n        \n      const newCoord = {\n        lat: pointLat + offset.lat,\n        lng: pointLng + offset.lng,\n        elevation: pointElevation + offset.elevation,\n      };\n      this.workingData.targetFeature.setCoordinate(newCoord);\n      break;\n        \n    case 'line':\n      // For lines, offset all vertices\n      const lineCoords = this.workingData.targetFeature.getCoordinates();\n      const newLineCoords = lineCoords.map(coord => {\n        const lat = coord.lat !== undefined ? coord.lat : coord.y;\n        const lng = coord.lng !== undefined ? coord.lng : coord.x;\n        const elevation = coord.elevation !== undefined ? coord.elevation : \n          (coord.z !== undefined ? coord.z : 0);\n          \n        return {\n          lat: lat + offset.lat,\n          lng: lng + offset.lng,\n          elevation: elevation + offset.elevation,\n        };\n      });\n      this.workingData.targetFeature.setCoordinates(newLineCoords);\n      break;\n        \n    case 'polygon':\n      // For polygons, offset all rings\n      const rings = this.workingData.targetFeature.getRings();\n      const newRings = rings.map(ring => \n        ring.map(coord => {\n          const lat = coord.lat !== undefined ? coord.lat : coord.y;\n          const lng = coord.lng !== undefined ? coord.lng : coord.x;\n          const elevation = coord.elevation !== undefined ? coord.elevation : \n            (coord.z !== undefined ? coord.z : 0);\n            \n          return {\n            lat: lat + offset.lat,\n            lng: lng + offset.lng,\n            elevation: elevation + offset.elevation,\n          };\n        }),\n      );\n      this.workingData.targetFeature.setRings(newRings);\n      break;\n    }\n    \n    // Update start position for continuous movement\n    this.workingData.dragStartPosition = coordinate;\n    \n    // Update vertex controls\n    this._updateVertexControls();\n    \n    // Emit event\n    this.emit('featureMoved', {\n      feature: this.workingData.targetFeature,\n      offset: offset,\n    });\n  }\n  \n  /**\n   * Cancel the current drag operation\n   * @private\n   */\n  _cancelDrag() {\n    if (!this.workingData.isDragging) {\n      return;\n    }\n    \n    // Reset drag state\n    this.workingData.isDragging = false;\n    this.workingData.dragStartPosition = null;\n    \n    // Reset feature to original state (before drag started)\n    if (this.workingData.originalFeature && this.workingData.targetFeature) {\n      this.workingData.targetFeature.fromGeoJSON(this.workingData.originalFeature.data);\n    }\n    \n    // Update vertex controls\n    this._updateVertexControls();\n    \n    // Emit event\n    this.emit('dragCancelled', {\n      feature: this.workingData.targetFeature,\n    });\n    \n    // Reset operation mode\n    this.workingData.operationMode = 'none';\n  }\n  \n  /**\n   * Complete the editing operation\n   * @private\n   */\n  _completeEditing() {\n    if (!this.workingData.targetFeature) {\n      return;\n    }\n    \n    // Ensure we're not in a drag operation\n    if (this.workingData.isDragging) {\n      this.workingData.isDragging = false;\n      this.workingData.dragStartPosition = null;\n    }\n    \n    // Update feature with final changes\n    this.manager.features.updateFeature(this.workingData.targetFeature);\n    \n    // Restore original style\n    this._restoreOriginalStyle();\n    \n    // Get feature for event\n    const feature = this.workingData.targetFeature;\n    \n    // Mark operation as complete\n    this.workingData.operationComplete = true;\n    \n    // Clear vertex controls and selection\n    this._clearVertexControls();\n    \n    // Clear target feature\n    this.workingData.targetFeature = null;\n    this.workingData.originalFeature = null;\n    this.workingData.selectedVertex = null;\n    this.workingData.operationMode = 'none';\n    \n    // Emit event\n    this.emit('editingCompleted', {\n      feature: feature,\n    });\n  }\n  \n  /**\n   * Cancel the editing operation\n   * @private\n   */\n  _cancelEditing() {\n    if (!this.workingData.targetFeature || !this.workingData.originalFeature) {\n      return;\n    }\n    \n    // Restore feature to original state\n    this.workingData.targetFeature.fromGeoJSON(this.workingData.originalFeature.data);\n    \n    // Restore original style\n    this._restoreOriginalStyle();\n    \n    // Get feature for event\n    const feature = this.workingData.targetFeature;\n    \n    // Clear vertex controls and selection\n    this._clearVertexControls();\n    \n    // Clear target feature\n    this.workingData.targetFeature = null;\n    this.workingData.originalFeature = null;\n    this.workingData.selectedVertex = null;\n    this.workingData.operationMode = 'none';\n    \n    // Emit event\n    this.emit('editingCancelled', {\n      feature: feature,\n    });\n  }\n  \n  /**\n   * Set 3D editing mode\n   * @param {boolean} enable - Whether to enable 3D editing\n   * @returns {boolean} New state of 3D editing mode\n   */\n  setEnable3D(enable) {\n    this.options.enable3D = !!enable;\n    \n    // Update vertex controls if active\n    if (this.workingData.targetFeature) {\n      this._updateVertexControls();\n    }\n    \n    // Emit event\n    this.emit('enable3DChanged', {\n      enable3D: this.options.enable3D,\n    });\n    \n    return this.options.enable3D;\n  }\n  \n  /**\n   * Set vertex addition capability\n   * @param {boolean} allow - Whether to allow adding vertices\n   * @returns {boolean} New state of vertex addition capability\n   */\n  setAllowVertexAddition(allow) {\n    this.options.allowVertexAddition = !!allow;\n    \n    // Update vertex controls if active\n    if (this.workingData.targetFeature) {\n      this._updateVertexControls();\n    }\n    \n    // Emit event\n    this.emit('allowVertexAdditionChanged', {\n      allowVertexAddition: this.options.allowVertexAddition,\n    });\n    \n    return this.options.allowVertexAddition;\n  }\n  \n  /**\n   * Set vertex deletion capability\n   * @param {boolean} allow - Whether to allow deleting vertices\n   * @returns {boolean} New state of vertex deletion capability\n   */\n  setAllowVertexDeletion(allow) {\n    this.options.allowVertexDeletion = !!allow;\n    \n    // Emit event\n    this.emit('allowVertexDeletionChanged', {\n      allowVertexDeletion: this.options.allowVertexDeletion,\n    });\n    \n    return this.options.allowVertexDeletion;\n  }\n  \n  /**\n   * Set snap to terrain capability\n   * @param {boolean} enable - Whether to enable snap to terrain\n   * @returns {boolean} New state of snap to terrain capability\n   */\n  setSnapToTerrain(enable) {\n    this.options.snapToTerrain = !!enable;\n    \n    // Emit event\n    this.emit('snapToTerrainChanged', {\n      snapToTerrain: this.options.snapToTerrain,\n    });\n    \n    return this.options.snapToTerrain;\n  }\n  \n  /**\n   * Get the current editing settings\n   * @returns {Object} Current editing settings\n   */\n  getSettings() {\n    return {\n      enable3D: this.options.enable3D,\n      allowVertexAddition: this.options.allowVertexAddition,\n      allowVertexDeletion: this.options.allowVertexDeletion,\n      snapToTerrain: this.options.snapToTerrain,\n      vertexDistanceTolerance: this.options.vertexDistanceTolerance,\n    };\n  }\n}","/**\n * SnappingManager.js\n * Manager for snapping functionality between features\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { EventEmitter } from '../core/event-emitter.js';\nimport { PointFeature } from '../features/PointFeature.js';\n\n/**\n * @typedef {Object} SnappingManagerOptions\n * @property {Object} manager - The survey manager instance\n * @property {Object} mapInterface - The map interface instance\n * @property {number} [tolerance=10] - Snap tolerance in pixels\n * @property {boolean} [enable3D=true] - Whether to enable 3D snapping\n * @property {boolean} [snapToVertex=true] - Whether to snap to vertices\n * @property {boolean} [snapToEdge=true] - Whether to snap to edges\n * @property {boolean} [snapToGrid=false] - Whether to snap to grid\n * @property {number} [gridSize=10] - Grid size in meters\n * @property {Object} [vertexSnapSymbol] - Symbol for vertex snap indicators\n * @property {Object} [edgeSnapSymbol] - Symbol for edge snap indicators\n * @property {Object} [gridSnapSymbol] - Symbol for grid snap indicators\n */\n\n/**\n * Manager for snapping functionality between features\n * Provides advanced snapping capabilities for survey tools\n */\nexport class SnappingManager extends EventEmitter {\n  /**\n   * Create a new SnappingManager instance\n   * @param {SnappingManagerOptions} options - Configuration options\n   */\n  constructor(options = {}) {\n    super();\n    \n    if (!options.manager) {\n      throw new Error('Manager instance is required for snapping manager initialization');\n    }\n    \n    if (!options.mapInterface) {\n      throw new Error('Map interface is required for snapping manager initialization');\n    }\n    \n    // Store references\n    this.manager = options.manager;\n    this.mapInterface = options.mapInterface;\n    this.geometryEngine = options.geometryEngine || this.manager.geometryEngine;\n    \n    // Initialize options with defaults\n    this.options = Object.assign({\n      tolerance: 10, // pixels\n      enable3D: true,\n      snapToVertex: true,\n      snapToEdge: true,\n      snapToGrid: false,\n      gridSize: 10, // meters\n      highlightSnap: true,\n      includeTemporaryFeatures: true,\n      vertexSnapSymbol: {\n        type: 'circle',\n        size: 12,\n        color: 'rgba(255, 87, 51, 0.6)',\n        outlineWidth: 2,\n        outlineColor: '#FF5733',\n      },\n      edgeSnapSymbol: {\n        type: 'circle',\n        size: 10,\n        color: 'rgba(51, 136, 255, 0.6)',\n        outlineWidth: 1,\n        outlineColor: '#3388FF',\n      },\n      gridSnapSymbol: {\n        type: 'circle',\n        size: 8,\n        color: 'rgba(0, 200, 0, 0.5)',\n        outlineWidth: 1,\n        outlineColor: '#00C800',\n      },\n    }, options);\n    \n    // Initialize state\n    this.state = {\n      isActive: false,\n      currentSnap: null,\n      snapIndicator: null,\n      snapSourceFeature: null,\n      snapTargets: [],\n      lastMousePosition: null,\n    };\n    \n    // Bind event handlers\n    this._handleMapMouseMove = this._handleMapMouseMove.bind(this);\n  }\n  \n  /**\n   * Activate the snapping manager\n   * @param {Object} [options] - Activation options\n   */\n  activate(options = {}) {\n    if (this.state.isActive) {\n      return;\n    }\n    \n    // Update options if provided\n    if (options) {\n      this.options = Object.assign(this.options, options);\n    }\n    \n    // Add map event listeners\n    this.mapInterface.addEventListener('mousemove', this._handleMapMouseMove);\n    \n    // Mark as active\n    this.state.isActive = true;\n    \n    // Emit activation event\n    this.emit('activated', this.options);\n  }\n  \n  /**\n   * Deactivate the snapping manager\n   */\n  deactivate() {\n    if (!this.state.isActive) {\n      return;\n    }\n    \n    // Remove map event listeners\n    this.mapInterface.removeEventListener('mousemove', this._handleMapMouseMove);\n    \n    // Clear any active snap\n    this._clearSnap();\n    \n    // Mark as inactive\n    this.state.isActive = false;\n    \n    // Emit deactivation event\n    this.emit('deactivated');\n  }\n  \n  /**\n   * Set snap targets to constrain snapping to specific features\n   * @param {Array|Object} targets - Feature or array of features to snap to\n   */\n  setSnapTargets(targets) {\n    // Convert single feature to array\n    const targetArray = Array.isArray(targets) ? targets : [targets];\n    \n    // Store targets\n    this.state.snapTargets = targetArray;\n    \n    // Emit event\n    this.emit('snapTargetsChanged', targetArray);\n  }\n  \n  /**\n   * Clear snap targets to allow snapping to any feature\n   */\n  clearSnapTargets() {\n    this.state.snapTargets = [];\n    \n    // Emit event\n    this.emit('snapTargetsCleared');\n  }\n  \n  /**\n   * Set the snap source feature to avoid self-snapping\n   * @param {Object} feature - The feature to exclude from snap sources\n   */\n  setSnapSourceFeature(feature) {\n    this.state.snapSourceFeature = feature;\n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - The map mousemove event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    // Make sure we have valid coordinate and pixel data\n    if (!event.coordinate || !event.pixel) {\n      return;\n    }\n    \n    // Store current mouse position\n    this.state.lastMousePosition = {\n      coordinate: event.coordinate,\n      pixel: event.pixel,\n    };\n    \n    // Find snap point\n    const snap = this._findSnapPoint(event.coordinate, event.pixel);\n    \n    // Clear current snap if none found\n    if (!snap) {\n      this._clearSnap();\n      return;\n    }\n    \n    // Update current snap\n    this._updateSnap(snap);\n  }\n  \n  /**\n   * Find a snap point based on current snap settings\n   * @param {Object} coordinate - The world coordinate\n   * @param {Array} pixel - The screen pixel position\n   * @returns {Object|null} Snap information or null if no snap found\n   * @private\n   */\n  _findSnapPoint(coordinate, pixel) {\n    // Skip if not active\n    if (!this.state.isActive) {\n      return null;\n    }\n    \n    // Try snapping in priority order\n    let snap = null;\n    \n    // 1. Try vertex snapping\n    if (this.options.snapToVertex) {\n      snap = this._findVertexSnap(coordinate, pixel);\n      if (snap) return snap;\n    }\n    \n    // 2. Try edge snapping\n    if (this.options.snapToEdge) {\n      snap = this._findEdgeSnap(coordinate, pixel);\n      if (snap) return snap;\n    }\n    \n    // 3. Try grid snapping\n    if (this.options.snapToGrid) {\n      snap = this._findGridSnap(coordinate);\n      if (snap) return snap;\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Find vertex snap point\n   * @param {Object} coordinate - The world coordinate\n   * @param {Array} pixel - The screen pixel position\n   * @returns {Object|null} Vertex snap information or null\n   * @private\n   */\n  _findVertexSnap(coordinate, pixel) {\n    const features = this._getSnapFeatures();\n    let bestDistance = Infinity;\n    let bestSnap = null;\n    \n    // Check each feature for vertices\n    for (const feature of features) {\n      // Skip source feature to avoid self-snapping\n      if (this.state.snapSourceFeature && \n          feature.id === this.state.snapSourceFeature.id) {\n        continue;\n      }\n      \n      // Get vertices based on feature type\n      let vertices = [];\n      \n      switch (feature.type) {\n      case 'point':\n        vertices = [feature.getCoordinate()];\n        break;\n          \n      case 'line':\n        vertices = feature.getCoordinates();\n        break;\n          \n      case 'polygon':\n        // Get all vertices from all rings\n        const rings = feature.getRings();\n        rings.forEach(ring => {\n          vertices = vertices.concat(ring);\n        });\n        break;\n          \n      default:\n        continue; // Skip unsupported types\n      }\n      \n      // Check each vertex\n      for (const vertex of vertices) {\n        // Convert vertex to screen coordinates\n        const vertexPixel = this.mapInterface.coordinateToPixel(vertex);\n        \n        // Make sure we have valid pixel coordinates\n        if (!vertexPixel || !Array.isArray(vertexPixel) || vertexPixel.length < 2 || \n            !pixel || !Array.isArray(pixel) || pixel.length < 2) {\n          continue; // Skip this vertex if we don't have valid coordinates\n        }\n        \n        // Calculate screen distance\n        const distance = Math.sqrt(\n          Math.pow(vertexPixel[0] - pixel[0], 2) +\n          Math.pow(vertexPixel[1] - pixel[1], 2),\n        );\n        \n        // Check if within tolerance and closer than current best\n        if (distance <= this.options.tolerance && distance < bestDistance) {\n          bestDistance = distance;\n          bestSnap = {\n            type: 'vertex',\n            feature: feature,\n            coordinate: vertex,\n            distance: distance,\n            isSnapped: true,\n          };\n        }\n      }\n    }\n    \n    return bestSnap;\n  }\n  \n  /**\n   * Find edge snap point\n   * @param {Object} coordinate - The world coordinate\n   * @param {Array} pixel - The screen pixel position\n   * @returns {Object|null} Edge snap information or null\n   * @private\n   */\n  _findEdgeSnap(coordinate, pixel) {\n    const features = this._getSnapFeatures();\n    let bestDistance = Infinity;\n    let bestSnap = null;\n    \n    // Check each feature for edges\n    for (const feature of features) {\n      // Skip source feature to avoid self-snapping\n      if (this.state.snapSourceFeature && \n          feature.id === this.state.snapSourceFeature.id) {\n        continue;\n      }\n      \n      // Skip point features (no edges)\n      if (feature.type === 'point') {\n        continue;\n      }\n      \n      // Get segments based on feature type\n      const segments = [];\n      \n      switch (feature.type) {\n      case 'line':\n        const coords = feature.getCoordinates();\n          \n        // Create segments from adjacent coordinates\n        for (let i = 0; i < coords.length - 1; i++) {\n          segments.push({\n            start: coords[i],\n            end: coords[i + 1],\n            feature: feature,\n          });\n        }\n        break;\n          \n      case 'polygon':\n        // Get segments from all rings\n        const rings = feature.getRings();\n        rings.forEach(ring => {\n          for (let i = 0; i < ring.length - 1; i++) {\n            segments.push({\n              start: ring[i],\n              end: ring[i + 1],\n              feature: feature,\n            });\n          }\n        });\n        break;\n          \n      default:\n        continue; // Skip unsupported types\n      }\n      \n      // Check each segment\n      for (const segment of segments) {\n        // Find nearest point on segment\n        const nearestInfo = this.geometryEngine.nearestPointOnSegment(\n          segment.start,\n          segment.end,\n          coordinate,\n        );\n        \n        if (nearestInfo) {\n          // Convert nearest point to screen coordinates\n          const nearestPixel = this.mapInterface.coordinateToPixel(nearestInfo.point);\n          \n          // Calculate screen distance\n          const distance = Math.sqrt(\n            Math.pow(nearestPixel[0] - pixel[0], 2) +\n            Math.pow(nearestPixel[1] - pixel[1], 2),\n          );\n          \n          // Check if within tolerance and closer than current best\n          if (distance <= this.options.tolerance && distance < bestDistance) {\n            bestDistance = distance;\n            bestSnap = {\n              type: 'edge',\n              feature: segment.feature,\n              coordinate: nearestInfo.point,\n              segmentStart: segment.start,\n              segmentEnd: segment.end,\n              segmentPosition: nearestInfo.segmentPosition,\n              distance: distance,\n              isSnapped: true,\n            };\n          }\n        }\n      }\n    }\n    \n    return bestSnap;\n  }\n  \n  /**\n   * Find grid snap point\n   * @param {Object} coordinate - The world coordinate\n   * @returns {Object|null} Grid snap information or null\n   * @private\n   */\n  _findGridSnap(coordinate) {\n    // Skip if grid snapping is disabled\n    if (!this.options.snapToGrid) {\n      return null;\n    }\n    \n    // Calculate grid cell\n    const gridSize = this.options.gridSize;\n    \n    // Handle different coordinate formats\n    // Check if coordinate uses x,y,z or lat,lng,elevation\n    const lat = coordinate.lat !== undefined ? coordinate.lat : coordinate.y;\n    const lng = coordinate.lng !== undefined ? coordinate.lng : coordinate.x;\n    const elevation = coordinate.elevation !== undefined ? coordinate.elevation : \n      (coordinate.z !== undefined ? coordinate.z : 0);\n    \n    if (lat === undefined || lng === undefined) {\n      console.error('Invalid coordinate format for grid snapping:', coordinate);\n      return null;\n    }\n    \n    // Convert grid size from meters to degrees (simplified approximation)\n    // This is a rough conversion factor that will vary by location\n    const metersToDegreesLat = 1 / 111000; // Approximate conversion at equator\n    const metersToDegreesLng = 1 / (111000 * Math.cos(lat * Math.PI / 180));\n    \n    const gridSizeLat = gridSize * metersToDegreesLat;\n    const gridSizeLng = gridSize * metersToDegreesLng;\n    \n    // Round to nearest grid point\n    const snappedLat = Math.round(lat / gridSizeLat) * gridSizeLat;\n    const snappedLng = Math.round(lng / gridSizeLng) * gridSizeLng;\n    \n    // Create snapped coordinate (standard lat/lng/elevation format)\n    const snappedCoordinate = {\n      lat: snappedLat,\n      lng: snappedLng,\n      elevation: elevation,\n    };\n    \n    // Return snap info\n    return {\n      type: 'grid',\n      coordinate: snappedCoordinate,\n      gridSize: gridSize,\n      isSnapped: true,\n    };\n  }\n  \n  /**\n   * Get all features that can be snapped to\n   * @returns {Array} Array of features\n   * @private\n   */\n  _getSnapFeatures() {\n    // If specific snap targets are set, use those\n    if (this.state.snapTargets.length > 0) {\n      return this.state.snapTargets;\n    }\n    \n    // Otherwise get all features from the manager\n    const features = this.manager.features.getAllFeatures();\n    \n    // Include temporary features if configured\n    if (this.options.includeTemporaryFeatures) {\n      const workingFeatures = this.manager.workingFeatures.getAllFeatures();\n      \n      // Filter out snap indicators and temporary controls\n      const validWorkingFeatures = workingFeatures.filter(f => {\n        const type = f.getProperty('type');\n        return !(type === 'vertex' || \n                type === 'insertionVertex' || \n                type === 'snap-indicator');\n      });\n      \n      return features.concat(validWorkingFeatures);\n    }\n    \n    return features;\n  }\n  \n  /**\n   * Update the current snap\n   * @param {Object} snap - Snap information\n   * @private\n   */\n  _updateSnap(snap) {\n    // Clear current snap\n    this._clearSnap();\n    \n    // Store new snap\n    this.state.currentSnap = snap;\n    \n    // Create snap indicator if highlighting is enabled\n    if (this.options.highlightSnap) {\n      this._createSnapIndicator(snap);\n    }\n    \n    // Emit snap event\n    this.emit('snap', snap);\n  }\n  \n  /**\n   * Clear current snap\n   * @private\n   */\n  _clearSnap() {\n    // Remove snap indicator if exists\n    if (this.state.snapIndicator) {\n      this.manager.workingFeatures.removeFeature(this.state.snapIndicator);\n      this.state.snapIndicator = null;\n    }\n    \n    // Clear current snap\n    if (this.state.currentSnap) {\n      const wasSnapped = this.state.currentSnap.isSnapped;\n      this.state.currentSnap = null;\n      \n      // Emit unsnap event if we were snapped\n      if (wasSnapped) {\n        this.emit('unsnap');\n      }\n    }\n  }\n  \n  /**\n   * Create visual indicator for the snap point\n   * @param {Object} snap - Snap information\n   * @private\n   */\n  _createSnapIndicator(snap) {\n    // Determine symbol based on snap type\n    let symbol;\n    \n    switch (snap.type) {\n    case 'vertex':\n      symbol = this.options.vertexSnapSymbol;\n      break;\n        \n    case 'edge':\n      symbol = this.options.edgeSnapSymbol;\n      break;\n        \n    case 'grid':\n      symbol = this.options.gridSnapSymbol;\n      break;\n        \n    default:\n      symbol = this.options.vertexSnapSymbol;\n    }\n    \n    // Create indicator feature\n    const indicator = new PointFeature(snap.coordinate, {\n      id: `snap-indicator-${Date.now()}`,\n      properties: {\n        type: 'snap-indicator',\n        snapType: snap.type,\n        temporary: true,\n      },\n      style: symbol,\n    });\n    \n    // Add to working features\n    this.manager.workingFeatures.addFeature(indicator);\n    \n    // Store reference\n    this.state.snapIndicator = indicator;\n  }\n  \n  /**\n   * Get the current snap point if any\n   * @returns {Object|null} Current snap or null\n   */\n  getSnapPoint() {\n    return this.state.currentSnap;\n  }\n  \n  /**\n   * Force snap point calculation at a specific coordinate\n   * @param {Object} coordinate - The coordinate to snap from\n   * @param {Array} [pixel] - Optional screen position for pixel-based calculations\n   * @returns {Object|null} Snap result or null\n   */\n  snapPointAt(coordinate, pixel) {\n    // If pixel not provided, convert coordinate to pixel\n    if (!pixel && this.mapInterface) {\n      pixel = this.mapInterface.coordinateToPixel(coordinate);\n    }\n    \n    // Find snap\n    return this._findSnapPoint(coordinate, pixel);\n  }\n  \n  /**\n   * Enable or disable vertex snapping\n   * @param {boolean} enable - Whether to enable vertex snapping\n   * @returns {boolean} New state\n   */\n  setSnapToVertex(enable) {\n    this.options.snapToVertex = !!enable;\n    \n    // Emit event\n    this.emit('snapSettingsChanged', {\n      snapToVertex: this.options.snapToVertex,\n    });\n    \n    return this.options.snapToVertex;\n  }\n  \n  /**\n   * Enable or disable edge snapping\n   * @param {boolean} enable - Whether to enable edge snapping\n   * @returns {boolean} New state\n   */\n  setSnapToEdge(enable) {\n    this.options.snapToEdge = !!enable;\n    \n    // Emit event\n    this.emit('snapSettingsChanged', {\n      snapToEdge: this.options.snapToEdge,\n    });\n    \n    return this.options.snapToEdge;\n  }\n  \n  /**\n   * Enable or disable grid snapping\n   * @param {boolean} enable - Whether to enable grid snapping\n   * @returns {boolean} New state\n   */\n  setSnapToGrid(enable) {\n    this.options.snapToGrid = !!enable;\n    \n    // Emit event\n    this.emit('snapSettingsChanged', {\n      snapToGrid: this.options.snapToGrid,\n    });\n    \n    return this.options.snapToGrid;\n  }\n  \n  /**\n   * Set grid size for grid snapping\n   * @param {number} size - Grid size in meters\n   * @returns {number} New grid size\n   */\n  setGridSize(size) {\n    if (isNaN(size) || size <= 0) {\n      console.error('Invalid grid size. Must be a positive number.');\n      return this.options.gridSize;\n    }\n    \n    this.options.gridSize = size;\n    \n    // Emit event\n    this.emit('snapSettingsChanged', {\n      gridSize: this.options.gridSize,\n    });\n    \n    return this.options.gridSize;\n  }\n  \n  /**\n   * Set snap tolerance\n   * @param {number} tolerance - Snap tolerance in pixels\n   * @returns {number} New tolerance\n   */\n  setTolerance(tolerance) {\n    if (isNaN(tolerance) || tolerance <= 0) {\n      console.error('Invalid tolerance. Must be a positive number.');\n      return this.options.tolerance;\n    }\n    \n    this.options.tolerance = tolerance;\n    \n    // Emit event\n    this.emit('snapSettingsChanged', {\n      tolerance: this.options.tolerance,\n    });\n    \n    return this.options.tolerance;\n  }\n  \n  /**\n   * Get current snapping settings\n   * @returns {Object} Current settings\n   */\n  getSettings() {\n    return {\n      isActive: this.state.isActive,\n      tolerance: this.options.tolerance,\n      enable3D: this.options.enable3D,\n      snapToVertex: this.options.snapToVertex,\n      snapToEdge: this.options.snapToEdge,\n      snapToGrid: this.options.snapToGrid,\n      gridSize: this.options.gridSize,\n      highlightSnap: this.options.highlightSnap,\n      includeTemporaryFeatures: this.options.includeTemporaryFeatures,\n    };\n  }\n  \n  /**\n   * Destroy the snapping manager and clean up resources\n   */\n  destroy() {\n    // Deactivate if active\n    if (this.state.isActive) {\n      this.deactivate();\n    }\n    \n    // Clear snap targets\n    this.state.snapTargets = [];\n    \n    // Remove all event listeners\n    this.removeAllListeners();\n  }\n}","/**\n * SurveyManager.js\n * Central manager for all survey operations and tools\n * Part of the RTK Surveyor 3D-first implementation\n */\n\nimport { EventEmitter } from '../core/event-emitter.js';\nimport { FeatureCollection } from '../features/FeatureCollection.js';\nimport { GeometryEngine } from '../core/GeometryEngine.js';\n\n// Import all survey tools\nimport { MeasurementTool } from './MeasurementTool.js';\nimport { OffsetTool } from './OffsetTool.js';\nimport { DrawingTool } from './DrawingTool.js';\nimport { EditingTool } from './EditingTool.js';\nimport { SnappingManager } from './SnappingManager.js';\n\n/**\n * @typedef {Object} SurveyManagerOptions\n * @property {Object} mapInterface - The map interface instance\n * @property {Object} [settings] - Optional settings for the survey manager\n * @property {boolean} [settings.enable3D=true] - Whether to enable 3D support\n * @property {boolean} [settings.autoSave=false] - Whether to auto-save survey data\n * @property {number} [settings.undoLevels=20] - Number of undo levels to maintain\n * @property {string} [settings.elevationProvider='mapInterface'] - Elevation data source\n */\n\n/**\n * SurveyManager class\n * Responsible for managing all survey operations, tools, and data\n */\nexport class SurveyManager extends EventEmitter {\n  /**\n   * Create a new SurveyManager instance\n   * @param {SurveyManagerOptions} options - Configuration options\n   */\n  constructor(options = {}) {\n    super();\n    \n    // Store references and initialize properties\n    this.mapInterface = options.mapInterface;\n    this.settings = Object.assign({\n      enable3D: true,\n      autoSave: false,\n      undoLevels: 20,\n      elevationProvider: 'mapInterface',\n      snapTolerance: 10, // pixels\n      defaultPointSymbol: {\n        type: 'circle',\n        size: 10,\n        color: '#FF5733',\n      },\n      defaultLineSymbol: {\n        width: 3,\n        color: '#3388FF',\n      },\n      defaultPolygonSymbol: {\n        fillColor: 'rgba(51, 136, 255, 0.2)',\n        outlineColor: '#3388FF',\n        outlineWidth: 2,\n      },\n    }, options.settings || {});\n    \n    // Initialize feature collections\n    this.features = new FeatureCollection();\n    this.workingFeatures = new FeatureCollection(); // Temporary/working features\n    this.selectedFeatures = new FeatureCollection();\n    \n    // Initialize geometry engine\n    this.geometryEngine = new GeometryEngine();\n    \n    // Create operation history stack for undo/redo\n    this.history = {\n      undoStack: [],\n      redoStack: [],\n      maxSize: this.settings.undoLevels,\n    };\n    \n    // Initialize state trackers\n    this.activeTool = null;\n    this.activeMode = 'select';\n    this.isDrawing = false;\n    this.isEditing = false;\n    this.isMeasuring = false;\n    \n    // Initialize survey metadata\n    this.metadata = {\n      projectName: '',\n      created: new Date(),\n      modified: new Date(),\n      owner: '',\n      description: '',\n      projection: 'EPSG:4326',\n      units: {\n        distance: 'meters',\n        area: 'square-meters',\n        angle: 'degrees',\n      },\n      customProperties: {},\n    };\n    \n    // Initialize internal callback bindings\n    this._setupEventListeners();\n    \n    // Initialize tools\n    this._initializeTools();\n  }\n  \n  /**\n   * Initialize all survey tools\n   * @private\n   */\n  _initializeTools() {\n    // Initialize all tools\n    this.tools = {\n      measurement: new MeasurementTool({ \n        manager: this,\n        mapInterface: this.mapInterface,\n      }),\n      offset: new OffsetTool({\n        manager: this,\n        mapInterface: this.mapInterface,\n        geometryEngine: this.geometryEngine,\n      }),\n      drawing: new DrawingTool({\n        manager: this,\n        mapInterface: this.mapInterface,\n      }),\n      editing: new EditingTool({\n        manager: this,\n        mapInterface: this.mapInterface,\n      }),\n    };\n    \n    // Initialize the snapping manager\n    this.snappingManager = new SnappingManager({\n      manager: this,\n      tolerance: this.settings.snapTolerance,\n      mapInterface: this.mapInterface,\n      geometryEngine: this.geometryEngine,\n    });\n    \n    // Activate snapping by default\n    this.snappingManager.activate();\n    \n    // Emit event for tools initialized\n    this.emit('tools-initialized', {\n      tools: Object.keys(this.tools),\n      snappingActive: true,\n    });\n  }\n  \n  /**\n   * Set up internal event listeners\n   * @private\n   */\n  _setupEventListeners() {\n    // Listen for changes to feature collections\n    this.features.on('feature-added', ({ feature }) => {\n      this._recordHistoryAction({\n        type: 'feature-added',\n        featureId: feature.id,\n        featureData: feature.toGeoJSON(),\n      });\n      this.emit('feature-added', { feature });\n      this.metadata.modified = new Date();\n    });\n    \n    this.features.on('feature-removed', ({ feature }) => {\n      this._recordHistoryAction({\n        type: 'feature-removed',\n        featureId: feature.id,\n        featureData: feature.toGeoJSON(),\n      });\n      this.emit('feature-removed', { feature });\n      this.metadata.modified = new Date();\n    });\n    \n    this.features.on('feature-updated', ({ feature }) => {\n      this._recordHistoryAction({\n        type: 'feature-updated',\n        featureId: feature.id,\n        featureData: feature.toGeoJSON(),\n        previousData: this._lastFeatureState[feature.id],\n      });\n      this.emit('feature-updated', { feature });\n      this.metadata.modified = new Date();\n    });\n    \n    // Track feature state for history\n    this._lastFeatureState = {};\n    this.features.on('feature-geometry-changed', ({ feature }) => {\n      this._lastFeatureState[feature.id] = feature.toGeoJSON();\n    });\n  }\n  \n  /**\n   * Activate a specific survey tool\n   * @param {string} toolName - The name of the tool to activate\n   * @param {Object} [options] - Optional settings for tool activation\n   * @returns {boolean} Success of tool activation\n   */\n  activateTool(toolName, options = {}) {\n    // Deactivate current tool if one is active\n    if (this.activeTool) {\n      this.tools[this.activeTool].deactivate();\n    }\n    \n    // Check if requested tool exists\n    if (!this.tools[toolName]) {\n      console.error(`Tool '${toolName}' not found`);\n      return false;\n    }\n    \n    // Activate the new tool\n    try {\n      this.tools[toolName].activate(options);\n      this.activeTool = toolName;\n      this.activeMode = toolName;\n      \n      // Update state flags based on tool type\n      this.isDrawing = toolName === 'drawing';\n      this.isEditing = toolName === 'editing';\n      this.isMeasuring = toolName === 'measurement';\n      \n      // Emit event for tool activation\n      this.emit('tool-activated', { \n        tool: toolName, \n        options, \n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`Failed to activate tool '${toolName}':`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * Deactivate the current active tool\n   * @returns {boolean} Success of deactivation\n   */\n  deactivateActiveTool() {\n    if (!this.activeTool) {\n      return true; // No tool active, nothing to do\n    }\n    \n    try {\n      this.tools[this.activeTool].deactivate();\n      \n      // Reset state flags\n      this.activeTool = null;\n      this.activeMode = 'select';\n      this.isDrawing = false;\n      this.isEditing = false;\n      this.isMeasuring = false;\n      \n      // Emit event for tool deactivation\n      this.emit('tool-deactivated');\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to deactivate tool:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Record an action in the history stack for undo/redo\n   * @param {Object} action - The action to record\n   * @private\n   */\n  _recordHistoryAction(action) {\n    // Add timestamp to action\n    action.timestamp = Date.now();\n    \n    // Add to undo stack\n    this.history.undoStack.push(action);\n    \n    // Clear redo stack when a new action is performed\n    this.history.redoStack = [];\n    \n    // Trim undo stack if it exceeds max size\n    if (this.history.undoStack.length > this.history.maxSize) {\n      this.history.undoStack.shift();\n    }\n    \n    // Emit history change event\n    this.emit('historyChanged', {\n      canUndo: this.history.undoStack.length > 0,\n      canRedo: this.history.redoStack.length > 0,\n    });\n  }\n  \n  /**\n   * Undo the last operation\n   * @returns {boolean} Success of undo operation\n   */\n  undo() {\n    if (this.history.undoStack.length === 0) {\n      return false;\n    }\n    \n    // Get the last action\n    const action = this.history.undoStack.pop();\n    \n    // Add to redo stack\n    this.history.redoStack.push(action);\n    \n    // Perform the undo based on action type\n    try {\n      switch (action.type) {\n      case 'featureAdded':\n        this.features.removeFeature(action.featureId);\n        break;\n      case 'featureRemoved':\n        this.features.fromGeoJSON(action.featureData);\n        break;\n      case 'featureUpdated':\n        if (action.previousData) {\n          const feature = this.features.getFeature(action.featureId);\n          if (feature) {\n            feature.fromGeoJSON(action.previousData, { silent: true });\n            this.features.updateFeature(feature, { silent: true });\n          }\n        }\n        break;\n        // Add more action types as needed\n      default:\n        console.warn(`Unknown action type for undo: ${action.type}`);\n      }\n      \n      // Emit events\n      this.emit('undo-performed', action);\n      this.emit('history-changed', {\n        canUndo: this.history.undoStack.length > 0,\n        canRedo: this.history.redoStack.length > 0,\n      });\n      \n      this.metadata.modified = new Date();\n      return true;\n    } catch (error) {\n      // Restore action to undo stack in case of error\n      this.history.undoStack.push(this.history.redoStack.pop());\n      console.error('Error during undo operation:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Redo the last undone operation\n   * @returns {boolean} Success of redo operation\n   */\n  redo() {\n    if (this.history.redoStack.length === 0) {\n      return false;\n    }\n    \n    // Get the last undone action\n    const action = this.history.redoStack.pop();\n    \n    // Add back to undo stack\n    this.history.undoStack.push(action);\n    \n    // Perform the redo based on action type\n    try {\n      switch (action.type) {\n      case 'featureAdded':\n        this.features.fromGeoJSON(action.featureData);\n        break;\n      case 'featureRemoved':\n        this.features.removeFeature(action.featureId);\n        break;\n      case 'featureUpdated':\n        const feature = this.features.getFeature(action.featureId);\n        if (feature) {\n          feature.fromGeoJSON(action.featureData, { silent: true });\n          this.features.updateFeature(feature, { silent: true });\n        }\n        break;\n        // Add more action types as needed\n      default:\n        console.warn(`Unknown action type for redo: ${action.type}`);\n      }\n      \n      // Emit events\n      this.emit('redo-performed', action);\n      this.emit('history-changed', {\n        canUndo: this.history.undoStack.length > 0,\n        canRedo: this.history.redoStack.length > 0,\n      });\n      \n      this.metadata.modified = new Date();\n      return true;\n    } catch (error) {\n      // Restore action to redo stack in case of error\n      this.history.redoStack.push(this.history.undoStack.pop());\n      console.error('Error during redo operation:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Save the current survey state\n   * @param {Object} [options] - Save options\n   * @returns {Object} Survey data object\n   */\n  saveState(_options = {}) {\n    const surveyData = {\n      metadata: { ...this.metadata },\n      features: this.features.toGeoJSON(),\n      settings: { ...this.settings },\n    };\n    \n    // Auto-update modified timestamp\n    surveyData.metadata.modified = new Date();\n    \n    // Emit save event\n    this.emit('survey-saved', surveyData);\n    \n    return surveyData;\n  }\n  \n  /**\n   * Load survey state from saved data\n   * @param {Object} surveyData - Survey data to load\n   * @param {Object} [options] - Load options\n   * @returns {boolean} Success of load operation\n   */\n  loadState(surveyData, _options = {}) {\n    if (!surveyData || !surveyData.features) {\n      console.error('Invalid survey data format');\n      return false;\n    }\n    \n    try {\n      // Clear current state\n      this.features.clear();\n      this.workingFeatures.clear();\n      this.selectedFeatures.clear();\n      \n      // Load metadata\n      if (surveyData.metadata) {\n        this.metadata = { ...surveyData.metadata };\n        \n        // Ensure date objects are restored from serialized format\n        this.metadata.created = new Date(this.metadata.created);\n        this.metadata.modified = new Date(this.metadata.modified);\n      }\n      \n      // Load settings\n      if (surveyData.settings) {\n        this.settings = Object.assign(this.settings, surveyData.settings);\n      }\n      \n      // Load features\n      this.features.fromGeoJSON(surveyData.features);\n      \n      // Reset history\n      this.history.undoStack = [];\n      this.history.redoStack = [];\n      \n      // Emit load event\n      this.emit('survey-loaded', surveyData);\n      \n      return true;\n    } catch (error) {\n      console.error('Error loading survey data:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Get currently selected features\n   * @returns {Array} Array of selected features\n   */\n  getSelectedFeatures() {\n    return this.selectedFeatures.getAllFeatures();\n  }\n  \n  /**\n   * Select a feature\n   * @param {Feature|string} feature - Feature or feature ID to select\n   * @param {Object} [options] - Selection options\n   * @param {boolean} [options.toggle=false] - Whether to toggle selection state\n   * @param {boolean} [options.addToSelection=false] - Whether to add to existing selection\n   * @returns {boolean} Success of selection operation\n   */\n  selectFeature(feature, options = {}) {\n    const featureObj = typeof feature === 'string' \n      ? this.features.getFeature(feature)\n      : feature;\n      \n    if (!featureObj) {\n      return false;\n    }\n    \n    // Check if feature is already selected\n    const isSelected = this.selectedFeatures.hasFeature(featureObj.id);\n    \n    // Handle toggle mode\n    if (options.toggle && isSelected) {\n      return this.deselectFeature(featureObj);\n    }\n    \n    // Clear existing selection if not adding to it\n    if (!options.addToSelection) {\n      this.clearSelection();\n    }\n    \n    // Don't reselect already selected features\n    if (isSelected) {\n      return true;\n    }\n    \n    // Add to selected collection\n    this.selectedFeatures.addFeature(featureObj);\n    \n    // Update feature selection state\n    featureObj.select();\n    \n    // Emit selection event\n    this.emit('feature-selected', { feature: featureObj });\n    \n    return true;\n  }\n  \n  /**\n   * Deselect a feature\n   * @param {Feature|string} feature - Feature or feature ID to deselect\n   * @returns {boolean} Success of deselection operation\n   */\n  deselectFeature(feature) {\n    const featureObj = typeof feature === 'string' \n      ? this.features.getFeature(feature)\n      : feature;\n      \n    if (!featureObj) {\n      return false;\n    }\n    \n    // Check if feature is selected\n    if (!this.selectedFeatures.hasFeature(featureObj.id)) {\n      return true; // Already not selected\n    }\n    \n    // Remove from selected collection\n    this.selectedFeatures.removeFeature(featureObj);\n    \n    // Update feature selection state\n    featureObj.deselect();\n    \n    // Emit deselection event\n    this.emit('feature-deselected', { feature: featureObj });\n    \n    return true;\n  }\n  \n  /**\n   * Clear all feature selections\n   */\n  clearSelection() {\n    // Get all selected features\n    const selectedFeatures = this.selectedFeatures.getAllFeatures();\n    \n    // Clear the selected collection\n    this.selectedFeatures.clear();\n    \n    // Update each feature's selection state\n    selectedFeatures.forEach(feature => {\n      feature.deselect();\n    });\n    \n    // Emit selection cleared event\n    if (selectedFeatures.length > 0) {\n      this.emit('selection-cleared', { features: selectedFeatures });\n    }\n  }\n  \n  /**\n   * Apply 3D elevation data to features\n   * Uses configured elevation provider to update Z values\n   * @param {Array|Feature} features - Features to update with elevation data\n   * @returns {Promise} Promise resolving when elevation is applied\n   */\n  async applyElevationData(features) {\n    // Convert single feature to array\n    const featureArray = Array.isArray(features) ? features : [features];\n    \n    if (featureArray.length === 0) {\n      return Promise.resolve([]);\n    }\n    \n    // Skip if 3D is disabled\n    if (!this.settings.enable3D) {\n      return Promise.resolve(featureArray);\n    }\n    \n    try {\n      // Determine which elevation provider to use\n      if (this.settings.elevationProvider === 'mapInterface' && \n          this.mapInterface && \n          typeof this.mapInterface.getElevation === 'function') {\n        \n        // Process each feature individually\n        for (const feature of featureArray) {\n          try {\n            // Apply based on feature type\n            switch (feature.type) {\n            case 'point':\n              const pointCoord = feature.getCoordinate();\n              // Get elevation for the point\n              if (!pointCoord.elevation) {\n                const elevation = await this.mapInterface.getElevation(pointCoord);\n                pointCoord.setZ(elevation);\n              }\n              break;\n                \n            case 'line':\n              const lineCoords = feature.getCoordinates();\n              // Get elevation for each coordinate that needs it\n              for (const coord of lineCoords) {\n                if (!coord.elevation) {\n                  const elevation = await this.mapInterface.getElevation(coord);\n                  coord.setZ(elevation);\n                }\n              }\n              feature.setCoordinates(lineCoords);\n              break;\n                \n            case 'polygon':\n              const rings = feature.getRings();\n              // Get elevation for each coordinate in each ring\n              for (const ring of rings) {\n                for (const coord of ring) {\n                  if (!coord.elevation) {\n                    const elevation = await this.mapInterface.getElevation(coord);\n                    coord.setZ(elevation);\n                  }\n                }\n              }\n              feature.setRings(rings);\n              break;\n            }\n            \n            // Update the feature in the collection\n            if (this.features.hasFeature(feature.id)) {\n              this.features.updateFeature(feature);\n            }\n          } catch (error) {\n            console.error(`Error applying elevation to feature ${feature.id}:`, error);\n          }\n        }\n        \n        // Emit elevation updated event\n        this.emit('elevation-data-applied', { features: featureArray });\n        \n        return featureArray;\n      } else {\n        console.warn('No valid elevation provider available');\n        return featureArray;\n      }\n    } catch (error) {\n      console.error('Error applying elevation data:', error);\n      return featureArray;\n    }\n  }\n  \n  /**\n   * Connect an external GNSS module for position updates and device integration\n   * @param {Object} gnssModule - GNSS module instance (from gnss.js library)\n   * @param {Object} [options] - GNSS integration options\n   * @returns {boolean} Success of connection\n   */\n  connectGnssModule(gnssModule, options = {}) {\n    if (!gnssModule) {\n      console.error('Invalid GNSS module provided');\n      return false;\n    }\n\n    try {\n      // Store reference to the GNSS module\n      this.gnssModule = gnssModule;\n\n      // Default options\n      this.gnssOptions = Object.assign({\n        centerMapOnPosition: true,\n        trackedPositionMarker: true,\n        trackedPositionMarkerStyle: {\n          color: '#4285F4',\n          size: 12,\n          outlineColor: '#FFFFFF',\n          outlineWidth: 2,\n        },\n        accuracyCircle: true,\n        qualityIndicator: true,\n      }, options);\n\n      // Setup position tracking\n      this._setupGnssEventHandlers();\n\n      // Create position marker if enabled\n      if (this.gnssOptions.trackedPositionMarker && this.mapInterface) {\n        this._createPositionMarker();\n      }\n\n      // Emit connected event\n      this.emit('gnss-connected', {\n        gnssModule: this.gnssModule,\n        options: this.gnssOptions,\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Error connecting GNSS module:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Set up GNSS module event handlers\n   * @private\n   */\n  _setupGnssEventHandlers() {\n    if (!this.gnssModule || !this.gnssModule.events || typeof this.gnssModule.events.on !== 'function') {\n      console.warn('GNSS module has no events interface');\n      return;\n    }\n\n    // Handle position updates\n    this.gnssModule.events.on('position', (position) => {\n      this._handlePositionUpdate(position);\n    });\n\n    // Handle connection events\n    this.gnssModule.events.on('connection:connected', (data) => {\n      this.emit('gnss-device-connected', data);\n    });\n\n    this.gnssModule.events.on('connection:disconnected', () => {\n      this.emit('gnss-device-disconnected');\n    });\n\n    this.gnssModule.events.on('connection:error', (error) => {\n      this.emit('gnss-device-error', error);\n    });\n\n    // Handle NTRIP connection events\n    this.gnssModule.events.on('ntrip:connected', (data) => {\n      this.emit('gnss-ntrip-connected', data);\n    });\n\n    this.gnssModule.events.on('ntrip:disconnected', () => {\n      this.emit('gnss-ntrip-disconnected');\n    });\n\n    this.gnssModule.events.on('ntrip:error', (error) => {\n      this.emit('gnss-ntrip-error', error);\n    });\n  }\n\n  /**\n   * Handle position updates from GNSS module\n   * @param {Object} position - GNSS position data\n   * @private\n   */\n  _handlePositionUpdate(position) {\n    if (!position || !position.latitude || !position.longitude) {\n      return;\n    }\n\n    // Store current position\n    this.currentPosition = position;\n\n    // Update position marker if enabled\n    if (this.gnssOptions.trackedPositionMarker && this.positionMarker && this.mapInterface) {\n      this._updatePositionMarker(position);\n    }\n\n    // Center map if enabled\n    if (this.gnssOptions.centerMapOnPosition && this.mapInterface) {\n      this.mapInterface.setCenter({\n        lat: position.latitude,\n        lng: position.longitude,\n      });\n    }\n\n    // Emit position event\n    this.emit('gnss-position-updated', position);\n  }\n\n  /**\n   * Create a position marker on the map\n   * @private\n   */\n  _createPositionMarker() {\n    if (!this.mapInterface) return;\n\n    // Check if we already have a marker\n    if (this.positionMarker) {\n      return;\n    }\n\n    // Create position marker (implementation depends on map adapter)\n    if (this.mapInterface && typeof this.mapInterface.createMarker === 'function') {\n      this.positionMarker = this.mapInterface.createMarker({\n        lat: 0,\n        lng: 0,\n      }, {\n        ...this.gnssOptions.trackedPositionMarkerStyle,\n        visible: false,\n        zIndex: 1000,\n      });\n    }\n\n    // Create accuracy circle if enabled\n    if (this.gnssOptions.accuracyCircle && typeof this.mapInterface.createCircle === 'function') {\n      this.accuracyCircle = this.mapInterface.createCircle({\n        lat: 0,\n        lng: 0,\n      }, 0, {\n        fillColor: 'rgba(66, 133, 244, 0.2)',\n        strokeColor: '#4285F4',\n        strokeWeight: 1,\n        visible: false,\n        zIndex: 999,\n      });\n    }\n  }\n\n  /**\n   * Update position marker with new position data\n   * @param {Object} position - GNSS position data\n   * @private\n   */\n  _updatePositionMarker(position) {\n    if (!position || !position.latitude || !position.longitude) {\n      return;\n    }\n\n    // Get style based on fix quality\n    const style = this._getPositionStyleByQuality(position.quality);\n\n    // Update position marker\n    if (this.positionMarker) {\n      this.positionMarker.setPosition({\n        lat: position.latitude,\n        lng: position.longitude,\n      });\n\n      if (typeof this.positionMarker.setStyle === 'function') {\n        this.positionMarker.setStyle(style);\n      }\n\n      if (typeof this.positionMarker.setVisible === 'function') {\n        this.positionMarker.setVisible(true);\n      }\n    }\n\n    // Update accuracy circle if enabled and accuracy data is available\n    if (this.accuracyCircle && position.accuracy) {\n      this.accuracyCircle.setCenter({\n        lat: position.latitude,\n        lng: position.longitude,\n      });\n\n      this.accuracyCircle.setRadius(position.accuracy);\n\n      if (typeof this.accuracyCircle.setVisible === 'function') {\n        this.accuracyCircle.setVisible(true);\n      }\n    }\n  }\n\n  /**\n   * Get position marker style based on fix quality\n   * @param {number} quality - GNSS fix quality (0-5)\n   * @returns {Object} Style object\n   * @private\n   */\n  _getPositionStyleByQuality(quality) {\n    const baseStyle = { ...this.gnssOptions.trackedPositionMarkerStyle };\n\n    // Adjust color based on quality\n    switch (quality) {\n    case 4: // RTK Fixed\n      baseStyle.color = '#4CAF50'; // Green\n      break;\n\n    case 5: // RTK Float\n      baseStyle.color = '#FF9800'; // Orange\n      break;\n\n    case 2: // DGPS\n      baseStyle.color = '#FFEB3B'; // Yellow\n      break;\n\n    case 1: // GPS\n      baseStyle.color = '#2196F3'; // Blue\n      break;\n\n    case 0: // No fix\n    default:\n      baseStyle.color = '#F44336'; // Red\n      break;\n    }\n\n    return baseStyle;\n  }\n\n  /**\n   * Capture a GNSS position as a feature\n   * @param {Object} [options] - Capture options\n   * @returns {Promise<PointFeature|null>} Created point feature or null\n   */\n  async captureGnssPosition(options = {}) {\n    if (!this.gnssModule || !this.currentPosition) {\n      console.warn('No GNSS position available');\n      return null;\n    }\n\n    const position = this.currentPosition;\n\n    try {\n      // Create a point feature from the current position\n      const { PointFeature } = await import('../features/PointFeature.js');\n      const { Coordinate } = await import('../core/Coordinate.js');\n\n      // Create coordinate\n      const coordinate = new Coordinate(\n        position.latitude,\n        position.longitude,\n        position.altitude || 0,\n      );\n\n      // Create style based on fix quality\n      const style = this._getPositionStyleByQuality(position.quality);\n\n      // Set default options\n      const captureOptions = Object.assign({\n        name: `GNSS Point ${new Date().toLocaleTimeString()}`,\n        properties: {\n          source: 'gnss',\n          quality: position.quality,\n          satellites: position.satellites,\n          accuracy: position.accuracy,\n          timestamp: position.timestamp || new Date().toISOString(),\n        },\n        style,\n      }, options);\n\n      // Create feature\n      const feature = new PointFeature(coordinate, captureOptions);\n\n      // Add to feature collection\n      this.features.addFeature(feature);\n\n      // Emit capture event\n      this.emit('gnss-position-captured', {\n        feature,\n        position,\n      });\n\n      return feature;\n    } catch (error) {\n      console.error('Error capturing GNSS position:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Disconnect from GNSS module\n   * @returns {boolean} Success of disconnection\n   */\n  disconnectGnssModule() {\n    if (!this.gnssModule) {\n      return true; // Already disconnected\n    }\n\n    try {\n      // Remove position marker\n      if (this.positionMarker) {\n        if (typeof this.positionMarker.setMap === 'function') {\n          this.positionMarker.setMap(null);\n        }\n        this.positionMarker = null;\n      }\n\n      // Remove accuracy circle\n      if (this.accuracyCircle) {\n        if (typeof this.accuracyCircle.setMap === 'function') {\n          this.accuracyCircle.setMap(null);\n        }\n        this.accuracyCircle = null;\n      }\n\n      // Clear current position\n      this.currentPosition = null;\n\n      // Reset GNSS module reference\n      this.gnssModule = null;\n\n      // Emit disconnected event\n      this.emit('gnss-disconnected');\n\n      return true;\n    } catch (error) {\n      console.error('Error disconnecting GNSS module:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Destroy the survey manager and clean up resources\n   */\n  destroy() {\n    // Disconnect GNSS module if connected\n    if (this.gnssModule) {\n      this.disconnectGnssModule();\n    }\n\n    // Deactivate any active tool\n    this.deactivateActiveTool();\n\n    // Remove all event listeners\n    this.removeAllListeners();\n\n    // Destroy all tools\n    Object.values(this.tools).forEach(tool => {\n      if (typeof tool.destroy === 'function') {\n        tool.destroy();\n      }\n    });\n\n    // Clear collections\n    this.features.clear();\n    this.workingFeatures.clear();\n    this.selectedFeatures.clear();\n\n    // Clear history\n    this.history.undoStack = [];\n    this.history.redoStack = [];\n\n    // Emit destruction event\n    this.emit('destroyed', { manager: this });\n  }\n}","/**\n * Feature Component Module - Main entry point\n * @module gnss/survey/features\n */\n\n// Export feature base class\nexport { FeatureBase } from './FeatureBase.js';\n\n// Export feature implementations\nexport { PointFeature } from './PointFeature.js';\nexport { LineFeature } from './LineFeature.js';\nexport { PolygonFeature } from './PolygonFeature.js';\n\n// Feature operations\nexport { FeatureCollection } from './FeatureCollection.js';\n\n/**\n * Create a point feature\n * @param {Coordinate|Object} coordinate - The point's coordinate\n * @param {Object} [options] - Configuration options\n * @returns {PointFeature} - The created point feature\n */\nexport function createPoint(coordinate, options = {}) {\n  const { PointFeature } = require('./PointFeature.js');\n  return new PointFeature(coordinate, options);\n}\n\n/**\n * Create a line feature\n * @param {Array<Coordinate>} coordinates - The line's coordinates\n * @param {Object} [options] - Configuration options\n * @returns {LineFeature} - The created line feature\n */\nexport function createLine(coordinates, options = {}) {\n  const { LineFeature } = require('./LineFeature.js');\n  return new LineFeature(coordinates, options);\n}\n\n/**\n * Create a polygon feature\n * @param {Array<Coordinate>} coordinates - The polygon's exterior ring coordinates\n * @param {Object} [options] - Configuration options\n * @returns {PolygonFeature} - The created polygon feature\n */\nexport function createPolygon(coordinates, options = {}) {\n  const { PolygonFeature } = require('./PolygonFeature.js');\n  return new PolygonFeature(coordinates, options);\n}\n\n/**\n * Create a feature collection\n * @param {Array<FeatureBase>} [features=[]] - Initial features\n * @param {Object} [options] - Configuration options\n * @returns {FeatureCollection} - The created feature collection\n */\nexport function createFeatureCollection(features = [], options = {}) {\n  const { FeatureCollection } = require('./FeatureCollection.js');\n  return new FeatureCollection(features, options);\n}\n\n/**\n * Import features from GeoJSON\n * @param {Object} geojson - GeoJSON object or FeatureCollection\n * @param {Object} [options] - Import options\n * @returns {Array<FeatureBase>} - Array of imported features\n */\nexport function importFromGeoJSON(geojson, options = {}) {\n  if (!geojson) return [];\n    \n  // Handle FeatureCollection\n  if (geojson.type === 'FeatureCollection' && Array.isArray(geojson.features)) {\n    return geojson.features.map(feature => {\n      return _createFeatureFromGeoJSON(feature, options);\n    }).filter(Boolean);\n  }\n    \n  // Handle individual Feature\n  if (geojson.type === 'Feature') {\n    const feature = _createFeatureFromGeoJSON(geojson, options);\n    return feature ? [feature] : [];\n  }\n    \n  // Handle Geometry\n  if (geojson.type && geojson.coordinates) {\n    // Wrap it as a feature\n    const feature = _createFeatureFromGeoJSON({\n      type: 'Feature',\n      geometry: geojson,\n    }, options);\n    return feature ? [feature] : [];\n  }\n    \n  return [];\n}\n\n/**\n * Create a feature from a GeoJSON object\n * @param {Object} geojson - GeoJSON feature\n * @param {Object} options - Import options\n * @returns {FeatureBase|null} - Created feature or null\n * @private\n */\nfunction _createFeatureFromGeoJSON(geojson, options = {}) {\n  if (!geojson || !geojson.geometry || !geojson.geometry.type) {\n    return null;\n  }\n    \n  let feature;\n    \n  switch (geojson.geometry.type) {\n  case 'Point':\n    feature = createPoint([], { id: geojson.id });\n    break;\n            \n  case 'LineString':\n    feature = createLine([], { id: geojson.id });\n    break;\n            \n  case 'Polygon':\n    feature = createPolygon([], { id: geojson.id });\n    break;\n            \n  default:\n    console.warn(`Unsupported GeoJSON geometry type: ${geojson.geometry.type}`);\n    return null;\n  }\n    \n  if (feature) {\n    feature.fromGeoJSON(geojson, options);\n  }\n    \n  return feature;\n}","/**\n * Abstract Map Interface - Base class for all map providers\n * @module gnss/survey/map/MapInterface\n */\nexport class MapInterface {\n  /**\n     * Initialize the map interface\n     * @param {Object} options - Configuration options for the map\n     */\n  constructor(options = {}) {\n    if (this.constructor === MapInterface) {\n      throw new Error('Abstract class \\'MapInterface\\' cannot be instantiated directly.');\n    }\n        \n    this.options = options;\n  }\n    \n  /**\n     * Set the cursor style for the map\n     * @param {string} cursorType - CSS cursor value (e.g., 'default', 'pointer', 'crosshair')\n     * @returns {void}\n     */\n  setCursor(_cursorType) {\n    throw new Error('Method \\'setCursor()\\' must be implemented.');\n  }\n    \n  /**\n     * Initialize the map with the specified container\n     * @param {string|HTMLElement} container - The HTML element or element ID to contain the map\n     * @returns {Promise<void>} - Promise that resolves when the map is initialized\n     */\n  async initialize(_container) {\n    throw new Error('Method \\'initialize()\\' must be implemented.');\n  }\n    \n  /**\n     * Set the center of the map to the specified coordinate\n     * @param {Coordinate} coordinate - The coordinate to center the map on\n     * @returns {Promise<void>} - Promise that resolves when the map is centered\n     */\n  async setCenter(_coordinate) {\n    throw new Error('Method \\'setCenter()\\' must be implemented.');\n  }\n    \n  /**\n     * Set the zoom level of the map\n     * @param {number} zoomLevel - The zoom level to set\n     * @returns {Promise<void>} - Promise that resolves when the zoom is set\n     */\n  async setZoom(_zoomLevel) {\n    throw new Error('Method \\'setZoom()\\' must be implemented.');\n  }\n    \n  /**\n     * Add a marker to the map\n     * @param {Coordinate} coordinate - The coordinate to place the marker\n     * @param {Object} options - Configuration options for the marker\n     * @returns {Promise<Object>} - Promise that resolves with the created marker instance\n     */\n  async addMarker(_coordinate, _options = {}) {\n    throw new Error('Method \\'addMarker()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove a marker from the map\n     * @param {Object} marker - The marker instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the marker is removed\n     */\n  async removeMarker(_marker) {\n    throw new Error('Method \\'removeMarker()\\' must be implemented.');\n  }\n    \n  /**\n     * Add a polyline to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polyline\n     * @param {Object} options - Configuration options for the polyline\n     * @returns {Promise<Object>} - Promise that resolves with the created polyline instance\n     */\n  async addPolyline(_coordinates, _options = {}) {\n    throw new Error('Method \\'addPolyline()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove a polyline from the map\n     * @param {Object} polyline - The polyline instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polyline is removed\n     */\n  async removePolyline(_polyline) {\n    throw new Error('Method \\'removePolyline()\\' must be implemented.');\n  }\n    \n  /**\n     * Add a polygon to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polygon\n     * @param {Object} options - Configuration options for the polygon\n     * @returns {Promise<Object>} - Promise that resolves with the created polygon instance\n     */\n  async addPolygon(_coordinates, _options = {}) {\n    throw new Error('Method \\'addPolygon()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove a polygon from the map\n     * @param {Object} polygon - The polygon instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polygon is removed\n     */\n  async removePolygon(_polygon) {\n    throw new Error('Method \\'removePolygon()\\' must be implemented.');\n  }\n    \n  /**\n     * Get the current visible bounds of the map\n     * @returns {Promise<Object>} - Promise that resolves with the bounds object\n     */\n  async getBounds() {\n    throw new Error('Method \\'getBounds()\\' must be implemented.');\n  }\n    \n  /**\n     * Fit the map view to the specified bounds\n     * @param {Object} bounds - The bounds to fit the map to\n     * @param {Object} options - Configuration options for fitting\n     * @returns {Promise<void>} - Promise that resolves when the map is fitted to bounds\n     */\n  async fitBounds(_bounds, _options = {}) {\n    throw new Error('Method \\'fitBounds()\\' must be implemented.');\n  }\n    \n  /**\n     * Register an event listener on the map\n     * @param {string} eventType - The type of event to listen for\n     * @param {Function} listener - The callback function to execute when the event occurs\n     * @returns {Promise<Object>} - Promise that resolves with the listener handle\n     */\n  async addEventListener(_eventType, _listener) {\n    throw new Error('Method \\'addEventListener()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove an event listener from the map\n     * @param {string} eventType - The type of event\n     * @param {Object} listenerHandle - The listener handle to remove\n     * @returns {Promise<void>} - Promise that resolves when the listener is removed\n     */\n  async removeEventListener(_eventType, _listenerHandle) {\n    throw new Error('Method \\'removeEventListener()\\' must be implemented.');\n  }\n    \n  /**\n     * Get the elevation at a specific coordinate\n     * @param {Coordinate} coordinate - The coordinate to get elevation for\n     * @returns {Promise<number>} - Promise that resolves with the elevation in meters\n     */\n  async getElevation(_coordinate) {\n    throw new Error('Method \\'getElevation()\\' must be implemented.');\n  }\n    \n  /**\n     * Get elevations for a path of coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the path\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForPath(_coordinates) {\n    throw new Error('Method \\'getElevationsForPath()\\' must be implemented.');\n  }\n    \n  /**\n     * Convert a geographic coordinate to pixel coordinates on the map\n     * @param {Coordinate} coordinate - The geographic coordinate to convert\n     * @returns {Array<number>} - [x, y] pixel coordinates\n     */\n  coordinateToPixel(_coordinate) {\n    throw new Error('Method \\'coordinateToPixel()\\' must be implemented.');\n  }\n    \n  /**\n     * Convert pixel coordinates to a geographic coordinate\n     * @param {Array<number>} pixel - [x, y] pixel coordinates\n     * @returns {Coordinate} - The geographic coordinate\n     */\n  pixelToCoordinate(_pixel) {\n    throw new Error('Method \\'pixelToCoordinate()\\' must be implemented.');\n  }\n}","/**\n * Extended Map Interface for 3D maps\n * @module gnss/survey/map/Map3DInterface\n */\nimport { MapInterface } from './MapInterface.js';\n\nexport class Map3DInterface extends MapInterface {\n  /**\n     * Initialize the 3D map interface\n     * @param {Object} options - Configuration options for the map\n     */\n  constructor(options = {}) {\n    super(options);\n        \n    if (this.constructor === Map3DInterface) {\n      throw new Error('Abstract class \\'Map3DInterface\\' cannot be instantiated directly.');\n    }\n  }\n    \n  /**\n     * Set the camera tilt angle (pitch)\n     * @param {number} angle - The tilt angle in degrees (0 = looking straight down)\n     * @returns {Promise<void>} - Promise that resolves when the tilt is set\n     */\n  async setTilt(_angle) {\n    throw new Error('Method \\'setTilt()\\' must be implemented.');\n  }\n    \n  /**\n     * Set the camera heading (rotation)\n     * @param {number} angle - The heading angle in degrees (0 = north)\n     * @returns {Promise<void>} - Promise that resolves when the heading is set\n     */\n  async setHeading(_angle) {\n    throw new Error('Method \\'setHeading()\\' must be implemented.');\n  }\n    \n  /**\n     * Get the current camera position\n     * @returns {Promise<Object>} - Promise that resolves with the camera position\n     */\n  async getCameraPosition() {\n    throw new Error('Method \\'getCameraPosition()\\' must be implemented.');\n  }\n    \n  /**\n     * Set the camera position\n     * @param {Object} position - The camera position\n     * @param {Coordinate} position.coordinate - The coordinate to position the camera\n     * @param {number} position.distance - The distance from the coordinate\n     * @param {number} position.heading - The heading angle in degrees\n     * @param {number} position.tilt - The tilt angle in degrees\n     * @returns {Promise<void>} - Promise that resolves when the position is set\n     */\n  async setCameraPosition(_position) {\n    throw new Error('Method \\'setCameraPosition()\\' must be implemented.');\n  }\n    \n  /**\n     * Add a 3D model to the map\n     * @param {Coordinate} coordinate - The coordinate to place the model\n     * @param {Object} options - Configuration options for the model\n     * @returns {Promise<Object>} - Promise that resolves with the model object\n     */\n  async addModel(_coordinate, _options = {}) {\n    throw new Error('Method \\'addModel()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove a 3D model from the map\n     * @param {Object} model - The model to remove\n     * @returns {Promise<void>} - Promise that resolves when the model is removed\n     */\n  async removeModel(_model) {\n    throw new Error('Method \\'removeModel()\\' must be implemented.');\n  }\n    \n  /**\n     * Add terrain to the map\n     * @param {Object} options - Configuration options for the terrain\n     * @returns {Promise<Object>} - Promise that resolves with the terrain object\n     */\n  async addTerrain(_options = {}) {\n    throw new Error('Method \\'addTerrain()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove terrain from the map\n     * @returns {Promise<void>} - Promise that resolves when the terrain is removed\n     */\n  async removeTerrain() {\n    throw new Error('Method \\'removeTerrain()\\' must be implemented.');\n  }\n    \n  /**\n     * Enable or disable terrain exaggeration\n     * @param {number} factor - The exaggeration factor (1.0 = normal)\n     * @returns {Promise<void>} - Promise that resolves when exaggeration is set\n     */\n  async setTerrainExaggeration(_factor) {\n    throw new Error('Method \\'setTerrainExaggeration()\\' must be implemented.');\n  }\n}","/**\n * Abstract Elevation Service Interface\n * @module gnss/survey/map/ElevationService\n */\nexport class ElevationService {\n  /**\n     * Initialize the elevation service\n     * @param {Object} options - Configuration options for the elevation service\n     */\n  constructor(options = {}) {\n    if (this.constructor === ElevationService) {\n      throw new Error('Abstract class \\'ElevationService\\' cannot be instantiated directly.');\n    }\n        \n    this.options = options;\n  }\n    \n  /**\n     * Get the elevation at a specific coordinate\n     * @param {Coordinate} coordinate - The coordinate to get elevation for\n     * @returns {Promise<number>} - Promise that resolves with the elevation in meters\n     */\n  async getElevation(_coordinate) {\n    throw new Error('Method \\'getElevation()\\' must be implemented.');\n  }\n    \n  /**\n     * Get elevations for a path of coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the path\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForPath(_coordinates) {\n    throw new Error('Method \\'getElevationsForPath()\\' must be implemented.');\n  }\n    \n  /**\n     * Get elevations for an array of coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates to get elevations for\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForLocations(_coordinates) {\n    throw new Error('Method \\'getElevationsForLocations()\\' must be implemented.');\n  }\n}","/**\n * Google Maps implementation of the Map Interface\n * @module gnss/survey/map/GoogleMapsAdapter\n */\nimport { MapInterface } from './MapInterface.js';\nimport { Coordinate } from '../core/Coordinate.js';\n\nexport class GoogleMapsAdapter extends MapInterface {\n  /**\n     * Initialize the Google Maps adapter\n     * @param {Object} options - Configuration options for Google Maps\n     * @param {string} [options.apiKey] - Google Maps API key (optional if already loaded)\n     * @param {Object} [options.mapOptions] - Google Maps initialization options\n     */\n  constructor(options = {}) {\n    super(options);\n        \n    // If a map instance is provided, use it directly\n    this.map = options.mapInstance || null;\n    this.apiLoaded = this.map !== null || (window.google && window.google.maps);\n    this.apiKey = options.apiKey;\n    this.mapOptions = options.mapOptions || {\n      center: { lat: 0, lng: 0 },\n      zoom: 2,\n      mapTypeId: 'hybrid',\n      mapTypeControl: true,\n      fullscreenControl: true,\n      streetViewControl: false,\n    };\n        \n    // Keep track of event listeners for cleanup\n    // Structure: Map<eventType, Map<listenerFunction, handle>>\n    this.eventListeners = new Map();\n  }\n    \n  /**\n     * Set the cursor style for the map\n     * @param {string} cursorType - CSS cursor value (e.g., 'default', 'pointer', 'crosshair')\n     * @returns {void}\n     */\n  setCursor(cursorType) {\n    if (!this.map) {\n      return;\n    }\n    this.map.getDiv().style.cursor = cursorType;\n  }\n    \n  /**\n     * Load the Google Maps API if not already loaded\n     * @returns {Promise<void>} - Promise that resolves when the API is loaded\n     * @private\n     */\n  async _loadGoogleMapsAPI() {\n    if (window.google && window.google.maps) {\n      this.apiLoaded = true;\n      return;\n    }\n        \n    if (!this.apiKey) {\n      throw new Error('Google Maps API key is required for initialization');\n    }\n        \n    return new Promise((resolve, reject) => {\n      const callbackName = `GoogleMapsCallback_${Date.now()}`;\n      window[callbackName] = () => {\n        this.apiLoaded = true;\n        delete window[callbackName];\n        resolve();\n      };\n            \n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&callback=${callbackName}&libraries=geometry,places`;\n      script.async = true;\n      script.defer = true;\n      script.onerror = () => reject(new Error('Failed to load Google Maps API'));\n      document.head.appendChild(script);\n    });\n  }\n    \n  /**\n     * Initialize the map with the specified container\n     * @param {string|HTMLElement} container - The HTML element or element ID to contain the map\n     * @returns {Promise<void>} - Promise that resolves when the map is initialized\n     */\n  async initialize(container) {\n    // If we already have a map instance, we don't need to create a new one\n    if (this.map) {\n      return Promise.resolve();\n    }\n        \n    await this._loadGoogleMapsAPI();\n        \n    const element = typeof container === 'string' \n      ? document.getElementById(container) \n      : container;\n            \n    if (!element) {\n      throw new Error(`Map container element not found: ${container}`);\n    }\n        \n    this.map = new google.maps.Map(element, this.mapOptions);\n        \n    // Wait for the map to be fully loaded\n    return new Promise((resolve) => {\n      google.maps.event.addListenerOnce(this.map, 'idle', () => {\n        resolve();\n      });\n    });\n  }\n    \n  /**\n     * Convert a Coordinate to a Google Maps LatLng\n     * @param {Coordinate} coordinate - The coordinate to convert\n     * @returns {google.maps.LatLng} - Google Maps LatLng object\n     * @private\n     */\n  _toLatLng(coordinate) {\n    return new google.maps.LatLng(coordinate.lat, coordinate.lng);\n  }\n    \n  /**\n     * Convert a Google Maps LatLng to a Coordinate\n     * @param {google.maps.LatLng} latLng - The Google Maps LatLng to convert\n     * @param {number} [elevation] - Optional elevation value\n     * @returns {Coordinate} - Coordinate instance\n     * @private\n     */\n  _toCoordinate(latLng, elevation = null) {\n    // Use 0 as default elevation if null or undefined is provided\n    const safeElevation = elevation !== null && elevation !== undefined ? elevation : 0;\n    return new Coordinate(latLng.lat(), latLng.lng(), safeElevation);\n  }\n    \n  /**\n     * Set the center of the map to the specified coordinate\n     * @param {Coordinate} coordinate - The coordinate to center the map on\n     * @returns {Promise<void>} - Promise that resolves when the map is centered\n     */\n  async setCenter(coordinate) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    this.map.setCenter(this._toLatLng(coordinate));\n    return Promise.resolve();\n  }\n    \n  /**\n     * Set the zoom level of the map\n     * @param {number} zoomLevel - The zoom level to set\n     * @returns {Promise<void>} - Promise that resolves when the zoom is set\n     */\n  async setZoom(zoomLevel) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    this.map.setZoom(zoomLevel);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a marker to the map\n     * @param {Coordinate} coordinate - The coordinate to place the marker\n     * @param {Object} options - Configuration options for the marker\n     * @returns {Promise<Object>} - Promise that resolves with the created marker instance\n     */\n  async addMarker(coordinate, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const markerOptions = {\n      position: this._toLatLng(coordinate),\n      map: this.map,\n      title: options.title || '',\n      label: options.label || null,\n      icon: options.icon || null,\n      draggable: options.draggable || false,\n      zIndex: options.zIndex || null,\n      ...options.markerOptions,\n    };\n        \n    const marker = new google.maps.Marker(markerOptions);\n        \n    // Store elevation in marker object for future reference\n    marker.elevation = coordinate.elevation;\n        \n    return Promise.resolve(marker);\n  }\n    \n  /**\n     * Remove a marker from the map\n     * @param {Object} marker - The marker instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the marker is removed\n     */\n  async removeMarker(marker) {\n    if (!marker) {\n      return Promise.resolve();\n    }\n        \n    marker.setMap(null);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a polyline to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polyline\n     * @param {Object} options - Configuration options for the polyline\n     * @returns {Promise<Object>} - Promise that resolves with the created polyline instance\n     */\n  async addPolyline(coordinates, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const path = coordinates.map(coord => this._toLatLng(coord));\n        \n    const polylineOptions = {\n      path: path,\n      map: this.map,\n      strokeColor: options.strokeColor || '#FF0000',\n      strokeOpacity: options.strokeOpacity || 1.0,\n      strokeWeight: options.strokeWeight || 3,\n      ...options.polylineOptions,\n    };\n        \n    const polyline = new google.maps.Polyline(polylineOptions);\n        \n    // Store original coordinates with elevation data\n    polyline.originalCoordinates = [...coordinates];\n        \n    return Promise.resolve(polyline);\n  }\n    \n  /**\n     * Remove a polyline from the map\n     * @param {Object} polyline - The polyline instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polyline is removed\n     */\n  async removePolyline(polyline) {\n    if (!polyline) {\n      return Promise.resolve();\n    }\n        \n    polyline.setMap(null);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a polygon to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polygon\n     * @param {Object} options - Configuration options for the polygon\n     * @returns {Promise<Object>} - Promise that resolves with the created polygon instance\n     */\n  async addPolygon(coordinates, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const path = coordinates.map(coord => this._toLatLng(coord));\n        \n    const polygonOptions = {\n      paths: path,\n      map: this.map,\n      strokeColor: options.strokeColor || '#FF0000',\n      strokeOpacity: options.strokeOpacity || 0.8,\n      strokeWeight: options.strokeWeight || 2,\n      fillColor: options.fillColor || '#FF0000',\n      fillOpacity: options.fillOpacity || 0.35,\n      ...options.polygonOptions,\n    };\n        \n    const polygon = new google.maps.Polygon(polygonOptions);\n        \n    // Store original coordinates with elevation data\n    polygon.originalCoordinates = [...coordinates];\n        \n    return Promise.resolve(polygon);\n  }\n    \n  /**\n     * Remove a polygon from the map\n     * @param {Object} polygon - The polygon instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polygon is removed\n     */\n  async removePolygon(polygon) {\n    if (!polygon) {\n      return Promise.resolve();\n    }\n        \n    polygon.setMap(null);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Get the current visible bounds of the map\n     * @returns {Promise<Object>} - Promise that resolves with the bounds object\n     */\n  async getBounds() {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const bounds = this.map.getBounds();\n    if (!bounds) {\n      return Promise.resolve(null);\n    }\n        \n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n        \n    return Promise.resolve({\n      north: ne.lat(),\n      east: ne.lng(),\n      south: sw.lat(),\n      west: sw.lng(),\n      northEast: this._toCoordinate(ne),\n      southWest: this._toCoordinate(sw),\n    });\n  }\n    \n  /**\n     * Fit the map view to the specified bounds\n     * @param {Object} bounds - The bounds to fit the map to\n     * @param {Object} options - Configuration options for fitting\n     * @returns {Promise<void>} - Promise that resolves when the map is fitted to bounds\n     */\n  async fitBounds(bounds, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    let googleBounds;\n        \n    if (bounds.northEast && bounds.southWest) {\n      googleBounds = new google.maps.LatLngBounds(\n        this._toLatLng(bounds.southWest),\n        this._toLatLng(bounds.northEast),\n      );\n    } else if (bounds.north && bounds.south && bounds.east && bounds.west) {\n      googleBounds = new google.maps.LatLngBounds(\n        new google.maps.LatLng(bounds.south, bounds.west),\n        new google.maps.LatLng(bounds.north, bounds.east),\n      );\n    } else if (Array.isArray(bounds)) {\n      // Assume array of coordinates\n      googleBounds = new google.maps.LatLngBounds();\n      bounds.forEach(coord => {\n        googleBounds.extend(this._toLatLng(coord));\n      });\n    } else {\n      throw new Error('Invalid bounds format');\n    }\n        \n    const fitOptions = {\n      padding: options.padding || 0,\n      ...options.fitOptions,\n    };\n        \n    this.map.fitBounds(googleBounds, fitOptions);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Register an event listener on the map\n     * @param {string} eventType - The type of event to listen for\n     * @param {Function} listener - The callback function to execute when the event occurs\n     * @returns {Promise<Object>} - Promise that resolves with the listener handle\n     */\n  async addEventListener(eventType, listener) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    // Map Google-specific event names to standard ones\n    const googleEventType = eventType === 'contextmenu' ? 'rightclick' : eventType;\n        \n    // Create a debounced version of the mousemove handler to limit coordinate creation\n    let lastMoveTime = 0;\n    const throttleInterval = 50; // ms between mousemove events\n        \n    // For click events, track the last click time to prevent double-processing\n    // due to how Google Maps handles events internally\n    let lastClickTime = 0;\n    const clickDebounceTime = 100; // ms between clicks to consider it a \"new\" click\n        \n    const handle = google.maps.event.addListener(this.map, googleEventType, event => {\n      // For click events, check for debouncing\n      if (eventType === 'click' || eventType === 'dblclick') {\n        const now = Date.now();\n        if (now - lastClickTime < clickDebounceTime) {\n          // This might be a duplicate click or same click being processed by different handlers\n          console.debug(`Debounced ${eventType} event, too soon after last click`);\n          return;\n        }\n        lastClickTime = now;\n                \n        // If this event comes from a map feature like POI, ignore it if clickableIcons is false\n        // Google will still generate click events for its own features sometimes\n        if (event.placeId || event.feature) {\n          // This is a click on a Google Maps feature (POI, etc.)\n          console.debug('Ignoring click on Google Maps POI or feature');\n          // Don't trigger our handler for these clicks\n          return;\n        }\n      }\n            \n      // For mousemove, throttle the events to reduce coordinate creation\n      if (eventType === 'mousemove') {\n        const now = Date.now();\n        if (now - lastMoveTime < throttleInterval) {\n          return; // Skip this event if within throttle interval\n        }\n        lastMoveTime = now;\n      }\n            \n      // Convert Google Maps events to a standard format\n      // Create a normalized version of the originalEvent with preventDefault\n      // and stopPropagation functions\n      const normalizedOriginalEvent = {\n        preventDefault: function() {\n          // If the original event has preventDefault, call it\n          if (event.domEvent && typeof event.domEvent.preventDefault === 'function') {\n            event.domEvent.preventDefault();\n          }\n        },\n        stopPropagation: function() {\n          // If the original event has stopPropagation, call it\n          if (event.domEvent && typeof event.domEvent.stopPropagation === 'function') {\n            event.domEvent.stopPropagation();\n          }\n        },\n        // Also include the original DOM event if it exists\n        domEvent: event.domEvent || null,\n        // Pass along any other properties from the original event\n        ...event,\n      };\n            \n      const convertedEvent = {\n        type: eventType,\n        originalEvent: normalizedOriginalEvent,\n      };\n            \n      // Add coordinate and pixel information for mouse events\n      if (event.latLng) {\n        // Only create full coordinate objects for click events, not mousemove\n        if (eventType === 'click' || eventType === 'dblclick' || eventType === 'contextmenu') {\n          // For significant events, create a full coordinate object\n          convertedEvent.coordinate = this._toCoordinate(event.latLng);\n                    \n          // Log click events with enhanced debug info\n          console.log(`Google Maps ${eventType} event:`, \n            `${event.latLng.lat().toFixed(6)}, ${event.latLng.lng().toFixed(6)}`,\n            event.domEvent ? `DOM event: ${event.domEvent.type}` : '');\n        } else {\n          // For mousemove, just provide a simple object with lat/lng\n          convertedEvent.coordinate = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng(),\n            elevation: 0,\n          };\n        }\n                \n        // Always keep the original latLng for direct access\n        convertedEvent.latLng = event.latLng;\n                \n        // Get pixel coordinates for all event types, helpful for debugging\n        try {\n          if (this.map.getProjection()) {\n            const coord = event.latLng;\n            const projection = this.map.getProjection();\n            const point = projection.fromLatLngToPoint(coord);\n            const scale = Math.pow(2, this.map.getZoom());\n            const worldPoint = new google.maps.Point(\n              point.x * scale, \n              point.y * scale,\n            );\n                        \n            const mapContainer = this.map.getDiv();\n            const mapBounds = mapContainer.getBoundingClientRect();\n                        \n            convertedEvent.pixel = [\n              Math.floor(worldPoint.x - (mapBounds.left + window.scrollX)),\n              Math.floor(worldPoint.y - (mapBounds.top + window.scrollY)),\n            ];\n                        \n            // For click events, add extra debug logging about pixel position\n            if (eventType === 'click') {\n              console.debug(`Click at pixel: ${convertedEvent.pixel[0]}, ${convertedEvent.pixel[1]}`);\n            }\n          }\n        } catch (e) {\n          console.warn('Error computing pixel coordinates:', e);\n        }\n      }\n            \n      // Call the listener with the converted event\n      listener(convertedEvent);\n    });\n        \n    // Keep track of the listener for later cleanup\n    // Store both the function reference and the handle\n    if (!this.eventListeners.has(eventType)) {\n      this.eventListeners.set(eventType, new Map());\n    }\n    this.eventListeners.get(eventType).set(listener, handle);\n        \n    return Promise.resolve(handle);\n  }\n    \n  /**\n     * Remove an event listener from the map\n     * @param {string} eventType - The type of event\n     * @param {Function|Object} listenerOrHandle - The listener function or handle to remove\n     * @returns {Promise<void>} - Promise that resolves when the listener is removed\n     */\n  async removeEventListener(eventType, listenerOrHandle) {\n    if (!listenerOrHandle) {\n      return Promise.resolve();\n    }\n        \n    let handle = listenerOrHandle;\n        \n    // Check if this is a function reference instead of a handle\n    if (typeof listenerOrHandle === 'function') {\n      // Look up the handle from our mapping\n      if (this.eventListeners.has(eventType) && \n                this.eventListeners.get(eventType).has(listenerOrHandle)) {\n        handle = this.eventListeners.get(eventType).get(listenerOrHandle);\n                \n        // Remove the mapping\n        this.eventListeners.get(eventType).delete(listenerOrHandle);\n      } else {\n        // If we don't have a mapping, we can't remove it\n        console.warn(`No event listener found for ${eventType}`);\n        return Promise.resolve();\n      }\n    }\n        \n    // Remove using the handle\n    try {\n      google.maps.event.removeListener(handle);\n    } catch (e) {\n      console.warn(`Error removing listener for ${eventType}:`, e);\n    }\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Get the elevation at a specific coordinate using Google Maps Elevation Service\n     * @param {Coordinate} coordinate - The coordinate to get elevation for\n     * @returns {Promise<number>} - Promise that resolves with the elevation in meters\n     */\n  async getElevation(coordinate) {\n    if (!this.apiLoaded) {\n      throw new Error('Google Maps API not loaded. Call initialize() first.');\n    }\n        \n    // If coordinate already has elevation, return it\n    if (coordinate.elevation !== null && coordinate.elevation !== undefined) {\n      return Promise.resolve(coordinate.elevation);\n    }\n        \n    const elevationService = new google.maps.ElevationService();\n    const locations = [this._toLatLng(coordinate)];\n        \n    return new Promise((resolve, reject) => {\n      elevationService.getElevationForLocations({ locations }, (results, status) => {\n        if (status === google.maps.ElevationStatus.OK && results && results.length > 0) {\n          resolve(results[0].elevation);\n        } else {\n          reject(new Error(`Elevation service failed: ${status}`));\n        }\n      });\n    });\n  }\n    \n  /**\n     * Get elevations for a path of coordinates using Google Maps Elevation Service\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the path\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForPath(coordinates) {\n    if (!this.apiLoaded) {\n      throw new Error('Google Maps API not loaded. Call initialize() first.');\n    }\n        \n    // For coordinates that already have elevation, we could just use those\n    // but we'll request all to ensure consistency from the elevation service\n        \n    const elevationService = new google.maps.ElevationService();\n    const path = coordinates.map(coord => this._toLatLng(coord));\n        \n    // Google's API has a limit on the number of samples, so chunk if needed\n    const MAX_SAMPLES = 512; // Google's limit\n    const samples = Math.min(coordinates.length, MAX_SAMPLES);\n        \n    return new Promise((resolve, reject) => {\n      elevationService.getElevationAlongPath(\n        {\n          path: path,\n          samples: samples,\n        },\n        (results, status) => {\n          if (status === google.maps.ElevationStatus.OK && results && results.length > 0) {\n            const elevations = results.map(result => result.elevation);\n            resolve(elevations);\n          } else {\n            reject(new Error(`Elevation service failed: ${status}`));\n          }\n        },\n      );\n    });\n  }\n    \n  /**\n     * Convert a geographic coordinate to pixel coordinates on the map\n     * @param {Coordinate} coordinate - The geographic coordinate to convert\n     * @returns {Array<number>} - [x, y] pixel coordinates\n     */\n  coordinateToPixel(coordinate) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const latLng = this._toLatLng(coordinate);\n    const projection = this.map.getProjection();\n        \n    if (!projection) {\n      throw new Error('Map projection not ready.');\n    }\n        \n    const point = projection.fromLatLngToPoint(latLng);\n    const scale = Math.pow(2, this.map.getZoom());\n    const worldPoint = new google.maps.Point(\n      point.x * scale, \n      point.y * scale,\n    );\n        \n    const mapContainer = this.map.getDiv();\n    const mapBounds = mapContainer.getBoundingClientRect();\n        \n    // Get the top-left of the map container\n    const topLeft = new google.maps.Point(\n      mapBounds.left + window.scrollX,\n      mapBounds.top + window.scrollY,\n    );\n        \n    // Position relative to the map container\n    return [\n      Math.floor(worldPoint.x - topLeft.x),\n      Math.floor(worldPoint.y - topLeft.y),\n    ];\n  }\n    \n  /**\n     * Convert pixel coordinates to a geographic coordinate\n     * @param {Array<number>} pixel - [x, y] pixel coordinates relative to the map container\n     * @returns {Coordinate} - The geographic coordinate\n     */\n  pixelToCoordinate(pixel) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const projection = this.map.getProjection();\n        \n    if (!projection) {\n      throw new Error('Map projection not ready.');\n    }\n        \n    const mapContainer = this.map.getDiv();\n    const mapBounds = mapContainer.getBoundingClientRect();\n        \n    // Get the top-left of the map container\n    const topLeft = new google.maps.Point(\n      mapBounds.left + window.scrollX,\n      mapBounds.top + window.scrollY,\n    );\n        \n    // Position in world coordinates\n    const scale = Math.pow(2, this.map.getZoom());\n    const worldPoint = new google.maps.Point(\n      (pixel[0] + topLeft.x) / scale,\n      (pixel[1] + topLeft.y) / scale,\n    );\n        \n    // Convert to LatLng\n    const latLng = projection.fromPointToLatLng(worldPoint);\n        \n    // Return as a Coordinate\n    return this._toCoordinate(latLng);\n  }\n    \n  /**\n     * Create a text label on the map\n     * @param {Object} options - Configuration for the label\n     * @param {Coordinate|Object} options.position - The position for the label\n     * @param {string} options.text - The text content of the label\n     * @param {Object} options.style - Styling options for the label\n     * @returns {Object} - The created label object\n     */\n  createLabel(options) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    // Extract options with defaults\n    const position = options.position;\n    const text = options.text || '';\n    const style = options.style || {};\n        \n    // Store labels if not already tracking them\n    if (!this._labels) {\n      this._labels = [];\n    }\n        \n    // Create the label as a custom overlay\n    const latLng = position.lat && position.lng ? \n      new google.maps.LatLng(position.lat, position.lng) : \n      this._toLatLng(position);\n            \n    // Create styles for the label\n    const fontStyle = style.font || '12px Arial';\n    const fillColor = style.fillColor || 'black';\n    const strokeColor = style.strokeColor || 'white';\n    const strokeWidth = style.strokeWidth || 3;\n        \n    // Custom overlay implementation for the label\n    class LabelOverlay extends google.maps.OverlayView {\n      constructor(map, latLng, text, style) {\n        super();\n        this.map = map;\n        this.latLng = latLng;\n        this.text = text;\n        this.style = style;\n        this.div = null;\n        this.setMap(map);\n      }\n            \n      onAdd() {\n        const div = document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.padding = '2px 6px';\n        div.style.borderRadius = '3px';\n        div.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n        div.style.font = this.style.font;\n        div.style.color = this.style.fillColor;\n        div.style.textShadow = `${this.style.strokeWidth}px 0 ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                       0 ${this.style.strokeWidth}px ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                       -${this.style.strokeWidth}px 0 ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                       0 -${this.style.strokeWidth}px ${this.style.strokeWidth}px ${this.style.strokeColor}`;\n        div.style.whiteSpace = 'nowrap';\n        div.style.userSelect = 'none';\n        div.style.pointerEvents = 'none'; // Don't block mouse events\n        div.innerHTML = this.text;\n                \n        this.div = div;\n        const panes = this.getPanes();\n        panes.overlayLayer.appendChild(div);\n      }\n            \n      draw() {\n        if (!this.div) return;\n                \n        const overlayProjection = this.getProjection();\n        const position = overlayProjection.fromLatLngToDivPixel(this.latLng);\n                \n        // Position the label\n        this.div.style.left = `${position.x}px`;\n        this.div.style.top = `${position.y}px`;\n        this.div.style.transform = 'translate(-50%, -100%)'; // Position above the point\n      }\n            \n      onRemove() {\n        if (this.div) {\n          this.div.parentNode.removeChild(this.div);\n          this.div = null;\n        }\n      }\n            \n      setPosition(latLng) {\n        this.latLng = latLng;\n        this.draw();\n      }\n            \n      setText(text) {\n        this.text = text;\n        if (this.div) {\n          this.div.innerHTML = text;\n        }\n      }\n            \n      setStyle(style) {\n        this.style = { ...this.style, ...style };\n        if (this.div) {\n          this.div.style.font = this.style.font;\n          this.div.style.color = this.style.fillColor;\n          this.div.style.textShadow = `${this.style.strokeWidth}px 0 ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                               0 ${this.style.strokeWidth}px ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                               -${this.style.strokeWidth}px 0 ${this.style.strokeWidth}px ${this.style.strokeColor}, \n                                               0 -${this.style.strokeWidth}px ${this.style.strokeWidth}px ${this.style.strokeColor}`;\n        }\n      }\n    }\n        \n    // Create the label overlay\n    const label = new LabelOverlay(\n      this.map, \n      latLng, \n      text, \n      {\n        font: fontStyle,\n        fillColor: fillColor,\n        strokeColor: strokeColor,\n        strokeWidth: strokeWidth,\n      },\n    );\n        \n    // Store for management\n    this._labels.push(label);\n        \n    return label;\n  }\n    \n  /**\n     * Remove a label from the map\n     * @param {Object} label - The label to remove\n     * @returns {void}\n     */\n  removeLabel(label) {\n    if (!label) return;\n        \n    // Remove the label from the map\n    label.setMap(null);\n        \n    // Remove from our tracking array\n    if (this._labels) {\n      const index = this._labels.indexOf(label);\n      if (index !== -1) {\n        this._labels.splice(index, 1);\n      }\n    }\n  }\n}","/**\n * Leaflet implementation of the Map Interface\n * @module gnss/survey/map/LeafletAdapter\n */\nimport { MapInterface } from './MapInterface.js';\nimport { Coordinate } from '../core/Coordinate.js';\n\nexport class LeafletAdapter extends MapInterface {\n  /**\n     * Initialize the Leaflet adapter\n     * @param {Object} options - Configuration options for Leaflet\n     * @param {Object} [options.mapOptions] - Leaflet initialization options\n     * @param {string} [options.tileLayerUrl] - URL for the tile layer\n     * @param {Object} [options.tileLayerOptions] - Options for the tile layer\n     */\n  constructor(options = {}) {\n    super(options);\n        \n    this.map = null;\n    this.apiLoaded = false;\n    this.mapOptions = options.mapOptions || {\n      center: [0, 0],\n      zoom: 2,\n      minZoom: 2,\n      maxZoom: 18,\n    };\n        \n    this.tileLayerUrl = options.tileLayerUrl || \n            'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n            \n    // Keep track of event listeners for cleanup\n    // Structure: Map<eventType, Map<listenerFunction, handle>>\n    this.eventListeners = new Map();\n        \n    this.tileLayerOptions = options.tileLayerOptions || {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    };\n        \n    // Keep track of event listeners for cleanup\n    this.eventListeners = new Map();\n  }\n    \n  /**\n     * Set the cursor style for the map\n     * @param {string} cursorType - CSS cursor value (e.g., 'default', 'pointer', 'crosshair')\n     * @returns {void}\n     */\n  setCursor(cursorType) {\n    if (!this.map) {\n      return;\n    }\n    this.map.getContainer().style.cursor = cursorType;\n  }\n    \n  /**\n     * Load the Leaflet API if not already loaded\n     * @returns {Promise<void>} - Promise that resolves when the API is loaded\n     * @private\n     */\n  async _loadLeafletAPI() {\n    if (window.L) {\n      this.apiLoaded = true;\n      return Promise.resolve();\n    }\n        \n    const loadCSS = new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n      link.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';\n      link.crossOrigin = '';\n      link.onload = resolve;\n      link.onerror = () => reject(new Error('Failed to load Leaflet CSS'));\n      document.head.appendChild(link);\n    });\n        \n    const loadJS = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n      script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';\n      script.crossOrigin = '';\n      script.async = true;\n      script.onload = () => {\n        this.apiLoaded = true;\n        resolve();\n      };\n      script.onerror = () => reject(new Error('Failed to load Leaflet JS'));\n      document.head.appendChild(script);\n    });\n        \n    return Promise.all([loadCSS, loadJS]);\n  }\n    \n  /**\n     * Initialize the map with the specified container\n     * @param {string|HTMLElement} container - The HTML element or element ID to contain the map\n     * @returns {Promise<void>} - Promise that resolves when the map is initialized\n     */\n  async initialize(container) {\n    await this._loadLeafletAPI();\n        \n    const element = typeof container === 'string' \n      ? document.getElementById(container) \n      : container;\n            \n    if (!element) {\n      throw new Error(`Map container element not found: ${container}`);\n    }\n        \n    this.map = L.map(element, this.mapOptions);\n        \n    // Add the base tile layer\n    L.tileLayer(this.tileLayerUrl, this.tileLayerOptions).addTo(this.map);\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Convert a Coordinate to a Leaflet LatLng\n     * @param {Coordinate} coordinate - The coordinate to convert\n     * @returns {L.LatLng} - Leaflet LatLng object\n     * @private\n     */\n  _toLatLng(coordinate) {\n    return L.latLng(coordinate.latitude, coordinate.longitude);\n  }\n    \n  /**\n     * Convert a Leaflet LatLng to a Coordinate\n     * @param {L.LatLng} latLng - The Leaflet LatLng to convert\n     * @param {number} [elevation] - Optional elevation value\n     * @returns {Coordinate} - Coordinate instance\n     * @private\n     */\n  _toCoordinate(latLng, elevation = null) {\n    return new Coordinate(latLng.lat, latLng.lng, elevation);\n  }\n    \n  /**\n     * Set the center of the map to the specified coordinate\n     * @param {Coordinate} coordinate - The coordinate to center the map on\n     * @returns {Promise<void>} - Promise that resolves when the map is centered\n     */\n  async setCenter(coordinate) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    this.map.setView(this._toLatLng(coordinate), this.map.getZoom());\n    return Promise.resolve();\n  }\n    \n  /**\n     * Set the zoom level of the map\n     * @param {number} zoomLevel - The zoom level to set\n     * @returns {Promise<void>} - Promise that resolves when the zoom is set\n     */\n  async setZoom(zoomLevel) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    this.map.setZoom(zoomLevel);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a marker to the map\n     * @param {Coordinate} coordinate - The coordinate to place the marker\n     * @param {Object} options - Configuration options for the marker\n     * @returns {Promise<Object>} - Promise that resolves with the created marker instance\n     */\n  async addMarker(coordinate, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const markerOptions = {\n      title: options.title || '',\n      alt: options.label || '',\n      draggable: options.draggable || false,\n      ...options.markerOptions,\n    };\n        \n    // Handle custom icon if provided\n    if (options.icon) {\n      if (typeof options.icon === 'string') {\n        // Simple URL icon\n        markerOptions.icon = L.icon({\n          iconUrl: options.icon,\n          iconSize: options.iconSize || [25, 41],\n          iconAnchor: options.iconAnchor || [12, 41],\n          popupAnchor: options.popupAnchor || [1, -34],\n        });\n      } else if (options.icon.options) {\n        // Already a Leaflet icon\n        markerOptions.icon = options.icon;\n      }\n    }\n        \n    const marker = L.marker(\n      [coordinate.latitude, coordinate.longitude], \n      markerOptions,\n    ).addTo(this.map);\n        \n    // Store elevation in marker object for future reference\n    marker.elevation = coordinate.elevation;\n        \n    return Promise.resolve(marker);\n  }\n    \n  /**\n     * Remove a marker from the map\n     * @param {Object} marker - The marker instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the marker is removed\n     */\n  async removeMarker(marker) {\n    if (!marker) {\n      return Promise.resolve();\n    }\n        \n    this.map.removeLayer(marker);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a polyline to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polyline\n     * @param {Object} options - Configuration options for the polyline\n     * @returns {Promise<Object>} - Promise that resolves with the created polyline instance\n     */\n  async addPolyline(coordinates, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const latLngs = coordinates.map(coord => [coord.latitude, coord.longitude]);\n        \n    const polylineOptions = {\n      color: options.strokeColor || '#FF0000',\n      opacity: options.strokeOpacity || 1.0,\n      weight: options.strokeWeight || 3,\n      ...options.polylineOptions,\n    };\n        \n    const polyline = L.polyline(latLngs, polylineOptions).addTo(this.map);\n        \n    // Store original coordinates with elevation data\n    polyline.originalCoordinates = [...coordinates];\n        \n    return Promise.resolve(polyline);\n  }\n    \n  /**\n     * Remove a polyline from the map\n     * @param {Object} polyline - The polyline instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polyline is removed\n     */\n  async removePolyline(polyline) {\n    if (!polyline) {\n      return Promise.resolve();\n    }\n        \n    this.map.removeLayer(polyline);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a polygon to the map\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the polygon\n     * @param {Object} options - Configuration options for the polygon\n     * @returns {Promise<Object>} - Promise that resolves with the created polygon instance\n     */\n  async addPolygon(coordinates, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const latLngs = coordinates.map(coord => [coord.latitude, coord.longitude]);\n        \n    const polygonOptions = {\n      color: options.strokeColor || '#FF0000',\n      opacity: options.strokeOpacity || 0.8,\n      weight: options.strokeWeight || 2,\n      fillColor: options.fillColor || '#FF0000',\n      fillOpacity: options.fillOpacity || 0.35,\n      ...options.polygonOptions,\n    };\n        \n    const polygon = L.polygon(latLngs, polygonOptions).addTo(this.map);\n        \n    // Store original coordinates with elevation data\n    polygon.originalCoordinates = [...coordinates];\n        \n    return Promise.resolve(polygon);\n  }\n    \n  /**\n     * Remove a polygon from the map\n     * @param {Object} polygon - The polygon instance to remove\n     * @returns {Promise<void>} - Promise that resolves when the polygon is removed\n     */\n  async removePolygon(polygon) {\n    if (!polygon) {\n      return Promise.resolve();\n    }\n        \n    this.map.removeLayer(polygon);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Get the current visible bounds of the map\n     * @returns {Promise<Object>} - Promise that resolves with the bounds object\n     */\n  async getBounds() {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    const bounds = this.map.getBounds();\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n        \n    return Promise.resolve({\n      north: ne.lat,\n      east: ne.lng,\n      south: sw.lat,\n      west: sw.lng,\n      northEast: this._toCoordinate(ne),\n      southWest: this._toCoordinate(sw),\n    });\n  }\n    \n  /**\n     * Fit the map view to the specified bounds\n     * @param {Object} bounds - The bounds to fit the map to\n     * @param {Object} options - Configuration options for fitting\n     * @returns {Promise<void>} - Promise that resolves when the map is fitted to bounds\n     */\n  async fitBounds(bounds, options = {}) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    let leafletBounds;\n        \n    if (bounds.northEast && bounds.southWest) {\n      leafletBounds = L.latLngBounds(\n        this._toLatLng(bounds.southWest),\n        this._toLatLng(bounds.northEast),\n      );\n    } else if (bounds.north && bounds.south && bounds.east && bounds.west) {\n      leafletBounds = L.latLngBounds(\n        L.latLng(bounds.south, bounds.west),\n        L.latLng(bounds.north, bounds.east),\n      );\n    } else if (Array.isArray(bounds)) {\n      // Assume array of coordinates\n      const latLngs = bounds.map(coord => this._toLatLng(coord));\n      leafletBounds = L.latLngBounds(latLngs);\n    } else {\n      throw new Error('Invalid bounds format');\n    }\n        \n    const fitOptions = {\n      padding: options.padding ? L.point(options.padding, options.padding) : null,\n      maxZoom: options.maxZoom || null,\n      animate: options.animate !== false,\n      ...options.fitOptions,\n    };\n        \n    this.map.fitBounds(leafletBounds, fitOptions);\n    return Promise.resolve();\n  }\n    \n  /**\n     * Register an event listener on the map\n     * @param {string} eventType - The type of event to listen for\n     * @param {Function} listener - The callback function to execute when the event occurs\n     * @returns {Promise<Object>} - Promise that resolves with the listener handle\n     */\n  async addEventListener(eventType, listener) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    // Map common event types to Leaflet event types\n    const leafletEventType = eventType === 'click' ? 'click' :\n      eventType === 'zoom_changed' ? 'zoomend' :\n        eventType === 'center_changed' ? 'moveend' :\n          eventType === 'bounds_changed' ? 'moveend' :\n            eventType;\n        \n    const handlerFunction = event => {\n      // Convert Leaflet events to a standard format\n      const convertedEvent = {\n        type: eventType,\n        originalEvent: event,\n      };\n            \n      // Add coordinate and pixel information for mouse events\n      if (event.latlng) {\n        // Convert latlng to coordinate\n        convertedEvent.coordinate = this._toCoordinate(event.latlng);\n                \n        // Add pixel coordinates\n        const pixel = this.coordinateToPixel(convertedEvent.coordinate);\n        convertedEvent.pixel = pixel;\n      }\n            \n      listener(convertedEvent);\n    };\n        \n    this.map.on(leafletEventType, handlerFunction);\n        \n    // Create a handle object for removing later\n    const handle = {\n      leafletEventType,\n      handlerFunction,\n    };\n        \n    // Keep track of the listener for later cleanup\n    // Store both the function reference and the handle\n    if (!this.eventListeners.has(eventType)) {\n      this.eventListeners.set(eventType, new Map());\n    }\n    this.eventListeners.get(eventType).set(listener, handle);\n        \n    return Promise.resolve(handle);\n  }\n    \n  /**\n     * Remove an event listener from the map\n     * @param {string} eventType - The type of event\n     * @param {Function|Object} listenerOrHandle - The listener function or handle to remove\n     * @returns {Promise<void>} - Promise that resolves when the listener is removed\n     */\n  async removeEventListener(eventType, listenerOrHandle) {\n    if (!listenerOrHandle || !this.map) {\n      return Promise.resolve();\n    }\n        \n    let handle = listenerOrHandle;\n        \n    // Check if this is a function reference instead of a handle\n    if (typeof listenerOrHandle === 'function') {\n      // Look up the handle from our mapping\n      if (this.eventListeners.has(eventType) && \n                this.eventListeners.get(eventType).has(listenerOrHandle)) {\n        handle = this.eventListeners.get(eventType).get(listenerOrHandle);\n                \n        // Remove the mapping\n        this.eventListeners.get(eventType).delete(listenerOrHandle);\n      } else {\n        // If we don't have a mapping, we can't remove it\n        console.warn(`No event listener found for ${eventType}`);\n        return Promise.resolve();\n      }\n    }\n        \n    // Remove the event listener using the handle\n    try {\n      this.map.off(handle.leafletEventType, handle.handlerFunction);\n    } catch (e) {\n      console.warn(`Error removing listener for ${eventType}:`, e);\n    }\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Get the elevation at a specific coordinate\n     * Note: Leaflet doesn't provide an elevation service, so this is a stub implementation\n     * that will need to be implemented with a third-party service\n     * @param {Coordinate} coordinate - The coordinate to get elevation for\n     * @returns {Promise<number>} - Promise that resolves with the elevation in meters\n     */\n  async getElevation(coordinate) {\n    // If coordinate already has elevation, return it\n    if (coordinate.elevation !== null && coordinate.elevation !== undefined) {\n      return Promise.resolve(coordinate.elevation);\n    }\n        \n    // This is where you would integrate with a third-party elevation service\n    // For example, open-elevation, mapzen, or the Google Maps Elevation API\n    // For now, just return 0 as a placeholder\n    console.warn('LeafletAdapter.getElevation: No elevation service configured');\n    return Promise.resolve(0);\n  }\n    \n  /**\n     * Get elevations for a path of coordinates\n     * Note: Leaflet doesn't provide an elevation service, so this is a stub implementation\n     * that will need to be implemented with a third-party service\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the path\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForPath(coordinates) {\n    // Use any existing elevation data\n    const elevations = coordinates.map(coord => {\n      return (coord.elevation !== null && coord.elevation !== undefined) \n        ? coord.elevation \n        : 0;\n    });\n        \n    console.warn('LeafletAdapter.getElevationsForPath: No elevation service configured');\n    return Promise.resolve(elevations);\n  }\n    \n  /**\n     * Convert a geographic coordinate to pixel coordinates on the map\n     * @param {Coordinate} coordinate - The geographic coordinate to convert\n     * @returns {Array<number>} - [x, y] pixel coordinates\n     */\n  coordinateToPixel(coordinate) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    // Convert coordinate to Leaflet LatLng\n    const latLng = L.latLng(coordinate.lat, coordinate.lng);\n        \n    // Get the pixel coordinates\n    const point = this.map.latLngToContainerPoint(latLng);\n        \n    return [point.x, point.y];\n  }\n    \n  /**\n     * Convert pixel coordinates to a geographic coordinate\n     * @param {Array<number>} pixel - [x, y] pixel coordinates relative to the map container\n     * @returns {Coordinate} - The geographic coordinate\n     */\n  pixelToCoordinate(pixel) {\n    if (!this.map) {\n      throw new Error('Map not initialized. Call initialize() first.');\n    }\n        \n    // Convert pixel coordinates to Leaflet Point\n    const point = L.point(pixel[0], pixel[1]);\n        \n    // Convert to LatLng\n    const latLng = this.map.containerPointToLatLng(point);\n        \n    // Return as a Coordinate\n    return this._toCoordinate(latLng);\n  }\n}","/**\n * Google Maps Elevation Service implementation\n * @module gnss/survey/map/GoogleMapsElevationService\n */\nimport { ElevationService } from './ElevationService.js';\nimport { Coordinate as _Coordinate } from '../core/Coordinate.js';\n\nexport class GoogleMapsElevationService extends ElevationService {\n  /**\n     * Initialize the Google Maps Elevation Service\n     * @param {Object} options - Configuration options\n     * @param {string} [options.apiKey] - Google Maps API key (optional if already loaded)\n     */\n  constructor(options = {}) {\n    super(options);\n        \n    this.apiLoaded = false;\n    this.apiKey = options.apiKey;\n    this.elevationService = null;\n  }\n    \n  /**\n     * Load the Google Maps API if not already loaded\n     * @returns {Promise<void>} - Promise that resolves when the API is loaded\n     * @private\n     */\n  async _loadGoogleMapsAPI() {\n    if (window.google && window.google.maps) {\n      this.apiLoaded = true;\n            \n      if (!this.elevationService && window.google.maps.ElevationService) {\n        this.elevationService = new google.maps.ElevationService();\n      }\n            \n      return;\n    }\n        \n    if (!this.apiKey) {\n      throw new Error('Google Maps API key is required for initialization');\n    }\n        \n    return new Promise((resolve, reject) => {\n      const callbackName = `GoogleMapsCallback_${Date.now()}`;\n      window[callbackName] = () => {\n        this.apiLoaded = true;\n        this.elevationService = new google.maps.ElevationService();\n        delete window[callbackName];\n        resolve();\n      };\n            \n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&callback=${callbackName}&libraries=geometry`;\n      script.async = true;\n      script.defer = true;\n      script.onerror = () => reject(new Error('Failed to load Google Maps API'));\n      document.head.appendChild(script);\n    });\n  }\n    \n  /**\n     * Convert a Coordinate to a Google Maps LatLng\n     * @param {Coordinate} coordinate - The coordinate to convert\n     * @returns {google.maps.LatLng} - Google Maps LatLng object\n     * @private\n     */\n  _toLatLng(coordinate) {\n    return new google.maps.LatLng(coordinate.latitude, coordinate.longitude);\n  }\n    \n  /**\n     * Get the elevation at a specific coordinate\n     * @param {Coordinate} coordinate - The coordinate to get elevation for\n     * @returns {Promise<number>} - Promise that resolves with the elevation in meters\n     */\n  async getElevation(coordinate) {\n    // Initialize the API if needed\n    if (!this.apiLoaded) {\n      await this._loadGoogleMapsAPI();\n    }\n        \n    // If coordinate already has elevation, return it\n    if (coordinate.elevation !== null && coordinate.elevation !== undefined) {\n      return Promise.resolve(coordinate.elevation);\n    }\n        \n    const locations = [this._toLatLng(coordinate)];\n        \n    return new Promise((resolve, reject) => {\n      this.elevationService.getElevationForLocations({ locations }, (results, status) => {\n        if (status === google.maps.ElevationStatus.OK && results && results.length > 0) {\n          resolve(results[0].elevation);\n        } else {\n          reject(new Error(`Elevation service failed: ${status}`));\n        }\n      });\n    });\n  }\n    \n  /**\n     * Get elevations for a path of coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates for the path\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForPath(coordinates) {\n    // Initialize the API if needed\n    if (!this.apiLoaded) {\n      await this._loadGoogleMapsAPI();\n    }\n        \n    const path = coordinates.map(coord => this._toLatLng(coord));\n        \n    // Google's API has a limit on the number of samples, so chunk if needed\n    const MAX_SAMPLES = 512; // Google's limit\n    const samples = Math.min(coordinates.length, MAX_SAMPLES);\n        \n    return new Promise((resolve, reject) => {\n      this.elevationService.getElevationAlongPath(\n        {\n          path: path,\n          samples: samples,\n        },\n        (results, status) => {\n          if (status === google.maps.ElevationStatus.OK && results && results.length > 0) {\n            const elevations = results.map(result => result.elevation);\n            resolve(elevations);\n          } else {\n            reject(new Error(`Elevation service failed: ${status}`));\n          }\n        },\n      );\n    });\n  }\n    \n  /**\n     * Get elevations for an array of coordinates\n     * @param {Array<Coordinate>} coordinates - Array of coordinates to get elevations for\n     * @returns {Promise<Array<number>>} - Promise that resolves with array of elevations in meters\n     */\n  async getElevationsForLocations(coordinates) {\n    // Initialize the API if needed\n    if (!this.apiLoaded) {\n      await this._loadGoogleMapsAPI();\n    }\n        \n    // Google has a limit of 512 locations per request, so we may need to batch\n    const MAX_LOCATIONS = 512;\n    const batches = [];\n        \n    for (let i = 0; i < coordinates.length; i += MAX_LOCATIONS) {\n      const batchCoordinates = coordinates.slice(i, i + MAX_LOCATIONS);\n      const locations = batchCoordinates.map(coord => this._toLatLng(coord));\n            \n      batches.push(\n        new Promise((resolve, reject) => {\n          this.elevationService.getElevationForLocations(\n            { locations },\n            (results, status) => {\n              if (status === google.maps.ElevationStatus.OK && results) {\n                resolve(results.map(result => result.elevation));\n              } else {\n                reject(new Error(`Elevation service failed: ${status}`));\n              }\n            },\n          );\n        }),\n      );\n    }\n        \n    // Wait for all batches to complete and combine results\n    const results = await Promise.all(batches);\n    return results.flat();\n  }\n}","/**\n * Map Factory - Creates map instances based on provider type\n * @module gnss/survey/map/MapFactory\n */\nimport { GoogleMapsAdapter } from './GoogleMapsAdapter.js';\nimport { LeafletAdapter } from './LeafletAdapter.js';\nimport { MapInterface as _MapInterface } from './MapInterface.js';\n\nexport class MapFactory {\n  /**\n     * Create a map instance based on the provider type\n     * @param {string} providerType - The map provider type ('google', 'leaflet', etc.)\n     * @param {Object} options - Configuration options for the map provider\n     * @returns {MapInterface} - A map interface instance\n     */\n  static createMap(providerType, options = {}) {\n    switch (providerType.toLowerCase()) {\n    case 'google':\n      return new GoogleMapsAdapter(options);\n                \n    case 'leaflet':\n      return new LeafletAdapter(options);\n                \n    default:\n      throw new Error(`Unsupported map provider type: ${providerType}`);\n    }\n  }\n    \n  /**\n     * Check if a map provider is available\n     * @param {string} providerType - The map provider type ('google', 'leaflet', etc.)\n     * @param {Object} [options={}] - Configuration options with potential API keys\n     * @returns {boolean} - True if the provider is available\n     */\n  static isProviderAvailable(providerType, options = {}) {\n    switch (providerType.toLowerCase()) {\n    case 'google':\n      return typeof window !== 'undefined' && \n                      (window.google !== undefined || options.apiKey !== undefined);\n                \n    case 'leaflet':\n      return typeof window !== 'undefined';\n                \n    default:\n      return false;\n    }\n  }\n    \n  /**\n     * Get a list of supported map providers\n     * @returns {Array<string>} - Array of supported provider types\n     */\n  static getSupportedProviders() {\n    return ['google', 'leaflet'];\n  }\n}","/**\n * Abstract Feature Rendering Strategy Interface\n * @module gnss/survey/map/rendering/RenderingStrategy\n */\nexport class RenderingStrategy {\n  /**\n     * Initialize the rendering strategy\n     * @param {MapInterface} map - The map interface to render features on\n     * @param {Object} options - Configuration options for the rendering strategy\n     */\n  constructor(map, options = {}) {\n    if (this.constructor === RenderingStrategy) {\n      throw new Error('Abstract class \\'RenderingStrategy\\' cannot be instantiated directly.');\n    }\n        \n    this.map = map;\n    this.options = options;\n  }\n    \n  /**\n     * Render a point feature on the map\n     * @param {Object} feature - The point feature to render\n     * @param {Coordinate} feature.coordinate - The coordinate of the point\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderPoint(_feature, _options = {}) {\n    throw new Error('Method \\'renderPoint()\\' must be implemented.');\n  }\n    \n  /**\n     * Render a line feature on the map\n     * @param {Object} feature - The line feature to render\n     * @param {Array<Coordinate>} feature.coordinates - The coordinates of the line\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderLine(_feature, _options = {}) {\n    throw new Error('Method \\'renderLine()\\' must be implemented.');\n  }\n    \n  /**\n     * Render a polygon feature on the map\n     * @param {Object} feature - The polygon feature to render\n     * @param {Array<Coordinate>} feature.coordinates - The coordinates of the polygon boundary\n     * @param {Array<Array<Coordinate>>} [feature.holes] - Arrays of coordinates for any holes\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderPolygon(_feature, _options = {}) {\n    throw new Error('Method \\'renderPolygon()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove a rendered feature from the map\n     * @param {Object} renderedFeature - The rendered feature to remove\n     * @returns {Promise<void>} - Promise that resolves when the feature is removed\n     */\n  async removeFeature(_renderedFeature) {\n    throw new Error('Method \\'removeFeature()\\' must be implemented.');\n  }\n    \n  /**\n     * Update a rendered feature on the map\n     * @param {Object} renderedFeature - The previously rendered feature\n     * @param {Object} updatedFeature - The updated feature data\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the updated rendered feature\n     */\n  async updateFeature(_renderedFeature, _updatedFeature, _options = {}) {\n    throw new Error('Method \\'updateFeature()\\' must be implemented.');\n  }\n    \n  /**\n     * Highlight a rendered feature on the map\n     * @param {Object} renderedFeature - The rendered feature to highlight\n     * @param {Object} options - Highlight options\n     * @returns {Promise<void>} - Promise that resolves when the feature is highlighted\n     */\n  async highlightFeature(_renderedFeature, _options = {}) {\n    throw new Error('Method \\'highlightFeature()\\' must be implemented.');\n  }\n    \n  /**\n     * Remove highlight from a rendered feature\n     * @param {Object} renderedFeature - The rendered feature to unhighlight\n     * @returns {Promise<void>} - Promise that resolves when the highlight is removed\n     */\n  async unhighlightFeature(_renderedFeature) {\n    throw new Error('Method \\'unhighlightFeature()\\' must be implemented.');\n  }\n}","/**\n * Google Maps implementation of the rendering strategy\n * @module gnss/survey/map/rendering/GoogleMapsRenderingStrategy\n */\nimport { RenderingStrategy } from './RenderingStrategy.js';\n\nexport class GoogleMapsRenderingStrategy extends RenderingStrategy {\n  /**\n     * Initialize the Google Maps rendering strategy\n     * @param {GoogleMapsAdapter} map - The Google Maps adapter\n     * @param {Object} options - Configuration options\n     */\n  constructor(map, options = {}) {\n    super(map, options);\n        \n    if (!map || !map.map) {\n      throw new Error('GoogleMapsRenderingStrategy requires a valid GoogleMapsAdapter instance');\n    }\n        \n    // Store reference to the actual Google Map instance\n    this.googleMap = map.map;\n        \n    // Track rendered features for update/remove operations\n    this.renderedFeatures = new Map();\n  }\n    \n  /**\n     * Render a point feature on the map\n     * @param {Object} feature - The point feature to render\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderPoint(feature, options = {}) {\n    try {\n      const coordinate = feature.getCoordinate ? feature.getCoordinate() : feature.coordinate;\n      if (!coordinate) {\n        throw new Error('Invalid point feature: no coordinate found');\n      }\n\n      // Enhanced debug logging - clearly mark the start of point rendering\n      console.log('========== RENDERING POINT ==========');\n      console.log(`Coordinate: ${coordinate.lat.toFixed(6)}, ${coordinate.lng.toFixed(6)}`);\n      console.log(`Feature ID: ${feature.id || 'unknown'}`);\n      console.log(`Source: ${feature.properties?.source || 'standard'}`);\n\n      const style = feature.style || options.style || this.options.defaultPointStyle || {};\n      console.log(`Marker style: ${style.useDualMarker ? 'dual-marker' : (style.iconUrl ? 'image' : 'circle')}`);\n      console.log(`Marker color: ${style.color || 'default'}`);\n      console.log('=======================================');\n            \n      // Check for availability of Advanced Markers\n      if (!this._isAdvancedMarkerAvailable()) {\n        throw new Error('Advanced Markers are required and not available in the current Google Maps API version');\n      }\n            \n      // Get marker icon/content configuration\n      const iconConfig = this._createMarkerIcon(style, feature);\n            \n      // Advanced markers configuration - simpler now since we handle positioning with CSS\n      const markerOptions = {\n        position: { lat: coordinate.lat, lng: coordinate.lng },\n        map: this.googleMap,\n        title: feature.name || feature.properties?.name || '',\n        gmpDraggable: options.draggable || false,\n        content: iconConfig.content,\n      };\n            \n      // Create the Advanced Marker\n      const marker = new google.maps.marker.AdvancedMarkerElement(markerOptions);\n            \n      // Store original feature reference\n      marker.originalFeature = feature;\n            \n      // Add click event handler if needed\n      if (options.onClick || options.selectable !== false) {\n        // Advanced markers use the 'gmp-click' event (required for Google Maps Platform)\n        marker.addEventListener('gmp-click', (event) => {\n          // Log that we received a marker click event\n          console.log(`Advanced marker gmp-click received for feature: ${feature.id}`);\n                    \n          // Prevent propagation where possible\n          if (event.stopPropagation) {\n            event.stopPropagation();\n          }\n                    \n          // Stop immediate propagation if available\n          if (event.stopImmediatePropagation) {\n            event.stopImmediatePropagation();\n          }\n                    \n          // Prevent default action\n          if (event.preventDefault) {\n            event.preventDefault();\n          }\n                    \n          if (options.onClick) {\n            options.onClick({\n              feature,\n              renderedFeature: marker,\n              originalEvent: event,\n            });\n          }\n                    \n          if (options.selectable !== false) {\n            this._handleFeatureClick(feature, marker, event);\n          }\n                    \n          return false;\n        });\n      }\n            \n      // Store the rendered feature\n      const renderedFeature = {\n        id: feature.id,\n        type: 'point',\n        originalFeature: feature,\n        renderedObject: marker,\n        options,\n      };\n            \n      this.renderedFeatures.set(feature.id, renderedFeature);\n      return renderedFeature;\n    } catch (error) {\n      console.error('Error rendering point feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Render a line feature on the map\n     * @param {Object} feature - The line feature to render\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderLine(feature, options = {}) {\n    try {\n      // Use let instead of const since we might need to reassign it\n      let coordinates = feature.getCoordinates ? feature.getCoordinates() : feature.coordinates;\n            \n      // Ensure coordinates exist and are an array\n      if (!coordinates || !Array.isArray(coordinates)) {\n        console.warn('Line feature has no coordinates array');\n        // Create a placeholder empty array\n        coordinates = [];\n      }\n            \n      // Get line style from feature or options\n      const style = feature.style || options.style || this.options.defaultLineStyle || {};\n            \n      // Handle empty or insufficient coordinates for preview features\n      let path;\n      if (coordinates.length < 2) {\n        // For preview/temporary features (like during drawing), use a small invisible line\n        // that can be updated later\n        if (feature.properties?.temporary || feature.properties?.isPreview) {\n          console.log(`Creating initial placeholder line with ${coordinates.length} points`);\n                    \n          // Make a temporary path with two nearby points if we have none\n          // or duplicate the single point if we have one\n          if (coordinates.length === 0) {\n            // Use center of the map for placeholders\n            const center = this.googleMap.getCenter();\n            path = [\n              { lat: center.lat(), lng: center.lng() },\n              { lat: center.lat(), lng: center.lng() },\n            ];\n          } else {\n            // Duplicate the single coordinate\n            const singleCoord = coordinates[0];\n            path = [\n              { lat: singleCoord.lat, lng: singleCoord.lng },\n              { lat: singleCoord.lat, lng: singleCoord.lng },\n            ];\n          }\n        } else {\n          // For permanent features, we'll enforce the minimum coordinate requirement\n          throw new Error('Invalid permanent line feature: insufficient coordinates (need at least 2)');\n        }\n      } else {\n        // Normal case - convert existing coordinates to Google Maps path\n        path = coordinates.map(coord => ({\n          lat: coord.lat,\n          lng: coord.lng,\n        }));\n      }\n            \n      // Create polyline options\n      const polylineOptions = {\n        path,\n        map: this.googleMap,\n        geodesic: options.geodesic !== false,\n        strokeColor: style.color || style.strokeColor || '#3388FF',\n        strokeOpacity: style.opacity || style.strokeOpacity || 1.0,\n        strokeWeight: style.width || style.strokeWeight || 3,\n        clickable: true,\n        // Ensure it's on top and interactive\n        zIndex: 100,\n      };\n            \n      // Create the polyline\n      const polyline = new google.maps.Polyline(polylineOptions);\n            \n      // Store original feature reference\n      polyline.originalFeature = feature;\n            \n      // Add click event handler if needed\n      if (options.onClick || options.selectable !== false) {\n        polyline.addListener('click', (event) => {\n          // Log that we received a line click event\n          console.log(`Line click received for feature: ${feature.id}`);\n                    \n          // Prevent propagation to the map\n          if (event.stop) event.stop();\n          if (event.domEvent && event.domEvent.stopPropagation) {\n            event.domEvent.stopPropagation();\n          }\n          if (event.originalEvent && event.originalEvent.stopPropagation) {\n            event.originalEvent.stopPropagation();\n          }\n                    \n          // Ensure we stop immediate propagation too if available\n          if (event.domEvent && event.domEvent.stopImmediatePropagation) {\n            event.domEvent.stopImmediatePropagation();\n          }\n                    \n          // Force preventDefault to ensure no other handlers run\n          if (event.domEvent && event.domEvent.preventDefault) {\n            event.domEvent.preventDefault();\n          }\n                    \n          if (options.onClick) {\n            options.onClick({\n              feature,\n              renderedFeature: polyline,\n              originalEvent: event,\n            });\n          }\n                    \n          if (options.selectable !== false) {\n            this._handleFeatureClick(feature, polyline, event);\n          }\n                    \n          // Return false to try to prevent event bubbling\n          return false;\n        });\n      }\n            \n      // Store the rendered feature\n      const renderedFeature = {\n        id: feature.id,\n        type: 'line',\n        originalFeature: feature,\n        renderedObject: polyline,\n        options,\n      };\n            \n      this.renderedFeatures.set(feature.id, renderedFeature);\n      return renderedFeature;\n    } catch (error) {\n      console.error('Error rendering line feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Render a polygon feature on the map\n     * @param {Object} feature - The polygon feature to render\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderPolygon(feature, options = {}) {\n    try {\n      // For polygons, we need to handle rings correctly\n      let paths = [];\n            \n      // Try different methods to get polygon coordinates\n      if (feature.getRings && typeof feature.getRings === 'function') {\n        const rings = feature.getRings();\n        if (rings && rings.length > 0) {\n          // Convert each ring to Google Maps path\n          paths = rings.map(ring => \n            ring.map(coord => ({\n              lat: coord.lat, \n              lng: coord.lng,\n            })),\n          );\n        }\n      } else if (feature.coordinates && Array.isArray(feature.coordinates)) {\n        // If it's a simple array of coordinates (single ring)\n        paths = [feature.coordinates.map(coord => ({\n          lat: coord.lat,\n          lng: coord.lng,\n        }))];\n      }\n            \n      // Handle empty or insufficient coordinates for preview features\n      if (paths.length === 0 || paths[0].length < 3) {\n        // For preview/temporary features (like during drawing), use a placeholder polygon\n        if (feature.properties?.temporary || feature.properties?.isPreview) {\n          console.log(`Creating initial placeholder polygon with ${paths.length > 0 ? paths[0].length : 0} points`);\n                    \n          // Use center of the map for placeholders\n          const center = this.googleMap.getCenter();\n          const lat = center.lat();\n          const lng = center.lng();\n                    \n          // Create a tiny triangle at map center that will be invisible to user\n          // but valid for the Google Maps API\n          paths = [[\n            { lat, lng },\n            { lat, lng: lng + 0.0000001 },\n            { lat: lat + 0.0000001, lng },\n          ]];\n        } else {\n          // For permanent features, enforce the minimum coordinate requirement\n          throw new Error('Invalid permanent polygon feature: insufficient coordinates (need at least 3)');\n        }\n      }\n            \n      // Get polygon style from feature or options\n      const style = feature.style || options.style || this.options.defaultPolygonStyle || {};\n            \n      // Create polygon options\n      const polygonOptions = {\n        paths,\n        map: this.googleMap,\n        strokeColor: style.outlineColor || style.strokeColor || '#3388FF',\n        strokeOpacity: style.outlineOpacity || style.strokeOpacity || 0.8,\n        strokeWeight: style.outlineWidth || style.strokeWeight || 2,\n        fillColor: style.fillColor || '#3388FF',\n        fillOpacity: style.fillOpacity || 0.35,\n        clickable: true,\n        // Ensure it's on top and interactive\n        zIndex: 100,\n      };\n            \n      // Create the polygon\n      const polygon = new google.maps.Polygon(polygonOptions);\n            \n      // Store original feature reference\n      polygon.originalFeature = feature;\n            \n      // Add click event handler if needed\n      if (options.onClick || options.selectable !== false) {\n        polygon.addListener('click', (event) => {\n          // Log that we received a polygon click event\n          console.log(`Polygon click received for feature: ${feature.id}`);\n                    \n          // Prevent propagation to the map\n          if (event.stop) event.stop();\n          if (event.domEvent && event.domEvent.stopPropagation) {\n            event.domEvent.stopPropagation();\n          }\n          if (event.originalEvent && event.originalEvent.stopPropagation) {\n            event.originalEvent.stopPropagation();\n          }\n                    \n          // Ensure we stop immediate propagation too if available\n          if (event.domEvent && event.domEvent.stopImmediatePropagation) {\n            event.domEvent.stopImmediatePropagation();\n          }\n                    \n          // Force preventDefault to ensure no other handlers run\n          if (event.domEvent && event.domEvent.preventDefault) {\n            event.domEvent.preventDefault();\n          }\n                    \n          if (options.onClick) {\n            options.onClick({\n              feature,\n              renderedFeature: polygon,\n              originalEvent: event,\n            });\n          }\n                    \n          if (options.selectable !== false) {\n            this._handleFeatureClick(feature, polygon, event);\n          }\n                    \n          // Return false to try to prevent event bubbling\n          return false;\n        });\n      }\n            \n      // Store the rendered feature\n      const renderedFeature = {\n        id: feature.id,\n        type: 'polygon',\n        originalFeature: feature,\n        renderedObject: polygon,\n        options,\n      };\n            \n      this.renderedFeatures.set(feature.id, renderedFeature);\n      return renderedFeature;\n    } catch (error) {\n      console.error('Error rendering polygon feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Render a feature based on its type\n     * @param {Object} feature - The feature to render\n     * @param {string} featureType - The type of feature ('point', 'line', 'polygon')\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature object\n     */\n  async renderFeatureByType(feature, featureType, options = {}) {\n    switch (featureType) {\n    case 'point':\n      return this.renderPoint(feature, options);\n    case 'line':\n      return this.renderLine(feature, options);\n    case 'polygon':\n      return this.renderPolygon(feature, options);\n    default:\n      throw new Error(`Unsupported feature type: ${featureType}`);\n    }\n  }\n    \n  /**\n     * Remove a rendered feature from the map\n     * @param {Object} renderedFeature - The rendered feature to remove\n     * @returns {Promise<void>} - Promise that resolves when the feature is removed\n     */\n  async removeFeature(renderedFeature) {\n    try {\n      const mapObject = renderedFeature.renderedObject;\n      if (!mapObject) return;\n            \n      // Remove the map object based on its type\n      if (mapObject instanceof google.maps.marker.AdvancedMarkerElement) {\n        // Advanced marker removal\n        mapObject.map = null;\n      } else if (mapObject instanceof google.maps.Polyline ||\n                      mapObject instanceof google.maps.Polygon) {\n        // Polyline and Polygon removal\n        mapObject.setMap(null);\n      }\n            \n      // Remove from tracked features\n      this.renderedFeatures.delete(renderedFeature.id);\n            \n    } catch (error) {\n      console.error('Error removing feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Update a rendered feature on the map\n     * @param {Object} renderedFeature - The previously rendered feature\n     * @param {Object} updatedFeature - The updated feature data\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the updated rendered feature\n     */\n  async updateFeature(renderedFeature, updatedFeature, options = {}) {\n    try {\n      // Remove the existing feature first\n      await this.removeFeature(renderedFeature);\n            \n      // Re-render with updated feature data\n      const newRenderedFeature = await this.renderFeatureByType(\n        updatedFeature, \n        renderedFeature.type,\n        options || renderedFeature.options,\n      );\n            \n      return newRenderedFeature;\n    } catch (error) {\n      console.error('Error updating feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Highlight a rendered feature on the map\n     * @param {Object} renderedFeature - The rendered feature to highlight\n     * @param {Object} options - Highlight options\n     * @returns {Promise<void>} - Promise that resolves when the feature is highlighted\n     */\n  async highlightFeature(renderedFeature, options = {}) {\n    try {\n      const mapObject = renderedFeature.renderedObject;\n      if (!mapObject) return;\n            \n      // Store original styles for later unhighlighting\n      if (!mapObject.originalStyles) {\n        this._storeOriginalStyles(mapObject, renderedFeature.type);\n      }\n            \n      // Apply highlighting based on feature type\n      switch (renderedFeature.type) {\n      case 'point':\n        this._highlightMarker(mapObject, options);\n        break;\n                    \n      case 'line':\n        this._highlightPolyline(mapObject, options);\n        break;\n                    \n      case 'polygon':\n        this._highlightPolygon(mapObject, options);\n        break;\n      }\n    } catch (error) {\n      console.error('Error highlighting feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Remove highlight from a rendered feature\n     * @param {Object} renderedFeature - The rendered feature to unhighlight\n     * @returns {Promise<void>} - Promise that resolves when the highlight is removed\n     */\n  async unhighlightFeature(renderedFeature) {\n    try {\n      const mapObject = renderedFeature.renderedObject;\n      if (!mapObject || !mapObject.originalStyles) return;\n            \n      // Restore original styles based on feature type\n      switch (renderedFeature.type) {\n      case 'point':\n        this._unhighlightMarker(mapObject);\n        break;\n                    \n      case 'line':\n        this._unhighlightPolyline(mapObject);\n        break;\n                    \n      case 'polygon':\n        this._unhighlightPolygon(mapObject);\n        break;\n      }\n    } catch (error) {\n      console.error('Error unhighlighting feature:', error);\n      throw error;\n    }\n  }\n    \n  /**\n     * Store original styles for a map object\n     * @param {Object} mapObject - The map object\n     * @param {string} type - The feature type\n     * @private\n     */\n  _storeOriginalStyles(mapObject, type) {\n    mapObject.originalStyles = {};\n        \n    switch (type) {\n    case 'point':\n      // Advanced Marker styles storage\n      if (mapObject instanceof google.maps.marker.AdvancedMarkerElement && mapObject.content) {\n        const element = mapObject.content;\n        mapObject.originalStyles.transform = element.style.transform;\n        mapObject.originalStyles.boxShadow = element.style.boxShadow;\n        mapObject.originalStyles.zIndex = element.style.zIndex;\n      }\n      break;\n                \n    case 'line':\n      mapObject.originalStyles.strokeColor = mapObject.get('strokeColor');\n      mapObject.originalStyles.strokeWeight = mapObject.get('strokeWeight');\n      mapObject.originalStyles.strokeOpacity = mapObject.get('strokeOpacity');\n      mapObject.originalStyles.zIndex = mapObject.get('zIndex');\n      break;\n                \n    case 'polygon':\n      mapObject.originalStyles.strokeColor = mapObject.get('strokeColor');\n      mapObject.originalStyles.strokeWeight = mapObject.get('strokeWeight');\n      mapObject.originalStyles.strokeOpacity = mapObject.get('strokeOpacity');\n      mapObject.originalStyles.fillColor = mapObject.get('fillColor');\n      mapObject.originalStyles.fillOpacity = mapObject.get('fillOpacity');\n      mapObject.originalStyles.zIndex = mapObject.get('zIndex');\n      break;\n    }\n  }\n    \n  /**\n     * Highlight a marker\n     * @param {Object} marker - The marker to highlight\n     * @param {Object} options - Highlight options\n     * @private\n     */\n  _highlightMarker(marker, options = {}) {\n    const highlightColor = options.color || '#1a73e8';\n        \n    try {\n      // Highlight advanced marker by modifying the content element\n      if (marker.content) {\n        const element = marker.content;\n                \n        // Store original values if not already stored\n        if (!element._originalStyles) {\n          element._originalStyles = {\n            transform: element.style.transform || '',\n            transition: element.style.transition || '',\n            boxShadow: element.style.boxShadow || '',\n            zIndex: element.style.zIndex || '',\n          };\n        }\n                \n        // Apply highlighting styles\n        element.style.transform = 'scale(1.2)';\n        element.style.transition = 'transform 0.2s ease-in-out';\n        element.style.boxShadow = `0 0 0 2px ${highlightColor}, 0 2px 4px rgba(0,0,0,0.3)`;\n        element.style.zIndex = '1000';\n      }\n    } catch (error) {\n      console.error('Error highlighting marker:', error);\n    }\n  }\n    \n  /**\n     * Unhighlight a marker\n     * @param {Object} marker - The marker to unhighlight\n     * @private\n     */\n  _unhighlightMarker(marker) {\n    try {\n      // Restore original styles for advanced markers\n      if (marker.content && marker.content._originalStyles) {\n        const element = marker.content;\n        const originalStyles = element._originalStyles;\n                \n        // Restore original styles\n        element.style.transform = originalStyles.transform || '';\n        element.style.transition = originalStyles.transition || '';\n        element.style.boxShadow = originalStyles.boxShadow || '';\n        element.style.zIndex = originalStyles.zIndex || '';\n      }\n    } catch (error) {\n      console.error('Error unhighlighting marker:', error);\n    }\n  }\n    \n  /**\n     * Highlight a polyline\n     * @param {Object} polyline - The polyline to highlight\n     * @param {Object} options - Highlight options\n     * @private\n     */\n  _highlightPolyline(polyline, options = {}) {\n    const highlightColor = options.color || '#1a73e8';\n        \n    polyline.setOptions({\n      strokeColor: highlightColor,\n      strokeWeight: polyline.originalStyles.strokeWeight + 2,\n      strokeOpacity: 1.0,\n      zIndex: 1000,\n    });\n  }\n    \n  /**\n     * Unhighlight a polyline\n     * @param {Object} polyline - The polyline to unhighlight\n     * @private\n     */\n  _unhighlightPolyline(polyline) {\n    if (!polyline.originalStyles) return;\n        \n    polyline.setOptions({\n      strokeColor: polyline.originalStyles.strokeColor,\n      strokeWeight: polyline.originalStyles.strokeWeight,\n      strokeOpacity: polyline.originalStyles.strokeOpacity,\n      zIndex: polyline.originalStyles.zIndex,\n    });\n  }\n    \n  /**\n     * Highlight a polygon\n     * @param {Object} polygon - The polygon to highlight\n     * @param {Object} options - Highlight options\n     * @private\n     */\n  _highlightPolygon(polygon, options = {}) {\n    const highlightColor = options.color || '#1a73e8';\n        \n    polygon.setOptions({\n      strokeColor: highlightColor,\n      strokeWeight: polygon.originalStyles.strokeWeight + 2,\n      strokeOpacity: 1.0,\n      fillOpacity: polygon.originalStyles.fillOpacity * 1.2,\n      zIndex: 1000,\n    });\n  }\n    \n  /**\n     * Unhighlight a polygon\n     * @param {Object} polygon - The polygon to unhighlight\n     * @private\n     */\n  _unhighlightPolygon(polygon) {\n    if (!polygon.originalStyles) return;\n        \n    polygon.setOptions({\n      strokeColor: polygon.originalStyles.strokeColor,\n      strokeWeight: polygon.originalStyles.strokeWeight,\n      strokeOpacity: polygon.originalStyles.strokeOpacity,\n      fillColor: polygon.originalStyles.fillColor,\n      fillOpacity: polygon.originalStyles.fillOpacity,\n      zIndex: polygon.originalStyles.zIndex,\n    });\n  }\n    \n  /**\n     * Handle feature click events\n     * @param {Object} feature - The original feature\n     * @param {Object} mapObject - The rendered map object\n     * @param {Object} event - The click event\n     * @private\n     */\n  _handleFeatureClick(feature, mapObject, event) {\n    // Implement selection logic if needed\n    // This should trigger appropriate callbacks or emit events\n    if (this.options.onFeatureClick) {\n      this.options.onFeatureClick({\n        feature,\n        renderedFeature: {\n          id: feature.id,\n          type: this._getFeatureType(mapObject),\n          originalFeature: feature,\n          renderedObject: mapObject,\n        },\n        originalEvent: event,\n      });\n    }\n  }\n    \n  /**\n     * Determine the feature type from a rendered map object\n     * @param {Object} mapObject - The rendered map object\n     * @returns {string} - The feature type\n     * @private\n     */\n  _getFeatureType(mapObject) {\n    if (mapObject instanceof google.maps.marker.AdvancedMarkerElement) {\n      return 'point';\n    } else if (mapObject instanceof google.maps.Polyline) {\n      return 'line';\n    } else if (mapObject instanceof google.maps.Polygon) {\n      return 'polygon';\n    }\n    return 'unknown';\n  }\n    \n  /**\n     * Create a marker icon based on style and feature properties\n     * @param {Object} style - The style configuration\n     * @param {Object} feature - The feature object\n     * @returns {Object} - Icon configuration object\n     * @private\n     */\n  _createMarkerIcon(style, feature) {\n    // Determine color based on style or GNSS quality\n    let color = style.color;\n        \n    // For GNSS points, use quality-based coloring if available\n    if (feature.properties?.source === 'gnss' && feature.properties?.quality !== undefined) {\n      color = this._getQualityColor(feature.properties.quality) || color;\n    }\n        \n    // Default color if none specified\n    color = color || '#FF5733';\n        \n    // Check if we're using a dual-element marker (pin + centered dot)\n    if (style.useDualMarker || style.showPinAndDot) {\n      // Enhanced traditional pin marker\n      const size = style.size || 32; // Larger default size\n      \n      // Create the main container div - this will be centered on the coordinate by Google Maps\n      const container = document.createElement('div');\n      container.style.position = 'relative';\n      container.style.width = '0';  // Zero width container\n      container.style.height = '0';  // Zero height container\n      \n      // Create an SVG pin instead of using div\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.setAttribute('width', `${size}px`);\n      svg.setAttribute('height', `${size * 1.6}px`); // Taller for pin shape\n      svg.setAttribute('viewBox', '0 0 32 52');\n      svg.style.position = 'absolute';\n      svg.style.left = `${-size/2}px`;  // Center horizontally\n      svg.style.top = `${-size * 1.6}px`;  // Position above the coordinate point\n      \n      // Create the traditional teardrop/pin shape\n      const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n      path.setAttribute('d', 'M16 0C7.2 0 0 7.2 0 16c0 9.6 16 36 16 36s16-26.4 16-36c0-8.8-7.2-16-16-16z');\n      path.setAttribute('fill', color);\n      path.setAttribute('stroke', style.outlineColor || 'white');\n      path.setAttribute('stroke-width', style.outlineWidth || 2);\n      \n      // Add the path to the SVG\n      svg.appendChild(path);\n      \n      // Create a small dot at the exact coordinate point\n      const dotElement = document.createElement('div');\n      dotElement.style.position = 'absolute';\n      dotElement.style.width = '6px';\n      dotElement.style.height = '6px';\n      dotElement.style.left = '-3px';  // Center the dot\n      dotElement.style.top = '-3px';   // Center the dot\n      dotElement.style.backgroundColor = 'black';\n      dotElement.style.border = '1px solid white';\n      dotElement.style.borderRadius = '50%';\n      dotElement.style.zIndex = '10';\n      \n      // Add elements to container\n      container.appendChild(svg);\n      container.appendChild(dotElement);\n      \n      // Log for debugging\n      console.log('Created SVG pin marker with absolute positioning from center');\n      \n      return { content: container };\n    } else if (style.iconUrl) {\n      // SIMPLE APPROACH: Image marker with absolute positioning\n      const width = style.iconSize?.[0] || 32;\n      const height = style.iconSize?.[1] || 32;\n      \n      // Create the main container div - this will be centered on the coordinate by Google Maps\n      const container = document.createElement('div');\n      container.style.position = 'relative';\n      container.style.width = '0';  // Zero width container\n      container.style.height = '0';  // Zero height container\n      \n      // Create and position the image element\n      const img = document.createElement('img');\n      img.src = style.iconUrl;\n      img.style.position = 'absolute';\n      img.style.width = `${width}px`;\n      img.style.height = `${height}px`;\n      img.style.left = `${-width/2}px`;  // Center horizontally\n      img.style.top = `${-height}px`;    // Bottom edge at the coordinate\n      \n      // Add the image to the container\n      container.appendChild(img);\n      \n      // Log for debugging\n      console.log('Created image marker with absolute positioning from center');\n      \n      return { content: container };\n    } else {\n      // SIMPLE APPROACH: Circle marker centered exactly on the coordinate\n      const size = style.size || 10;\n      \n      // Create the circle element\n      const circleDiv = document.createElement('div');\n      circleDiv.style.width = `${size * 2}px`;\n      circleDiv.style.height = `${size * 2}px`;\n      circleDiv.style.borderRadius = '50%';\n      circleDiv.style.backgroundColor = color;\n      circleDiv.style.border = `${style.outlineWidth || 2}px solid ${style.outlineColor || 'white'}`;\n      circleDiv.style.boxSizing = 'border-box';\n      circleDiv.style.position = 'relative';\n      \n      // Position exactly at the center\n      circleDiv.style.margin = `${-size}px 0 0 ${-size}px`;\n      \n      // Add crosshair if needed\n      if (style.showCrosshair) {\n        // Horizontal line\n        const hLine = document.createElement('div');\n        hLine.style.position = 'absolute';\n        hLine.style.width = '80%';\n        hLine.style.height = '1px';\n        hLine.style.backgroundColor = 'black';\n        hLine.style.left = '10%';\n        hLine.style.top = '50%';\n        \n        // Vertical line\n        const vLine = document.createElement('div');\n        vLine.style.position = 'absolute';\n        vLine.style.width = '1px';\n        vLine.style.height = '80%';\n        vLine.style.backgroundColor = 'black';\n        vLine.style.left = '50%';\n        vLine.style.top = '10%';\n        \n        circleDiv.appendChild(hLine);\n        circleDiv.appendChild(vLine);\n      }\n      \n      // Log for debugging\n      console.log('Created circle marker centered on coordinate');\n      \n      return { content: circleDiv };\n    }\n  }\n    \n  /**\n     * Check if Google Maps Advanced Markers are available\n     * @returns {boolean} - Whether Advanced Markers are available\n     * @private\n     */\n  _isAdvancedMarkerAvailable() {\n    return window.google && \n              window.google.maps && \n              window.google.maps.marker && \n              window.google.maps.marker.AdvancedMarkerElement;\n  }\n    \n  /**\n     * Get color based on GNSS fix quality\n     * @param {number} quality - The GNSS fix quality value\n     * @returns {string} - Color hex code\n     * @private\n     */\n  _getQualityColor(quality) {\n    const qualityColors = {\n      0: '#888888', // No fix - gray\n      1: '#FF0000', // GPS fix - red\n      2: '#FF9900', // DGPS fix - orange\n      4: '#00FF00', // RTK fixed - green\n      5: '#00FFFF',  // Float RTK - cyan\n    };\n        \n    return qualityColors[quality] || '#888888';\n  }\n}","/**\n * Layer Management for organizing map features\n * @module gnss/survey/map/LayerManager\n */\nexport class LayerManager {\n  /**\n     * Initialize the layer manager\n     * @param {MapInterface} map - The map interface to manage layers for\n     * @param {RenderingStrategy} renderingStrategy - The strategy for rendering features\n     * @param {Object} options - Configuration options\n     */\n  constructor(map, renderingStrategy, options = {}) {\n    this.map = map;\n    this.renderingStrategy = renderingStrategy;\n    this.options = options;\n        \n    // Layers storage - each layer contains features\n    this.layers = new Map();\n        \n    // Selection tracking\n    this.selectedFeatures = new Map();\n        \n    // Create default layer if specified\n    if (options.defaultLayer) {\n      this.createLayer(options.defaultLayer);\n    }\n  }\n    \n  /**\n     * Set up event listeners for a feature\n     * This ensures selection/deselection events are properly handled\n     * @param {Object} feature - The feature to set up listeners for\n     * @param {Object} renderedFeature - The rendered feature object\n     * @private\n     */\n  _setupFeatureEventListeners(feature, renderedFeature) {\n    if (!feature || !feature.on || typeof feature.on !== 'function') {\n      console.warn('Cannot set up event listeners: feature has no event emitter');\n      return;\n    }\n        \n    // Listen for selection events\n    feature.on('selected', () => {\n      console.log(`Feature ${feature.id} selected event received`);\n      this.selectedFeatures.set(feature.id, renderedFeature);\n      this.renderingStrategy.highlightFeature(renderedFeature).catch(error => {\n        console.error(`Error highlighting feature ${feature.id}:`, error);\n      });\n    });\n        \n    // Listen for deselection events\n    feature.on('deselected', () => {\n      console.log(`Feature ${feature.id} deselected event received`);\n      this.selectedFeatures.delete(feature.id);\n      this.renderingStrategy.unhighlightFeature(renderedFeature).catch(error => {\n        console.error(`Error unhighlighting feature ${feature.id}:`, error);\n      });\n    });\n  }\n    \n  /**\n     * Create a new layer\n     * @param {string} layerId - The unique identifier for the layer\n     * @param {Object} options - Layer options\n     * @returns {Object} - The created layer\n     */\n  createLayer(layerId, options = {}) {\n    if (this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' already exists`);\n    }\n        \n    const layer = {\n      id: layerId,\n      options,\n      features: new Map(),\n      visible: options.visible !== false,\n      selectable: options.selectable !== false,\n      editable: options.editable !== false,\n    };\n        \n    this.layers.set(layerId, layer);\n    return layer;\n  }\n    \n  /**\n     * Remove a layer and all its features\n     * @param {string} layerId - The ID of the layer to remove\n     * @returns {Promise<void>} - Promise that resolves when the layer is removed\n     */\n  async removeLayer(layerId) {\n    if (!this.layers.has(layerId)) {\n      return Promise.resolve();\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    // Remove all features from the map\n    const removePromises = [];\n    for (const feature of layer.features.values()) {\n      removePromises.push(this.renderingStrategy.removeFeature(feature));\n    }\n        \n    await Promise.all(removePromises);\n        \n    // Remove the layer\n    this.layers.delete(layerId);\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Set layer visibility\n     * @param {string} layerId - The ID of the layer\n     * @param {boolean} visible - Whether the layer should be visible\n     * @returns {Promise<void>} - Promise that resolves when visibility is set\n     */\n  async setLayerVisibility(layerId, visible) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    // If visibility is already set correctly, do nothing\n    if (layer.visible === visible) {\n      return Promise.resolve();\n    }\n        \n    layer.visible = visible;\n        \n    // Hide or show all features in the layer\n    const promises = [];\n    for (const feature of layer.features.values()) {\n      if (visible) {\n        // Re-render the feature if it was hidden\n        promises.push(\n          this.renderingStrategy.renderFeatureByType(\n            feature.originalFeature,\n            feature.type,\n          ),\n        );\n      } else {\n        // Remove the feature from the map\n        promises.push(this.renderingStrategy.removeFeature(feature));\n      }\n    }\n        \n    await Promise.all(promises);\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Add a feature to a layer\n     * @param {string} layerId - The ID of the layer to add to\n     * @param {Object} feature - The feature to add\n     * @param {string} featureType - The type of feature ('point', 'line', 'polygon')\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the rendered feature\n     */\n  async addFeature(layerId, feature, featureType, options = {}) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    // Only render if the layer is visible\n    let renderedFeature = null;\n        \n    if (layer.visible) {\n      switch (featureType) {\n      case 'point':\n        renderedFeature = await this.renderingStrategy.renderPoint(feature, options);\n        break;\n                    \n      case 'line':\n        renderedFeature = await this.renderingStrategy.renderLine(feature, options);\n        break;\n                    \n      case 'polygon':\n        renderedFeature = await this.renderingStrategy.renderPolygon(feature, options);\n        break;\n                    \n      default:\n        throw new Error(`Unsupported feature type: ${featureType}`);\n      }\n    } else {\n      // If layer is not visible, create a placeholder with the feature data\n      const id = feature.id || `feature_${Date.now()}_${Math.floor(Math.random() * 10000)}`;\n      renderedFeature = {\n        id,\n        originalFeature: feature,\n        renderedObject: null,\n        type: featureType,\n        highlighted: false,\n      };\n    }\n        \n    // Store the feature in the layer\n    layer.features.set(renderedFeature.id, renderedFeature);\n        \n    // Set up event listeners for selection/deselection\n    this._setupFeatureEventListeners(feature, renderedFeature);\n        \n    // If the feature is already selected, apply highlighting immediately\n    if (feature.selected) {\n      console.log(`Feature ${feature.id} added while already selected, applying highlight`);\n      this.selectedFeatures.set(feature.id, renderedFeature);\n      if (renderedFeature.renderedObject) {\n        this.renderingStrategy.highlightFeature(renderedFeature).catch(error => {\n          console.error(`Error highlighting feature ${feature.id}:`, error);\n        });\n      }\n    }\n        \n    return renderedFeature;\n  }\n    \n  /**\n     * Remove a feature from a layer\n     * @param {string} layerId - The ID of the layer\n     * @param {string} featureId - The ID of the feature to remove\n     * @returns {Promise<void>} - Promise that resolves when the feature is removed\n     */\n  async removeFeature(layerId, featureId) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    if (!layer.features.has(featureId)) {\n      return Promise.resolve();\n    }\n        \n    const renderedFeature = layer.features.get(featureId);\n    const originalFeature = renderedFeature.originalFeature;\n        \n    // If this is a selected feature, remove it from selection tracking\n    if (this.selectedFeatures.has(featureId)) {\n      console.log(`Removing selected feature ${featureId} from selection tracking`);\n      this.selectedFeatures.delete(featureId);\n    }\n        \n    // Remove event listeners from original feature if possible\n    if (originalFeature && typeof originalFeature.off === 'function') {\n      console.log(`Removing event listeners from feature ${featureId}`);\n      originalFeature.off('selected');\n      originalFeature.off('deselected');\n    }\n        \n    // Remove from map if it was rendered\n    if (renderedFeature.renderedObject) {\n      // Ensure it's unhighlighted before removal\n      if (renderedFeature.renderedObject.originalStyles) {\n        try {\n          await this.renderingStrategy.unhighlightFeature(renderedFeature);\n        } catch (error) {\n          console.error(`Error unhighlighting feature before removal: ${error.message}`);\n        }\n      }\n            \n      await this.renderingStrategy.removeFeature(renderedFeature);\n    }\n        \n    // Remove from layer\n    layer.features.delete(featureId);\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Update a feature in a layer\n     * @param {string} layerId - The ID of the layer\n     * @param {string} featureId - The ID of the feature to update\n     * @param {Object} updatedFeature - The updated feature data\n     * @param {Object} options - Rendering options\n     * @returns {Promise<Object>} - Promise that resolves with the updated feature\n     */\n  async updateFeature(layerId, featureId, updatedFeature, options = {}) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    if (!layer.features.has(featureId)) {\n      throw new Error(`Feature with ID '${featureId}' does not exist in layer '${layerId}'`);\n    }\n        \n    const existingFeature = layer.features.get(featureId);\n        \n    // If layer is visible, update the rendered feature\n    let updatedRenderedFeature;\n        \n    if (layer.visible && existingFeature.renderedObject) {\n      updatedRenderedFeature = await this.renderingStrategy.updateFeature(\n        existingFeature,\n        updatedFeature,\n        options,\n      );\n    } else {\n      // If not visible, just update the data\n      updatedRenderedFeature = {\n        ...existingFeature,\n        originalFeature: updatedFeature,\n      };\n    }\n        \n    // Update in layer\n    layer.features.set(featureId, updatedRenderedFeature);\n        \n    return updatedRenderedFeature;\n  }\n    \n  /**\n     * Get all layers\n     * @returns {Array<Object>} - Array of layer objects\n     */\n  getLayers() {\n    return Array.from(this.layers.values());\n  }\n    \n  /**\n     * Get a specific layer\n     * @param {string} layerId - The ID of the layer to get\n     * @returns {Object|null} - The layer object or null if not found\n     */\n  getLayer(layerId) {\n    return this.layers.get(layerId) || null;\n  }\n    \n  /**\n     * Get all features in a layer\n     * @param {string} layerId - The ID of the layer\n     * @returns {Array<Object>} - Array of feature objects\n     */\n  getLayerFeatures(layerId) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n    return Array.from(layer.features.values());\n  }\n    \n  /**\n     * Get a specific feature from a layer\n     * @param {string} layerId - The ID of the layer\n     * @param {string} featureId - The ID of the feature\n     * @returns {Object|null} - The feature object or null if not found\n     */\n  getFeature(layerId, featureId) {\n    if (!this.layers.has(layerId)) {\n      return null;\n    }\n        \n    const layer = this.layers.get(layerId);\n    return layer.features.get(featureId) || null;\n  }\n    \n  /**\n     * Fit the map view to show all features in a layer\n     * @param {string} layerId - The ID of the layer\n     * @param {Object} options - Options for fitting the bounds\n     * @returns {Promise<void>} - Promise that resolves when the map is fitted\n     */\n  async fitLayerToView(layerId, options = {}) {\n    if (!this.layers.has(layerId)) {\n      throw new Error(`Layer with ID '${layerId}' does not exist`);\n    }\n        \n    const layer = this.layers.get(layerId);\n        \n    if (layer.features.size === 0) {\n      return Promise.resolve();\n    }\n        \n    // Collect all coordinates from all features\n    const allCoordinates = [];\n        \n    for (const feature of layer.features.values()) {\n      const featureCoords = this._getFeatureCoordinates(feature);\n      allCoordinates.push(...featureCoords);\n    }\n        \n    if (allCoordinates.length === 0) {\n      return Promise.resolve();\n    }\n        \n    // Fit map to these coordinates\n    await this.map.fitBounds(allCoordinates, options);\n        \n    return Promise.resolve();\n  }\n    \n  /**\n     * Get coordinates from a feature based on its type\n     * @param {Object} feature - The feature to extract coordinates from\n     * @returns {Array<Coordinate>} - Array of coordinates\n     * @private\n     */\n  _getFeatureCoordinates(feature) {\n    if (!feature.originalFeature) {\n      return [];\n    }\n        \n    switch (feature.type) {\n    case 'point':\n      return [feature.originalFeature.coordinate];\n                \n    case 'line':\n    case 'polygon':\n      return feature.originalFeature.coordinates || [];\n                \n    default:\n      return [];\n    }\n  }\n}","/**\n * Map Module - Main entry point\n * @module gnss/survey/map\n */\n\n// Core interfaces\nexport { MapInterface } from './MapInterface.js';\nexport { Map3DInterface } from './Map3DInterface.js';\nexport { ElevationService } from './ElevationService.js';\n\n// Map implementations\nexport { GoogleMapsAdapter } from './GoogleMapsAdapter.js';\nexport { LeafletAdapter } from './LeafletAdapter.js';\n\n// Elevation service implementations\nexport { GoogleMapsElevationService } from './GoogleMapsElevationService.js';\n\n// Factory for creating map instances\nexport { MapFactory } from './MapFactory.js';\n\n// Rendering strategies\nexport { RenderingStrategy, GoogleMapsRenderingStrategy } from './rendering/index.js';\n\n// Layer management\nexport { LayerManager } from './LayerManager.js';\n\n/**\n * Create a map instance with the specified provider\n * @param {string} provider - The map provider to use ('google', 'leaflet', etc.)\n * @param {Object} options - Configuration options for the map\n * @returns {MapInterface} - The created map instance\n */\nexport function createMap(provider, options = {}) {\n  return MapFactory.createMap(provider, options);\n}\n\n/**\n * Get a list of supported map providers\n * @returns {Array<string>} - Array of supported provider names\n */\nexport function getSupportedProviders() {\n  return MapFactory.getSupportedProviders();\n}","/**\n * SimplifiedDrawingTool.js\n * A simplified drawing tool implementation for basic usage\n */\n\nimport { EventEmitter } from '../core/event-emitter.js';\nimport { Coordinate } from '../core/Coordinate.js';\n\n/**\n * Simplified drawing tool that works with Google Maps\n */\nexport class SimplifiedDrawingTool extends EventEmitter {\n  /**\n   * Create a new SimplifiedDrawingTool instance\n   * @param {Object} options - Tool configuration\n   */\n  constructor(options = {}) {\n    super();\n    \n    this.map = options.map;\n    this.geometryEngine = options.geometryEngine;\n    \n    this.options = {\n      mode: 'point',\n      enable3D: true,\n      continuousDrawing: true,\n      pointSymbol: {\n        color: '#4285F4',\n        size: 8,\n      },\n      lineSymbol: {\n        color: '#4285F4',\n        width: 3,\n      },\n      polygonSymbol: {\n        fillColor: 'rgba(66, 133, 244, 0.3)',\n        outlineColor: '#4285F4',\n        outlineWidth: 2,\n      },\n      ...options,\n    };\n    \n    this.isActive = false;\n    this.listeners = [];\n    this.currentFeature = null;\n    this.vertices = [];\n    this.markers = [];\n    this.polyline = null;\n    this.polygon = null;\n  }\n  \n  /**\n   * Activate the drawing tool\n   * @param {Object} options - Activation options\n   */\n  activate(options = {}) {\n    if (this.isActive) {\n      this._reset();\n    }\n    \n    // Update options\n    Object.assign(this.options, options);\n    \n    // Mark as active\n    this.isActive = true;\n    \n    // Add click listener to map\n    this._addMapListeners();\n    \n    // Log activation info\n    console.log(`SimplifiedDrawingTool activated in ${this.options.mode} mode`);\n    \n    // Emit activation event\n    this.emit('activated', { mode: this.options.mode });\n  }\n  \n  /**\n   * Add map event listeners\n   * @private\n   */\n  _addMapListeners() {\n    // Remove any existing listeners first\n    this._removeMapListeners();\n    \n    // Add click listener to map\n    const clickListener = google.maps.event.addListener(this.map, 'click', this._handleMapClick.bind(this));\n    this.listeners.push(clickListener);\n    \n    // Add mousemove listener for lines and polygons\n    if (this.options.mode === 'line' || this.options.mode === 'polygon') {\n      const moveListener = google.maps.event.addListener(this.map, 'mousemove', this._handleMapMouseMove.bind(this));\n      this.listeners.push(moveListener);\n    }\n  }\n  \n  /**\n   * Remove map event listeners\n   * @private\n   */\n  _removeMapListeners() {\n    this.listeners.forEach(listener => {\n      google.maps.event.removeListener(listener);\n    });\n    this.listeners = [];\n  }\n  \n  /**\n   * Handle map click events\n   * @param {Object} event - Google Maps click event\n   * @private\n   */\n  _handleMapClick(event) {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    \n    console.log(`Map clicked at ${lat}, ${lng} in ${this.options.mode} mode`);\n    \n    switch (this.options.mode) {\n    case 'point':\n      this._createPoint(lat, lng);\n      break;\n        \n    case 'line':\n      this._addLineVertex(lat, lng);\n      break;\n        \n    case 'polygon':\n      this._addPolygonVertex(lat, lng);\n      break;\n    }\n  }\n  \n  /**\n   * Handle map mouse move events\n   * @param {Object} event - Google Maps mouse move event\n   * @private\n   */\n  _handleMapMouseMove(event) {\n    if (!this.isActive || this.vertices.length === 0) return;\n    \n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    \n    // Update preview line/polygon\n    if (this.options.mode === 'line') {\n      this._updateLinePreview(lat, lng);\n    } else if (this.options.mode === 'polygon') {\n      this._updatePolygonPreview(lat, lng);\n    }\n  }\n  \n  /**\n   * Create a point feature\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @private\n   */\n  _createPoint(lat, lng) {\n    // Create marker\n    const marker = new google.maps.Marker({\n      position: { lat, lng },\n      map: this.map,\n      title: `Point (${lat.toFixed(6)}, ${lng.toFixed(6)})`,\n      animation: google.maps.Animation.DROP,\n    });\n    \n    this.markers.push(marker);\n    \n    // Emit event\n    const coordinate = new Coordinate(lat, lng, 0);\n    this.emit('featureCreated', {\n      type: 'point',\n      coordinate: coordinate,\n      marker: marker,\n    });\n    \n    // If continuousDrawing is false, deactivate the tool\n    if (!this.options.continuousDrawing) {\n      this.deactivate();\n    }\n  }\n  \n  /**\n   * Add a vertex to the line\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @private\n   */\n  _addLineVertex(lat, lng) {\n    // Add vertex to line\n    this.vertices.push({ lat, lng });\n    \n    // Create marker for vertex\n    const marker = new google.maps.Marker({\n      position: { lat, lng },\n      map: this.map,\n      title: `Vertex ${this.vertices.length}`,\n      icon: {\n        path: google.maps.SymbolPath.CIRCLE,\n        fillColor: this.options.lineSymbol.color,\n        fillOpacity: 1,\n        strokeWeight: 2,\n        strokeColor: '#FFFFFF',\n        scale: 6,\n      },\n    });\n    \n    this.markers.push(marker);\n    \n    // If this is the first vertex, create a new polyline\n    if (this.vertices.length === 1) {\n      this.polyline = new google.maps.Polyline({\n        path: this.vertices,\n        geodesic: true,\n        strokeColor: this.options.lineSymbol.color,\n        strokeOpacity: 1.0,\n        strokeWeight: this.options.lineSymbol.width,\n        map: this.map,\n      });\n    } else {\n      // Otherwise update the existing polyline\n      this.polyline.setPath(this.vertices);\n      \n      // If double-clicked and we have at least 2 points, complete the line\n      if (this.vertices.length >= 2) {\n        // Double-click is handled automatically by listening for two clicks in quick succession\n        const now = Date.now();\n        if (this._lastClickTime && now - this._lastClickTime < 300) {\n          this._completeLine();\n          return;\n        }\n        this._lastClickTime = now;\n      }\n    }\n  }\n  \n  /**\n   * Add a vertex to the polygon\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @private\n   */\n  _addPolygonVertex(lat, lng) {\n    // Add vertex to polygon\n    this.vertices.push({ lat, lng });\n    \n    // Create marker for vertex\n    const marker = new google.maps.Marker({\n      position: { lat, lng },\n      map: this.map,\n      title: `Vertex ${this.vertices.length}`,\n      icon: {\n        path: google.maps.SymbolPath.CIRCLE,\n        fillColor: this.options.polygonSymbol.outlineColor,\n        fillOpacity: 1,\n        strokeWeight: 2,\n        strokeColor: '#FFFFFF',\n        scale: 6,\n      },\n    });\n    \n    this.markers.push(marker);\n    \n    // If this is the first vertex, create a new polygon\n    if (this.vertices.length === 1) {\n      // Start with a polyline until we have 3 points\n      this.polyline = new google.maps.Polyline({\n        path: this.vertices,\n        geodesic: true,\n        strokeColor: this.options.polygonSymbol.outlineColor,\n        strokeOpacity: 1.0,\n        strokeWeight: this.options.polygonSymbol.outlineWidth,\n        map: this.map,\n      });\n    } else if (this.vertices.length === 3) {\n      // With 3 points, we can create a polygon\n      if (this.polyline) {\n        this.polyline.setMap(null);\n        this.polyline = null;\n      }\n      \n      // Create polygon\n      this.polygon = new google.maps.Polygon({\n        paths: [...this.vertices, this.vertices[0]],\n        strokeColor: this.options.polygonSymbol.outlineColor,\n        strokeOpacity: 1.0,\n        strokeWeight: this.options.polygonSymbol.outlineWidth,\n        fillColor: this.options.polygonSymbol.fillColor,\n        fillOpacity: 0.35,\n        map: this.map,\n      });\n      \n      // Double-click is handled automatically by listening for two clicks in quick succession\n      const now = Date.now();\n      if (this._lastClickTime && now - this._lastClickTime < 300) {\n        this._completePolygon();\n        return;\n      }\n      this._lastClickTime = now;\n    } else if (this.vertices.length > 3) {\n      // Update existing polygon\n      this.polygon.setPaths([...this.vertices, this.vertices[0]]);\n      \n      // Double-click is handled automatically by listening for two clicks in quick succession\n      const now = Date.now();\n      if (this._lastClickTime && now - this._lastClickTime < 300) {\n        this._completePolygon();\n        return;\n      }\n      this._lastClickTime = now;\n    } else {\n      // Update polyline\n      this.polyline.setPath(this.vertices);\n    }\n  }\n  \n  /**\n   * Update the line preview\n   * @param {number} lat - Current mouse latitude\n   * @param {number} lng - Current mouse longitude\n   * @private\n   */\n  _updateLinePreview(lat, lng) {\n    if (this.vertices.length === 0 || !this.polyline) return;\n    \n    // Create a preview path with the current vertices plus the mouse position\n    const previewPath = [...this.vertices, { lat, lng }];\n    this.polyline.setPath(previewPath);\n  }\n  \n  /**\n   * Update the polygon preview\n   * @param {number} lat - Current mouse latitude\n   * @param {number} lng - Current mouse longitude\n   * @private\n   */\n  _updatePolygonPreview(lat, lng) {\n    if (this.vertices.length === 0) return;\n    \n    if (this.vertices.length < 3) {\n      // If we have less than 3 vertices, update the polyline\n      if (this.polyline) {\n        const previewPath = [...this.vertices, { lat, lng }];\n        this.polyline.setPath(previewPath);\n      }\n    } else {\n      // If we have 3 or more vertices, update the polygon\n      if (this.polygon) {\n        const previewPath = [...this.vertices, { lat, lng }, this.vertices[0]];\n        this.polygon.setPaths(previewPath);\n      }\n    }\n  }\n  \n  /**\n   * Complete the line drawing\n   * @private\n   */\n  _completeLine() {\n    if (this.vertices.length < 2) return;\n    \n    // Create final polyline\n    const finalLine = new google.maps.Polyline({\n      path: this.vertices,\n      geodesic: true,\n      strokeColor: this.options.lineSymbol.color,\n      strokeOpacity: 1.0,\n      strokeWeight: this.options.lineSymbol.width,\n      map: this.map,\n    });\n    \n    // Emit event\n    const coordinates = this.vertices.map(v => new Coordinate(v.lat, v.lng, 0));\n    this.emit('featureCreated', {\n      type: 'line',\n      coordinates: coordinates,\n      polyline: finalLine,\n    });\n    \n    // Reset the drawing\n    this._reset();\n    \n    // If continuousDrawing is false, deactivate\n    if (!this.options.continuousDrawing) {\n      this.deactivate();\n    }\n  }\n  \n  /**\n   * Complete the polygon drawing\n   * @private\n   */\n  _completePolygon() {\n    if (this.vertices.length < 3) return;\n    \n    // Create final polygon\n    const finalPolygon = new google.maps.Polygon({\n      paths: this.vertices,\n      strokeColor: this.options.polygonSymbol.outlineColor,\n      strokeOpacity: 1.0,\n      strokeWeight: this.options.polygonSymbol.outlineWidth,\n      fillColor: this.options.polygonSymbol.fillColor,\n      fillOpacity: 0.35,\n      map: this.map,\n    });\n    \n    // Emit event\n    const coordinates = this.vertices.map(v => new Coordinate(v.lat, v.lng, 0));\n    this.emit('featureCreated', {\n      type: 'polygon',\n      coordinates: coordinates,\n      polygon: finalPolygon,\n    });\n    \n    // Reset the drawing\n    this._reset();\n    \n    // If continuousDrawing is false, deactivate\n    if (!this.options.continuousDrawing) {\n      this.deactivate();\n    }\n  }\n  \n  /**\n   * Reset the drawing state\n   * @private\n   */\n  _reset() {\n    // Clear temporary markers\n    this.markers.forEach(marker => marker.setMap(null));\n    this.markers = [];\n    \n    // Clear temporary polyline\n    if (this.polyline) {\n      this.polyline.setMap(null);\n      this.polyline = null;\n    }\n    \n    // Clear temporary polygon\n    if (this.polygon) {\n      this.polygon.setMap(null);\n      this.polygon = null;\n    }\n    \n    // Reset vertices\n    this.vertices = [];\n    \n    // Reset last click time\n    this._lastClickTime = null;\n  }\n  \n  /**\n   * Deactivate the drawing tool\n   */\n  deactivate() {\n    if (!this.isActive) return;\n    \n    // Remove listeners\n    this._removeMapListeners();\n    \n    // Reset drawing state\n    this._reset();\n    \n    // Mark as inactive\n    this.isActive = false;\n    \n    // Emit deactivation event\n    this.emit('deactivated');\n  }\n}","/**\n * GIS Survey Module - Main entry point\n *\n * This module provides a complete set of 3D-first, map-agnostic survey tools\n * for geospatial applications. It supports full 3D visualization and\n * calculations, and can optionally integrate with GNSS receivers.\n */\n\n// Import core module functionality\nimport { EventEmitter } from './core/event-emitter.js';\nimport { Coordinate } from './core/Coordinate.js';\nimport { GeometryEngine } from './core/GeometryEngine.js';\nimport { CoordinateUtils } from './core/CoordinateUtils.js';\nimport { GeoidModel } from './core/GeoidModel.js';\nimport { TransformerFactory } from './core/TransformerFactory.js';\nimport { CoordinateTransformer } from './core/CoordinateTransformer.js';\nimport { SimpleWGS84Transformer } from './core/SimpleWGS84Transformer.js';\nimport { initializeCore } from './core/index.js';\n\n// Import survey manager and tools\nimport { SurveyManager } from './tools/SurveyManager.js';\nimport { DrawingTool } from './tools/DrawingTool.js';\nimport { MeasurementTool } from './tools/MeasurementTool.js';\nimport { EditingTool } from './tools/EditingTool.js';\nimport { OffsetTool } from './tools/OffsetTool.js';\nimport { SnappingManager } from './tools/SnappingManager.js';\nimport { ToolBase } from './tools/ToolBase.js';\n\n// Import feature implementations\nimport {\n  FeatureBase,\n  PointFeature,\n  LineFeature,\n  PolygonFeature,\n  FeatureCollection,\n  createPoint,\n  createLine,\n  createPolygon,\n  createFeatureCollection,\n  importFromGeoJSON,\n} from './features/index.js';\n\n// Import map implementations\nimport {\n  MapInterface,\n  Map3DInterface,\n  ElevationService,\n  GoogleMapsAdapter,\n  LeafletAdapter,\n  GoogleMapsElevationService,\n  MapFactory,\n  LayerManager,\n  RenderingStrategy,\n  GoogleMapsRenderingStrategy,\n  createMap,\n  getSupportedProviders,\n} from './map/index.js';\n\n// Backward compatibility - Import SimplifiedDrawingTool for existing code\nimport { SimplifiedDrawingTool } from './tools/SimplifiedDrawingTool.js';\n\n/**\n * Initialize the survey module.\n *\n * @param {Object} [options] - Initialization options\n * @param {Object} [options.core] - Core module options\n * @param {Object} [options.map] - Map provider options\n * @returns {Promise<Object>} Promise that resolves to the survey interface\n */\nexport async function initialize(options = {}) {\n  // Initialize the core coordinate system and geometry engine\n  await initializeCore(options.core);\n\n  // Return an interface with core functionality implemented\n  return {\n    version: VERSION,\n    core: {\n      initialized: true,\n      Coordinate,\n      GeometryEngine,\n      GeoidModel,\n      CoordinateUtils,\n      TransformerFactory,\n    },\n  };\n}\n\n/**\n * Create a new Survey instance.\n * @param {Object} mapInstance - The map instance to use\n * @param {string} mapType - The type of map provider ('google', 'leaflet', 'cesium')\n * @param {Object} [options] - Configuration options\n * @returns {Promise<Object>} A promise that resolves to the SurveyManager instance\n */\nexport async function createSurvey(mapInstance, mapType, options = {}) {\n  // Initialize the survey module\n  await initialize(options);\n\n  // Create appropriate map adapter\n  const mapInterface = MapFactory.createMap(mapType, {\n    mapInstance,\n    ...options.mapOptions,\n  });\n\n  // Create the survey manager\n  const surveyManager = new SurveyManager({\n    mapInterface,\n    settings: {\n      enable3D: options.enable3D === undefined ? true : options.enable3D,\n      continuousDrawing: options.continuousDrawing === undefined ? true : options.continuousDrawing,\n      autoSave: options.autoSave || false,\n      undoLevels: options.undoLevels || 20,\n      elevationProvider: options.elevationProvider || 'mapInterface',\n      ...options.settings,\n    },\n  });\n\n  // Initialize layer manager if needed\n  if (options.initializeLayers !== false) {\n    const renderingStrategy = mapType === 'google' ?\n      new GoogleMapsRenderingStrategy(mapInterface) :\n      new RenderingStrategy(mapInterface);\n\n    surveyManager.layerManager = new LayerManager(mapInterface, renderingStrategy, {\n      defaultLayer: 'main',\n    });\n\n    // Create standard layers\n    surveyManager.layerManager.createLayer('points', { name: 'Points', visible: true });\n    surveyManager.layerManager.createLayer('lines', { name: 'Lines', visible: true });\n    surveyManager.layerManager.createLayer('polygons', { name: 'Polygons', visible: true });\n    surveyManager.layerManager.createLayer('working', {\n      name: 'Working Features',\n      visible: true,\n      zIndex: 1000,\n    });\n  }\n\n  return surveyManager;\n}\n\n// Export core classes\nexport {\n  Coordinate,\n  GeometryEngine,\n  GeoidModel,\n  TransformerFactory,\n  CoordinateTransformer,\n  SimpleWGS84Transformer,\n  CoordinateUtils,\n  EventEmitter,\n};\n\n// Export Feature classes and utilities\nexport {\n  FeatureBase,\n  PointFeature,\n  LineFeature,\n  PolygonFeature,\n  FeatureCollection,\n  createPoint,\n  createLine,\n  createPolygon,\n  createFeatureCollection,\n  importFromGeoJSON,\n};\n\n// Export Map classes and utilities\nexport {\n  MapInterface,\n  Map3DInterface,\n  ElevationService,\n  GoogleMapsAdapter,\n  LeafletAdapter,\n  GoogleMapsElevationService,\n  MapFactory,\n  LayerManager,\n  RenderingStrategy,\n  GoogleMapsRenderingStrategy,\n  createMap,\n  getSupportedProviders,\n};\n\n// Export Tool classes\nexport {\n  SurveyManager,\n  DrawingTool,\n  MeasurementTool,\n  EditingTool,\n  OffsetTool,\n  SnappingManager,\n  ToolBase,\n  SimplifiedDrawingTool,\n};\n\n// Export initialization functions\nexport { initializeCore };\n\n// Create a namespace for survey module\nexport const Survey = {\n  Manager: SurveyManager,\n  Core: {\n    Coordinate,\n    GeometryEngine,\n    GeoidModel,\n    CoordinateUtils,\n    TransformerFactory,\n    CoordinateTransformer,\n    SimpleWGS84Transformer,\n    EventEmitter,\n  },\n  Features: {\n    FeatureBase,\n    PointFeature,\n    LineFeature,\n    PolygonFeature,\n    FeatureCollection,\n    createPoint,\n    createLine,\n    createPolygon,\n    createFeatureCollection,\n    importFromGeoJSON,\n  },\n  Map: {\n    MapInterface,\n    Map3DInterface,\n    ElevationService,\n    GoogleMapsAdapter,\n    LeafletAdapter,\n    GoogleMapsElevationService,\n    MapFactory,\n    LayerManager,\n    RenderingStrategy,\n    GoogleMapsRenderingStrategy,\n    createMap,\n    getSupportedProviders,\n  },\n  Tools: {\n    DrawingTool,\n    MeasurementTool,\n    EditingTool,\n    OffsetTool,\n    SnappingManager,\n    ToolBase,\n    SimplifiedDrawingTool,\n  },\n};\n\n// Export version and build information\nexport const VERSION = '1.0.0';\nexport const BUILD_DATE = new Date().toISOString();"],"names":["MapFactory"],"mappings":"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"}